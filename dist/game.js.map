{
  "version": 3,
  "sources": ["../node_modules/kaboom/src/math.ts", "../node_modules/kaboom/src/utils.ts", "../node_modules/kaboom/src/gamepad.json", "../node_modules/kaboom/src/app.ts", "../node_modules/kaboom/src/easings.ts", "../node_modules/kaboom/src/timer.ts", "../node_modules/kaboom/src/kaboom.ts", "../code/main.ts"],
  "sourcesContent": ["import {\n\tPoint,\n\tRNGValue,\n\tLerpValue,\n\tVec2Args,\n} from \"./types\"\n\nexport function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180\n}\n\nexport function rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI\n}\n\nexport function clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min)\n\t}\n\treturn Math.min(Math.max(val, min), max)\n}\n\nexport function lerp<V extends LerpValue>(\n\ta: V,\n\tb: V,\n\tt: number,\n): V {\n\tif (typeof a === \"number\" && typeof b === \"number\") {\n\t\treturn a + (b - a) * t as V\n\t} else if (a instanceof Vec2 && b instanceof Vec2) {\n\t\treturn a.lerp(b, t) as V\n\t} else if (a instanceof Color && b instanceof Color) {\n\t\treturn a.lerp(b, t) as V\n\t}\n\tthrow new Error(`Bad value for lerp(): ${a}, ${b}. Only number, Vec2 and Color is supported.`)\n}\n\nexport function map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2)\n}\n\nexport function mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2)\n}\n\nexport class Vec2 {\n\tx: number = 0\n\ty: number = 0\n\tconstructor(x: number = 0, y: number = x) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t}\n\tstatic fromAngle(deg: number) {\n\t\tconst angle = deg2rad(deg)\n\t\treturn new Vec2(Math.cos(angle), Math.sin(angle))\n\t}\n\tstatic LEFT = new Vec2(-1, 0)\n\tstatic RIGHT = new Vec2(1, 0)\n\tstatic UP = new Vec2(0, -1)\n\tstatic DOWN = new Vec2(0, 1)\n\tclone(): Vec2 {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tadd(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x + p2.x, this.y + p2.y)\n\t}\n\tsub(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x - p2.x, this.y - p2.y)\n\t}\n\tscale(...args: Vec2Args): Vec2 {\n\t\tconst s = vec2(...args)\n\t\treturn new Vec2(this.x * s.x, this.y * s.y)\n\t}\n\tdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).len()\n\t}\n\tsdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).slen()\n\t}\n\tlen(): number {\n\t\treturn Math.sqrt(this.dot(this))\n\t}\n\tslen(): number {\n\t\treturn this.dot(this)\n\t}\n\tunit(): Vec2 {\n\t\tconst len = this.len()\n\t\treturn len === 0 ? new Vec2(0) : this.scale(1 / len)\n\t}\n\tnormal(): Vec2 {\n\t\treturn new Vec2(this.y, -this.x)\n\t}\n\treflect(normal: Vec2) {\n\t\treturn this.sub(normal.scale(2 * this.dot(normal)))\n\t}\n\tproject(on: Vec2) {\n\t\treturn on.scale(on.dot(this) / on.len())\n\t}\n\treject(on: Vec2) {\n\t\treturn this.sub(this.project(on))\n\t}\n\tdot(p2: Vec2): number {\n\t\treturn this.x * p2.x + this.y * p2.y\n\t}\n\tcross(p2: Vec2): number {\n\t\treturn this.x * p2.y - this.y * p2.x\n\t}\n\tangle(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x))\n\t}\n\tangleBetween(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.cross(p2), this.dot(p2)))\n\t}\n\tlerp(dest: Vec2, t: number): Vec2 {\n\t\treturn new Vec2(lerp(this.x, dest.x, t), lerp(this.y, dest.y, t))\n\t}\n\tslerp(dest: Vec2, t: number): Vec2 {\n\t\tconst cos = this.dot(dest)\n\t\tconst sin = this.cross(dest)\n\t\tconst angle = Math.atan2(sin, cos)\n\t\treturn this\n\t\t\t.scale(Math.sin((1 - t) * angle))\n\t\t\t.add(dest.scale(Math.sin(t * angle)))\n\t\t\t.scale(1 / sin)\n\t}\n\tisZero(): boolean {\n\t\treturn this.x === 0 && this.y === 0\n\t}\n\ttoFixed(n: number): Vec2 {\n\t\treturn new Vec2(Number(this.x.toFixed(n)), Number(this.y.toFixed(n)))\n\t}\n\ttransform(m: Mat4): Vec2 {\n\t\treturn m.multVec2(this)\n\t}\n\teq(other: Vec2): boolean {\n\t\treturn this.x === other.x && this.y === other.y\n\t}\n\tbbox(): Rect {\n\t\treturn new Rect(this, 0, 0)\n\t}\n\ttoString(): string {\n\t\treturn `vec2(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`\n\t}\n}\n\nexport function vec2(...args: Vec2Args): Vec2 {\n\tif (args.length === 1) {\n\t\tif (args[0] instanceof Vec2) {\n\t\t\treturn new Vec2(args[0].x, args[0].y)\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn new Vec2(...args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Vec2(...args)\n}\n\nexport class Color {\n\n\tr: number = 255\n\tg: number = 255\n\tb: number = 255\n\n\tconstructor(r: number, g: number, b: number) {\n\t\tthis.r = clamp(r, 0, 255)\n\t\tthis.g = clamp(g, 0, 255)\n\t\tthis.b = clamp(b, 0, 255)\n\t}\n\n\tstatic fromArray(arr: number[]) {\n\t\treturn new Color(arr[0], arr[1], arr[2])\n\t}\n\n\tstatic fromHex(hex: string | number) {\n\t\tif (typeof hex === \"number\") {\n\t\t\treturn new Color(\n\t\t\t\t(hex >> 16) & 0xff,\n\t\t\t\t(hex >> 8) & 0xff,\n\t\t\t\t(hex >> 0) & 0xff,\n\t\t\t)\n\t\t} else if (typeof hex === \"string\") {\n\t\t\tconst result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\t\t\treturn new Color(\n\t\t\t\tparseInt(result[1], 16),\n\t\t\t\tparseInt(result[2], 16),\n\t\t\t\tparseInt(result[3], 16),\n\t\t\t)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid hex color format\")\n\t\t}\n\t}\n\n\tstatic fromHSL(h: number, s: number, l: number) {\n\n\t\tif (s == 0){\n\t\t\treturn new Color(255 * l, 255 * l, 255 * l)\n\t\t}\n\n\t\tconst hue2rgb = (p, q, t) => {\n\t\t\tif (t < 0) t += 1\n\t\t\tif (t > 1) t -= 1\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t\n\t\t\tif (t < 1 / 2) return q\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6\n\t\t\treturn p\n\t\t}\n\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s\n\t\tconst p = 2 * l - q\n\t\tconst r = hue2rgb(p, q, h + 1 / 3)\n\t\tconst g = hue2rgb(p, q, h)\n\t\tconst b = hue2rgb(p, q, h - 1 / 3)\n\n\t\treturn new Color(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255))\n\n\t}\n\n\tstatic RED = new Color(255, 0, 0)\n\tstatic GREEN = new Color(0, 255, 0)\n\tstatic BLUE = new Color(0, 0, 255)\n\tstatic YELLOW = new Color(255, 255, 0)\n\tstatic MAGENTA = new Color(255, 0, 255)\n\tstatic CYAN = new Color(0, 255, 255)\n\tstatic WHITE = new Color(255, 255, 255)\n\tstatic BLACK = new Color(0, 0, 0)\n\n\tclone(): Color {\n\t\treturn new Color(this.r, this.g, this.b)\n\t}\n\n\tlighten(a: number): Color {\n\t\treturn new Color(this.r + a, this.g + a, this.b + a)\n\t}\n\n\tdarken(a: number): Color {\n\t\treturn this.lighten(-a)\n\t}\n\n\tinvert(): Color {\n\t\treturn new Color(255 - this.r, 255 - this.g, 255 - this.b)\n\t}\n\n\tmult(other: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.r * other.r / 255,\n\t\t\tthis.g * other.g / 255,\n\t\t\tthis.b * other.b / 255,\n\t\t)\n\t}\n\n\tlerp(dest: Color, t: number): Color {\n\t\treturn new Color(\n\t\t\tlerp(this.r, dest.r, t),\n\t\t\tlerp(this.g, dest.g, t),\n\t\t\tlerp(this.b, dest.b, t),\n\t\t)\n\t}\n\n\teq(other: Color): boolean {\n\t\treturn this.r === other.r\n\t\t\t&& this.g === other.g\n\t\t\t&& this.b === other.b\n\n\t}\n\n\ttoString(): string {\n\t\treturn `rgb(${this.r}, ${this.g}, ${this.b})`\n\t}\n\n\ttoHex(): string {\n\t\treturn \"#\" + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1)\n\t}\n\n}\n\nexport function rgb(...args): Color {\n\tif (args.length === 0) {\n\t\treturn new Color(255, 255, 255)\n\t} else if (args.length === 1) {\n\t\tif (args[0] instanceof Color) {\n\t\t\treturn args[0].clone()\n\t\t} else if (typeof args[0] === \"string\") {\n\t\t\treturn Color.fromHex(args[0])\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn Color.fromArray(args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Color(...args)\n}\n\nexport const hsl2rgb = (h, s, l) => Color.fromHSL(h, s, l)\n\nexport class Quad {\n\tx: number = 0\n\ty: number = 0\n\tw: number = 1\n\th: number = 1\n\tconstructor(x: number, y: number, w: number, h: number) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t\tthis.w = w\n\t\tthis.h = h\n\t}\n\tscale(other: Quad): Quad {\n\t\treturn new Quad(\n\t\t\tthis.x + this.w * other.x,\n\t\t\tthis.y + this.h * other.y,\n\t\t\tthis.w * other.w,\n\t\t\tthis.h * other.h,\n\t\t)\n\t}\n\tpos() {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tclone(): Quad {\n\t\treturn new Quad(this.x, this.y, this.w, this.h)\n\t}\n\teq(other: Quad): boolean {\n\t\treturn this.x === other.x\n\t\t\t&& this.y === other.y\n\t\t\t&& this.w === other.w\n\t\t\t&& this.h === other.h\n\t}\n\ttoString(): string {\n\t\treturn `quad(${this.x}, ${this.y}, ${this.w}, ${this.h})`\n\t}\n}\n\nexport function quad(x: number, y: number, w: number, h: number): Quad {\n\treturn new Quad(x, y, w, h)\n}\n\nexport class Mat4 {\n\n\tm: number[] = [\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1,\n\t]\n\n\tconstructor(m?: number[]) {\n\t\tif (m) {\n\t\t\tthis.m = m\n\t\t}\n\t}\n\n\tstatic translate(p: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\tp.x, p.y, 0, 1,\n\t\t])\n\t}\n\n\tstatic scale(s: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\ts.x, 0, 0, 0,\n\t\t\t0, s.y, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateX(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, -s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateY(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, 0, s, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t-s, 0, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateZ(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, -s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\ttranslate(p: Vec2) {\n\t\tthis.m[12] += this.m[0] * p.x + this.m[4] * p.y\n\t\tthis.m[13] += this.m[1] * p.x + this.m[5] * p.y\n\t\tthis.m[14] += this.m[2] * p.x + this.m[6] * p.y\n\t\tthis.m[15] += this.m[3] * p.x + this.m[7] * p.y\n\t\treturn this\n\t}\n\n\tscale(p: Vec2) {\n\t\tthis.m[0] *= p.x\n\t\tthis.m[4] *= p.y\n\t\tthis.m[1] *= p.x\n\t\tthis.m[5] *= p.y\n\t\tthis.m[2] *= p.x\n\t\tthis.m[6] *= p.y\n\t\tthis.m[3] *= p.x\n\t\tthis.m[7] *= p.y\n\t\treturn this\n\t}\n\n\trotate(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\tconst m0 = this.m[0]\n\t\tconst m1 = this.m[1]\n\t\tconst m4 = this.m[4]\n\t\tconst m5 = this.m[5]\n\t\tthis.m[0] = m0 * c + m1 * s\n\t\tthis.m[1] = -m0 * s + m1 * c\n\t\tthis.m[4] = m4 * c + m5 * s\n\t\tthis.m[5] = -m4 * s + m5 * c\n\t\treturn this\n\t}\n\n\t// TODO: in-place variant\n\tmult(other: Mat4): Mat4 {\n\t\tconst out = []\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3]\n\t\t\t}\n\t\t}\n\t\treturn new Mat4(out)\n\t}\n\n\tmultVec2(p: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tp.x * this.m[0] + p.y * this.m[4] + this.m[12],\n\t\t\tp.x * this.m[1] + p.y * this.m[5] + this.m[13],\n\t\t)\n\t}\n\n\tgetTranslation() {\n\t\treturn new Vec2(this.m[12], this.m[13])\n\t}\n\n\tgetScale() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(r, det / r)\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(det / s, s)\n\t\t} else {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tgetRotation() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn rad2deg(this.m[1] > 0 ? Math.acos(this.m[0] / r) : -Math.acos(this.m[0] / r))\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn rad2deg(Math.PI / 2 - (this.m[5] > 0 ? Math.acos(-this.m[4] / s) : -Math.acos(this.m[4] / s)))\n\t\t} else {\n\t\t\treturn 0\n\t\t}\n\t}\n\n\tgetSkew() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (r * r), 0)\n\t\t}\n\t\telse if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(0, Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (s * s))\n\t\t}\n\t\telse {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tinvert(): Mat4 {\n\n\t\tconst out = []\n\n\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11]\n\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11]\n\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10]\n\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11]\n\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10]\n\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9]\n\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7]\n\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6]\n\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7]\n\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6]\n\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5]\n\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7]\n\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7]\n\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6]\n\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7]\n\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6]\n\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5]\n\n\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02\n\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04)\n\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05\n\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05)\n\n\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02)\n\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04\n\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05)\n\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05\n\n\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08\n\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10)\n\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12\n\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12)\n\n\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15)\n\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17\n\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18)\n\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18\n\n\t\tconst det =\n\t\t\tthis.m[0] * out[0] +\n\t\t\tthis.m[1] * out[4] +\n\t\t\tthis.m[2] * out[8] +\n\t\t\tthis.m[3] * out[12]\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] *= (1.0 / det)\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out)\n\n\t}\n\n\tclone(): Mat4 {\n\t\treturn new Mat4([...this.m])\n\t}\n\n\ttoString(): string {\n\t\treturn this.m.toString()\n\t}\n\n}\n\nexport function wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo)\n}\n\n// basic ANSI C LCG\nconst A = 1103515245\nconst C = 12345\nconst M = 2147483648\n\nexport class RNG {\n\tseed: number\n\tconstructor(seed: number) {\n\t\tthis.seed = seed\n\t}\n\tgen(): number {\n\t\tthis.seed = (A * this.seed + C) % M\n\t\treturn this.seed / M\n\t}\n\tgenNumber(a: number, b: number): number {\n\t\treturn a + this.gen() * (b - a)\n\t}\n\tgenVec2(a: Vec2, b?: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tthis.genNumber(a.x, b.x),\n\t\t\tthis.genNumber(a.y, b.y),\n\t\t)\n\t}\n\tgenColor(a: Color, b: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.genNumber(a.r, b.r),\n\t\t\tthis.genNumber(a.g, b.g),\n\t\t\tthis.genNumber(a.b, b.b),\n\t\t)\n\t}\n\tgenAny<T extends RNGValue>(...args: T[]): T {\n\t\tif (args.length === 0) {\n\t\t\treturn this.gen() as T\n\t\t} else if (args.length === 1) {\n\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\treturn this.genNumber(0, args[0]) as T\n\t\t\t} else if (args[0] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(vec2(0, 0), args[0]) as T\n\t\t\t} else if (args[0] instanceof Color) {\n\t\t\t\treturn this.genColor(rgb(0, 0, 0), args[0]) as T\n\t\t\t}\n\t\t} else if (args.length === 2) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.genNumber(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Vec2 && args[1] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Color && args[1] instanceof Color) {\n\t\t\t\treturn this.genColor(args[0], args[1]) as T\n\t\t\t}\n\t\t}\n\t}\n}\n\n// TODO: let user pass seed\nconst defRNG = new RNG(Date.now())\n\nexport function randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed\n\t}\n\treturn defRNG.seed\n}\n\nexport function rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.genAny(...args)\n}\n\n// TODO: randi() to return 0 / 1?\nexport function randi(...args: number[]) {\n\treturn Math.floor(rand(...args))\n}\n\nexport function chance(p: number): boolean {\n\treturn rand() <= p\n}\n\nexport function choose<T>(list: T[]): T {\n\treturn list[randi(list.length)]\n}\n\n// TODO: better name\nexport function testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width >= r2.pos.x\n\t\t&& r1.pos.x <= r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height >= r2.pos.y\n\t\t&& r1.pos.y <= r2.pos.y + r2.height\n}\n\nexport function testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width > r2.pos.x\n\t\t&& r1.pos.x < r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height > r2.pos.y\n\t\t&& r1.pos.y < r2.pos.y + r2.height\n}\n\n// TODO: better name\nexport function testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y))\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null\n\t}\n\n\treturn ua\n\n}\n\nexport function testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2)\n\tif (!t) return null\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t)\n}\n\nexport function testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true\n\t}\n\tconst pts = r.points()\n\treturn !!testLineLine(l, new Line(pts[0], pts[1]))\n\t\t|| !!testLineLine(l, new Line(pts[1], pts[2]))\n\t\t|| !!testLineLine(l, new Line(pts[2], pts[3]))\n\t\t|| !!testLineLine(l, new Line(pts[3], pts[0]))\n}\n\nexport function testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.pos.x\n\t\t&& pt.x <= r.pos.x + r.width\n\t\t&& pt.y >= r.pos.y\n\t\t&& pt.y <= r.pos.y + r.height\n}\n\nexport function testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.pos.x\n\t\t&& pt.x < r.pos.x + r.width\n\t\t&& pt.y > r.pos.y\n\t\t&& pt.y < r.pos.y + r.height\n}\n\nexport function testRectCircle(r: Rect, c: Circle): boolean {\n\tconst nx = Math.max(r.pos.x, Math.min(c.center.x, r.pos.x + r.width))\n\tconst ny = Math.max(r.pos.y, Math.min(c.center.y, r.pos.y + r.height))\n\tconst nearestPoint = vec2(nx, ny)\n\treturn nearestPoint.sdist(c.center) <= c.radius * c.radius\n}\n\nexport function testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, new Polygon(r.points()))\n}\n\nexport function testLinePoint(l: Line, pt: Vec2): boolean {\n\tconst v1 = pt.sub(l.p1)\n\tconst v2 = l.p2.sub(l.p1)\n\n\t// Check if sine is 0, in that case lines are parallel.\n\t// If not parallel, the point cannot lie on the line.\n\tif (Math.abs(v1.cross(v2)) > Number.EPSILON) {\n\t\treturn false\n\t}\n\n\t// Scalar projection of v1 on v2\n\tconst t = v1.dot(v2) / v2.dot(v2)\n\t// Since t is percentual distance of pt from line.p1 on the line,\n\t// it should be between 0% and 100%\n\treturn t >= 0 && t <= 1\n}\n\nexport function testLineCircle(l: Line, circle: Circle): boolean {\n\tconst v = l.p2.sub(l.p1)\n\tconst a = v.dot(v)\n\tconst centerToOrigin = l.p1.sub(circle.center)\n\tconst b = 2 * v.dot(centerToOrigin)\n\tconst c = centerToOrigin.dot(centerToOrigin) - circle.radius * circle.radius\n\t// Calculate the discriminant of ax^2 + bx + c\n\tconst dis = b * b - 4 * a * c\n\n\t// No root\n\tif ((a <= Number.EPSILON) || (dis < 0)) {\n\t\treturn false\n\t}\n\t// One possible root\n\telse if (dis == 0) {\n\t\tconst t = -b / (2 * a)\n\t\tif (t >= 0 && t <= 1) {\n\t\t\treturn true\n\t\t}\n\t}\n\t// Two possible roots\n\telse {\n\t\tconst t1 = (-b + Math.sqrt(dis)) / (2 * a)\n\t\tconst t2 = (-b - Math.sqrt(dis)) / (2 * a)\n\t\tif ((t1 >= 0 && t1 <= 1) || (t2 >= 0 && t2 <= 1)) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\t// Check if line is completely within the circle\n\t// We only need to check one point, since the line didn't cross the circle\n\treturn testCirclePoint(circle, l.p1)\n}\n\nexport function testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.pts.length; i++) {\n\t\tconst p1 = p.pts[i]\n\t\tconst p2 = p.pts[(i + 1) % p.pts.length]\n\t\tif (testLineLine(l, new Line(p1, p2))) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n\n}\n\nexport function testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.sdist(p) < c.radius * c.radius\n}\n\nexport function testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.sdist(c2.center) < (c1.radius + c2.radius) * (c1.radius + c2.radius)\n}\n\nexport function testCirclePolygon(c: Circle, p: Polygon): boolean {\n\t// For each edge check for intersection\n\tlet prev = p.pts[p.pts.length - 1]\n\tfor (const cur of p.pts) {\n\t\tif (testLineCircle(new Line(prev, cur), c)) {\n\t\t\treturn true\n\t\t}\n\t\tprev = cur\n\t}\n\n\t// Check if the polygon is completely within the circle\n\t// We only need to check one point, since the polygon didn't cross the circle\n\tif (testCirclePoint(c, p.pts[0])) {\n\t\treturn true\n\t}\n\n\t// Check if the circle is completely within the polygon\n\treturn testPolygonPoint(p, c.center)\n}\n\nexport function testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.pts.length; i++) {\n\t\tif (testLinePolygon(new Line(p1.pts[i], p1.pts[(i + 1) % p1.pts.length]), p2)) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nexport function testPolygonPoint(poly: Polygon, pt: Point): boolean {\n\n\tlet c = false\n\tconst p = poly.pts\n\n\tfor (let i = 0, j = p.length - 1; i < p.length; j = i++) {\n\t\tif (\n\t\t\t((p[i].y > pt.y) != (p[j].y > pt.y))\n\t\t\t&& (pt.x < (p[j].x - p[i].x) * (pt.y - p[i].y) / (p[j].y - p[i].y) + p[i].x)\n\t\t) {\n\t\t\tc = !c\n\t\t}\n\t}\n\n\treturn c\n\n}\n\nexport function testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.x === p2.x && p1.y === p2.y\n}\n\nexport class Line {\n\tp1: Vec2\n\tp2: Vec2\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1.clone()\n\t\tthis.p2 = p2.clone()\n\t}\n\ttransform(m: Mat4): Line {\n\t\treturn new Line(m.multVec2(this.p1), m.multVec2(this.p2))\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(this.p1, this.p2)\n\t}\n\tarea(): number {\n\t\treturn this.p1.dist(this.p2)\n\t}\n\tclone(): Line {\n\t\treturn new Line(this.p1, this.p2)\n\t}\n}\n\nexport class Rect {\n\tpos: Vec2\n\twidth: number\n\theight: number\n\tconstructor(pos: Vec2, width: number, height: number) {\n\t\tthis.pos = pos.clone()\n\t\tthis.width = width\n\t\tthis.height = height\n\t}\n\tstatic fromPoints(p1: Vec2, p2: Vec2): Rect {\n\t\treturn new Rect(p1.clone(), p2.x - p1.x, p2.y - p1.y)\n\t}\n\tcenter(): Vec2 {\n\t\treturn new Vec2(this.pos.x + this.width / 2, this.pos.y + this.height / 2)\n\t}\n\tpoints(): [Vec2, Vec2, Vec2, Vec2] {\n\t\treturn [\n\t\t\tthis.pos,\n\t\t\tthis.pos.add(this.width, 0),\n\t\t\tthis.pos.add(this.width, this.height),\n\t\t\tthis.pos.add(0, this.height),\n\t\t]\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.points().map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\treturn this.clone()\n\t}\n\tarea(): number {\n\t\treturn this.width * this.height\n\t}\n\tclone(): Rect {\n\t\treturn new Rect(this.pos.clone(), this.width, this.height)\n\t}\n\tdistToPoint(p: Vec2): number {\n\t\treturn Math.sqrt(this.sdistToPoint(p))\n\t}\n\tsdistToPoint(p: Vec2): number {\n\t\tconst min = this.pos\n\t\tconst max = this.pos.add(this.width, this.height)\n\t\tconst dx = Math.max(min.x - p.x, 0, p.x - max.x)\n\t\tconst dy = Math.max(min.y - p.y, 0, p.y - max.y)\n\t\treturn dx * dx + dy * dy\n\t}\n}\n\nexport class Circle {\n\tcenter: Vec2\n\tradius: number\n\tconstructor(center: Vec2, radius: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radius = radius\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(this.center, this.radius, this.radius).transform(tr)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radius)),\n\t\t\tthis.center.add(vec2(this.radius)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radius * this.radius * Math.PI\n\t}\n\tclone(): Circle {\n\t\treturn new Circle(this.center, this.radius)\n\t}\n}\n\nexport class Ellipse {\n\tcenter: Vec2\n\tradiusX: number\n\tradiusY: number\n\tconstructor(center: Vec2, rx: number, ry: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radiusX = rx\n\t\tthis.radiusY = ry\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(\n\t\t\ttr.multVec2(this.center),\n\t\t\ttr.m[0] * this.radiusX,\n\t\t\ttr.m[5] * this.radiusY,\n\t\t)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radiusX, this.radiusY)),\n\t\t\tthis.center.add(vec2(this.radiusX, this.radiusY)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radiusX * this.radiusY * Math.PI\n\t}\n\tclone(): Ellipse {\n\t\treturn new Ellipse(this.center, this.radiusX, this.radiusY)\n\t}\n}\n\nexport class Polygon {\n\tpts: Vec2[]\n\tconstructor(pts: Vec2[]) {\n\t\tif (pts.length < 3) {\n\t\t\tthrow new Error(\"Polygons should have at least 3 vertices\")\n\t\t}\n\t\tthis.pts = pts\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\tconst p1 = vec2(Number.MAX_VALUE)\n\t\tconst p2 = vec2(-Number.MAX_VALUE)\n\t\tfor (const pt of this.pts) {\n\t\t\tp1.x = Math.min(p1.x, pt.x)\n\t\t\tp2.x = Math.max(p2.x, pt.x)\n\t\t\tp1.y = Math.min(p1.y, pt.y)\n\t\t\tp2.y = Math.max(p2.y, pt.y)\n\t\t}\n\t\treturn Rect.fromPoints(p1, p2)\n\t}\n\tarea(): number {\n\t\tlet total = 0\n\t\tconst l = this.pts.length\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tconst p1 = this.pts[i]\n\t\t\tconst p2 = this.pts[(i + 1) % l]\n\t\t\ttotal += (p1.x * p2.y * 0.5)\n\t\t\ttotal -= (p2.x * p1.y * 0.5)\n\t\t}\n\t\treturn Math.abs(total)\n\t}\n\tclone(): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => pt.clone()))\n\t}\n}\n\nexport function sat(p1: Polygon, p2: Polygon): Vec2 | null {\n\tlet overlap = Number.MAX_VALUE\n\tlet displacement = vec2(0)\n\tfor (const poly of [p1, p2]) {\n\t\tfor (let i = 0; i < poly.pts.length; i++) {\n\t\t\tconst a = poly.pts[i]\n\t\t\tconst b = poly.pts[(i + 1) % poly.pts.length]\n\t\t\tconst axisProj = b.sub(a).normal().unit()\n\t\t\tlet min1 = Number.MAX_VALUE\n\t\t\tlet max1 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p1.pts.length; j++) {\n\t\t\t\tconst q = p1.pts[j].dot(axisProj)\n\t\t\t\tmin1 = Math.min(min1, q)\n\t\t\t\tmax1 = Math.max(max1, q)\n\t\t\t}\n\t\t\tlet min2 = Number.MAX_VALUE\n\t\t\tlet max2 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p2.pts.length; j++) {\n\t\t\t\tconst q = p2.pts[j].dot(axisProj)\n\t\t\t\tmin2 = Math.min(min2, q)\n\t\t\t\tmax2 = Math.max(max2, q)\n\t\t\t}\n\t\t\tconst o = Math.min(max1, max2) - Math.max(min1, min2)\n\t\t\tif (o < 0) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\tif (o < Math.abs(overlap)) {\n\t\t\t\tconst o1 = max2 - min1\n\t\t\t\tconst o2 = min2 - max1\n\t\t\t\toverlap = Math.abs(o1) < Math.abs(o2) ? o1 : o2\n\t\t\t\tdisplacement = axisProj.scale(overlap)\n\t\t\t}\n\t\t}\n\t}\n\treturn displacement\n}\n", "export class IDList<T> extends Map<number, T> {\n\tprivate lastID: number\n\tconstructor(...args) {\n\t\tsuper(...args)\n\t\tthis.lastID = 0\n\t}\n\tpush(v: T): number {\n\t\tconst id = this.lastID\n\t\tthis.set(id, v)\n\t\tthis.lastID++\n\t\treturn id\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v)\n\t\treturn () => this.delete(id)\n\t}\n}\n\nexport class EventController {\n\tpaused: boolean = false\n\treadonly cancel: () => void\n\tconstructor(cancel: () => void) {\n\t\tthis.cancel = cancel\n\t}\n\tstatic join(events: EventController[]): EventController {\n\t\tconst ev = new EventController(() => events.forEach((e) => e.cancel()))\n\t\tObject.defineProperty(ev, \"paused\", {\n\t\t\tget: () => events[0].paused,\n\t\t\tset: (p: boolean) => events.forEach((e) => e.paused = p),\n\t\t})\n\t\tev.paused = false\n\t\treturn ev\n\t}\n}\n\nexport class Event<Args extends any[] = any[]> {\n\tprivate handlers: IDList<(...args: Args) => void> = new IDList()\n\tadd(action: (...args: Args) => void): EventController {\n\t\tconst cancel = this.handlers.pushd((...args: Args) => {\n\t\t\tif (ev.paused) return\n\t\t\taction(...args)\n\t\t})\n\t\tconst ev = new EventController(cancel)\n\t\treturn ev\n\t}\n\taddOnce(action: (...args) => void): EventController {\n\t\tconst ev = this.add((...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext(): Promise<Args> {\n\t\treturn new Promise((res) => this.addOnce(res))\n\t}\n\ttrigger(...args: Args) {\n\t\tthis.handlers.forEach((action) => action(...args))\n\t}\n\tnumListeners(): number {\n\t\treturn this.handlers.size\n\t}\n}\n\n// TODO: only accept one argument?\nexport class EventHandler<EventMap extends Record<string, any[]>> {\n\tprivate handlers: Partial<{\n\t\t[Name in keyof EventMap]: Event<EventMap[Name]>\n\t}> = {}\n\ton<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tif (!this.handlers[name]) {\n\t\t\tthis.handlers[name] = new Event<EventMap[Name]>()\n\t\t}\n\t\treturn this.handlers[name].add(action)\n\t}\n\tonOnce<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tconst ev = this.on(name, (...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext<Name extends keyof EventMap>(name: Name): Promise<unknown> {\n\t\treturn new Promise((res) => {\n\t\t\t// TODO: can only pass 1 val to resolve()\n\t\t\tthis.onOnce(name, (...args: EventMap[Name]) => res(args[0]))\n\t\t})\n\t}\n\ttrigger<Name extends keyof EventMap>(name: Name, ...args: EventMap[Name]) {\n\t\tif (this.handlers[name]) {\n\t\t\tthis.handlers[name].trigger(...args)\n\t\t}\n\t}\n\tremove<Name extends keyof EventMap>(name: Name) {\n\t\tdelete this.handlers[name]\n\t}\n\tclear() {\n\t\tthis.handlers = {}\n\t}\n\tnumListeners<Name extends keyof EventMap>(name: Name): number {\n\t\treturn this.handlers[name]?.numListeners() ?? 0\n\t}\n}\n\nexport function deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1\n\tconst t2 = typeof o2\n\tif (t1 !== t2) {\n\t\treturn false\n\t}\n\tif (t1 === \"object\" && t2 === \"object\" && o1 !== null && o2 !== null) {\n\t\tconst k1 = Object.keys(o1)\n\t\tconst k2 = Object.keys(o2)\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k]\n\t\t\tconst v2 = o2[k]\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\treturn o1 === o2\n}\n\nexport function base64ToArrayBuffer(base64: string): ArrayBuffer {\n\tconst binstr = window.atob(base64)\n\tconst len = binstr.length\n\tconst bytes = new Uint8Array(len)\n\tfor (let i = 0; i < len; i++) {\n\t\tbytes[i] = binstr.charCodeAt(i)\n\t}\n\treturn bytes.buffer\n}\n\nexport function dataURLToArrayBuffer(url: string): ArrayBuffer {\n\treturn base64ToArrayBuffer(url.split(\",\")[1])\n}\n\nexport function download(filename: string, url: string) {\n\tconst a = document.createElement(\"a\")\n\ta.href = url\n\ta.download = filename\n\ta.click()\n}\n\nexport function downloadText(filename: string, text: string) {\n\tdownload(filename, \"data:text/plain;charset=utf-8,\" + text)\n}\n\nexport function downloadJSON(filename: string, data: any) {\n\tdownloadText(filename, JSON.stringify(data))\n}\n\nexport function downloadBlob(filename: string, blob: Blob) {\n\tconst url = URL.createObjectURL(blob)\n\tdownload(filename, url)\n\tURL.revokeObjectURL(url)\n}\n\nexport const isDataURL = (str: string) => str.match(/^data:\\w+\\/\\w+;base64,.+/)\nexport const getExt = (p: string) => p.split(\".\").pop()\n\nexport const uid = (() => {\n\tlet id = 0\n\treturn () => id++\n})()\n\nconst warned = new Set()\n\nexport function warn(msg: string) {\n\tif (!warned.has(msg)) {\n\t\twarned.add(msg)\n\t\tconsole.warn(msg)\n\t}\n}\n\nexport function deprecateMsg(oldName: string, newName: string) {\n\twarn(`${oldName} is deprecated. Use ${newName} instead.`)\n}\n\nexport function deprecate(oldName: string, newName: string, newFunc: (...args) => any) {\n\treturn (...args) => {\n\t\tdeprecateMsg(oldName, newName)\n\t\treturn newFunc(...args)\n\t}\n}\n\nexport function benchmark(task: () => void, times: number = 1) {\n\tconst t1 = performance.now()\n\tfor (let i = 0; i < times; i++) {\n\t\ttask()\n\t}\n\tconst t2 = performance.now()\n\treturn t2 - t1\n}\n\nexport function comparePerf(t1: () => void, t2: () => void, times: number = 1) {\n\treturn benchmark(t2, times) / benchmark(t1, times)\n}\n\nexport class BinaryHeap<T> {\n\t_items: T[]\n\t_compareFn: (a: T, b: T) => boolean\n\n\t/**\n\t * Creates a binary heap with the given compare function\n\t * Not passing a compare function will give a min heap\n\t */\n\tconstructor(compareFn = (a: T, b: T) => a < b) {\n\t\tthis._compareFn = compareFn\n\t\tthis._items = []\n\t}\n\n\t/**\n\t * Insert an item into the binary heap\n\t */\n\tinsert(item: T) {\n\t\tthis._items.push(item)\n\t\tthis.moveUp(this._items.length - 1)\n\t}\n\n\t/**\n\t * Remove the smallest item from the binary heap in case of a min heap\n\t * or the greatest item from the binary heap in case of a max heap\n\t */\n\tremove() {\n\t\tif (this._items.length === 0)\n\t\t\treturn null\n\t\tconst item = this._items[0]\n\t\tconst lastItem = this._items.pop()\n\t\tif (this._items.length !== 0) {\n\t\t\tthis._items[0] = lastItem as T\n\t\t\tthis.moveDown(0)\n\t\t}\n\t\treturn item\n\t}\n\n\t/**\n\t * Remove all items\n\t */\n\tclear() {\n\t\tthis._items.splice(0, this._items.length)\n\t}\n\n\tmoveUp(pos: number) {\n\t\twhile (pos > 0) {\n\t\t\tconst parent = Math.floor((pos - 1) / 2)\n\t\t\tif (!this._compareFn(this._items[pos], this._items[parent]))\n\t\t\t\tif (this._items[pos] >= this._items[parent])\n\t\t\t\t\tbreak\n\t\t\tthis.swap(pos, parent)\n\t\t\tpos = parent\n\t\t}\n\t}\n\n\tmoveDown(pos: number) {\n\t\twhile (pos < Math.floor(this._items.length / 2)) {\n\t\t\tlet child = 2 * pos + 1\n\t\t\tif (child < this._items.length - 1 && !this._compareFn(this._items[child], this._items[child + 1]))\n\t\t\t\t++child\n\t\t\tif (this._compareFn(this._items[pos], this._items[child]))\n\t\t\t\tbreak\n\t\t\tthis.swap(pos, child)\n\t\t\tpos = child\n\t\t}\n\t}\n\n\tswap(index1: number, index2: number) {\n\t\t[this._items[index1], this._items[index2]] = [this._items[index2], this._items[index1]]\n\t}\n\n\t/**\n\t * Returns the amount of items\n\t */\n\tget length() {\n\t\treturn this._items.length\n\t}\n}\n", "{\n\t\"Joy-Con L+R (STANDARD GAMEPAD Vendor: 057e Product: 200e)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"Joy-Con (L) (STANDARD GAMEPAD Vendor: 057e Product: 2006)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"select\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"start\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Joy-Con (R) (STANDARD GAMEPAD Vendor: 057e Product: 2007)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"select\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Pro Controller (STANDARD GAMEPAD Vendor: 057e Product: 2009)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"default\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t}\n}\n", "// everything related to canvas, game loop and input\n\nimport type {\n\tKaboomCtx,\n\tCursor,\n\tKey,\n\tMouseButton,\n\tGamepadButton,\n\tGamepadStick,\n\tGamepadDef,\n\tKGamePad,\n} from \"./types\"\n\nimport {\n\tVec2,\n} from \"./math\"\n\nimport {\n\tEventHandler,\n\tEventController,\n} from \"./utils\"\n\nimport GAMEPAD_MAP from \"./gamepad.json\"\n\nexport class ButtonState<T = string> {\n\tpressed: Set<T> = new Set([])\n\tpressedRepeat: Set<T> = new Set([])\n\treleased: Set<T> = new Set([])\n\tdown: Set<T> = new Set([])\n\tupdate() {\n\t\tthis.pressed.clear()\n\t\tthis.released.clear()\n\t\tthis.pressedRepeat.clear()\n\t}\n\tpress(btn: T) {\n\t\tthis.pressed.add(btn)\n\t\tthis.pressedRepeat.add(btn)\n\t\tthis.down.add(btn)\n\t}\n\tpressRepeat(btn: T) {\n\t\tthis.pressedRepeat.add(btn)\n\t}\n\trelease(btn: T) {\n\t\tthis.down.delete(btn)\n\t\tthis.pressed.delete(btn)\n\t\tthis.released.add(btn)\n\t}\n}\n\nclass GamepadState {\n\tbuttonState: ButtonState<GamepadButton> = new ButtonState()\n\tstickState: Map<GamepadStick, Vec2> = new Map()\n}\n\nclass FPSCounter {\n\tprivate dts: number[] = []\n\tprivate timer: number = 0\n\tfps: number = 0\n\ttick(dt: number) {\n\t\tthis.dts.push(dt)\n\t\tthis.timer += dt\n\t\tif (this.timer >= 1) {\n\t\t\tthis.timer = 0\n\t\t\tthis.fps = Math.round(1 / (this.dts.reduce((a, b) => a + b) / this.dts.length))\n\t\t\tthis.dts = []\n\t\t}\n\t}\n}\n\nexport default (opt: {\n\tcanvas: HTMLCanvasElement,\n\ttouchToMouse?: boolean,\n\tgamepads?: Record<string, GamepadDef>,\n\tpixelDensity?: number,\n\tmaxFPS?: number,\n}) => {\n\n\tif (!opt.canvas) {\n\t\tthrow new Error(\"Please provide a canvas\")\n\t}\n\n\tconst state = {\n\t\tcanvas: opt.canvas,\n\t\tloopID: null as null | number,\n\t\tstopped: false,\n\t\tdt: 0,\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tfpsCounter: new FPSCounter(),\n\t\ttimeScale: 1,\n\t\tskipTime: false,\n\t\tnumFrames: 0,\n\t\tpaused: false,\n\t\tmousePos: new Vec2(0),\n\t\tmouseDeltaPos: new Vec2(0),\n\t\tkeyState: new ButtonState<Key>(),\n\t\tmouseState: new ButtonState<MouseButton>(),\n\t\tmergedGamepadState: new GamepadState(),\n\t\tgamepadStates: new Map<number, GamepadState>(),\n\t\tgamepads: [] as KGamePad[],\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tlastWidth: opt.canvas.offsetWidth,\n\t\tlastHeight: opt.canvas.offsetHeight,\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [KGamePad],\n\t\t\tgamepadDisconnect: [KGamePad],\n\t\t\tscroll: [Vec2],\n\t\t\tresize: [],\n\t\t\tinput: [],\n\t\t}>(),\n\t}\n\n\tfunction canvas() {\n\t\treturn state.canvas\n\t}\n\n\tfunction dt() {\n\t\treturn state.dt * state.timeScale\n\t}\n\n\tfunction time() {\n\t\treturn state.time\n\t}\n\n\tfunction fps() {\n\t\treturn state.fpsCounter.fps\n\t}\n\n\tfunction numFrames() {\n\t\treturn state.numFrames\n\t}\n\n\tfunction screenshot(): string {\n\t\treturn state.canvas.toDataURL()\n\t}\n\n\tfunction setCursor(c: Cursor): void {\n\t\tstate.canvas.style.cursor = c\n\t}\n\n\tfunction getCursor(): Cursor {\n\t\treturn state.canvas.style.cursor\n\t}\n\n\tfunction setCursorLocked(b: boolean): void {\n\t\tif (b) {\n\t\t\ttry {\n\t\t\t\tconst res = state.canvas.requestPointerLock() as unknown as Promise<void>\n\t\t\t\tif (res.catch) {\n\t\t\t\t\tres.catch((e) => console.error(e))\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e)\n\t\t\t}\n\t\t} else {\n\t\t\tdocument.exitPointerLock()\n\t\t}\n\t}\n\n\tfunction isCursorLocked(): boolean {\n\t\treturn !!document.pointerLockElement\n\t}\n\n\t// wrappers around full screen functions to work across browsers\n\tfunction enterFullscreen(el: HTMLElement) {\n\t\tif (el.requestFullscreen) el.requestFullscreen()\n\t\t// @ts-ignore\n\t\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen()\n\t}\n\n\tfunction exitFullscreen() {\n\t\tif (document.exitFullscreen) document.exitFullscreen()\n\t\t// @ts-ignore\n\t\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen()\n\t}\n\n\tfunction getFullscreenElement(): Element | void {\n\t\treturn document.fullscreenElement\n\t\t\t// @ts-ignore\n\t\t\t|| document.webkitFullscreenElement\n\t}\n\n\tfunction setFullscreen(f: boolean = true) {\n\t\tif (f) {\n\t\t\tenterFullscreen(state.canvas)\n\t\t} else {\n\t\t\texitFullscreen()\n\t\t}\n\t}\n\n\tfunction isFullscreen(): boolean {\n\t\treturn Boolean(getFullscreenElement())\n\t}\n\n\tfunction quit() {\n\t\tstate.stopped = true\n\t\tfor (const name in canvasEvents) {\n\t\t\tstate.canvas.removeEventListener(name, canvasEvents[name])\n\t\t}\n\t\tfor (const name in docEvents) {\n\t\t\tdocument.removeEventListener(name, docEvents[name])\n\t\t}\n\t\tfor (const name in winEvents) {\n\t\t\twindow.removeEventListener(name, winEvents[name])\n\t\t}\n\t\tresizeObserver.disconnect()\n\t}\n\n\tfunction run(action: () => void) {\n\n\t\tif (state.loopID !== null) {\n\t\t\tcancelAnimationFrame(state.loopID)\n\t\t}\n\n\t\tlet accumulatedDt = 0\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tif (state.stopped) return\n\n\t\t\t// TODO: paused should still process input\n\t\t\t// TODO: allow background actions?\n\t\t\tif (state.paused || document.visibilityState !== \"visible\") {\n\t\t\t\tstate.loopID = requestAnimationFrame(frame)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst loopTime = t / 1000\n\t\t\tconst realDt = loopTime - state.realTime\n\t\t\tconst desiredDt = opt.maxFPS ? 1 / opt.maxFPS : 0\n\n\t\t\tstate.realTime = loopTime\n\t\t\taccumulatedDt += realDt\n\n\t\t\tif (accumulatedDt > desiredDt) {\n\t\t\t\tif (!state.skipTime) {\n\t\t\t\t\tstate.dt = accumulatedDt\n\t\t\t\t\tstate.time += dt()\n\t\t\t\t\tstate.fpsCounter.tick(state.dt)\n\t\t\t\t}\n\t\t\t\taccumulatedDt = 0\n\t\t\t\tstate.skipTime = false\n\t\t\t\tstate.numFrames++\n\t\t\t\tprocessInput()\n\t\t\t\taction()\n\t\t\t\tresetInput()\n\t\t\t}\n\n\t\t\tstate.loopID = requestAnimationFrame(frame)\n\n\t\t}\n\n\t\tframe(0)\n\n\t}\n\n\tfunction isTouchscreen() {\n\t\treturn (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0\n\t}\n\n\tfunction mousePos(): Vec2 {\n\t\treturn state.mousePos.clone()\n\t}\n\n\tfunction mouseDeltaPos(): Vec2 {\n\t\treturn state.mouseDeltaPos.clone()\n\t}\n\n\tfunction isMousePressed(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.pressed.has(m)\n\t}\n\n\tfunction isMouseDown(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.down.has(m)\n\t}\n\n\tfunction isMouseReleased(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.released.has(m)\n\t}\n\n\tfunction isMouseMoved(): boolean {\n\t\treturn state.isMouseMoved\n\t}\n\n\tfunction isKeyPressed(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressed.size > 0\n\t\t\t: state.keyState.pressed.has(k)\n\t}\n\n\tfunction isKeyPressedRepeat(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressedRepeat.size > 0\n\t\t\t: state.keyState.pressedRepeat.has(k)\n\t}\n\n\tfunction isKeyDown(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.down.size > 0\n\t\t\t: state.keyState.down.has(k)\n\t}\n\n\tfunction isKeyReleased(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.released.size > 0\n\t\t\t: state.keyState.released.has(k)\n\t}\n\n\tfunction isGamepadButtonPressed(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.pressed.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.pressed.has(btn)\n\t}\n\n\tfunction isGamepadButtonDown(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.down.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.down.has(btn)\n\t}\n\n\tfunction isGamepadButtonReleased(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.released.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.released.has(btn)\n\t}\n\n\tfunction onResize(action: () => void): EventController {\n\t\treturn state.events.on(\"resize\", action)\n\t}\n\n\t// input callbacks\n\tconst onKeyDown = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyDown\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyDown\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyDown\"]\n\n\tconst onKeyPress = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyPress\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyPress\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyPress\"]\n\n\tconst onKeyPressRepeat = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyPressRepeat\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyPressRepeat\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyPressRepeat\"]\n\n\tconst onKeyRelease = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyRelease\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyRelease\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyRelease\"]\n\n\tfunction onMouseDown(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mouseDown\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mouseDown\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMousePress(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mousePress\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mousePress\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMouseRelease(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mouseRelease\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mouseRelease\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventController {\n\t\treturn state.events.on(\"mouseMove\", () => f(mousePos(), mouseDeltaPos()))\n\t}\n\n\tfunction onCharInput(action: (ch: string) => void): EventController {\n\t\treturn state.events.on(\"charInput\", action)\n\t}\n\n\tfunction onTouchStart(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchStart\", f)\n\t}\n\n\tfunction onTouchMove(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchMove\", f)\n\t}\n\n\tfunction onTouchEnd(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchEnd\", f)\n\t}\n\n\tfunction onScroll(action: (delta: Vec2) => void): EventController {\n\t\treturn state.events.on(\"scroll\", action)\n\t}\n\n\tfunction onGamepadButtonDown(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonPress(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonRelease(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadStick(stick: GamepadStick, action: (value: Vec2) => void): EventController {\n\t\treturn state.events.on(\"gamepadStick\", ((a: string, v: Vec2) => a === stick && action(v)))\n\t}\n\n\tfunction onGamepadConnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadConnect\", action)\n\t}\n\n\tfunction onGamepadDisconnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadDisconnect\", action)\n\t}\n\n\tfunction getGamepadStick(stick: GamepadStick): Vec2 {\n\t\treturn state.mergedGamepadState.stickState.get(stick) || new Vec2(0)\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...state.charInputted]\n\t}\n\n\tfunction getGamepads(): KGamePad[] {\n\t\treturn [...state.gamepads]\n\t}\n\n\tfunction processInput() {\n\t\tstate.events.trigger(\"input\")\n\t\tstate.keyState.down.forEach((k) => state.events.trigger(\"keyDown\", k))\n\t\tstate.mouseState.down.forEach((k) => state.events.trigger(\"mouseDown\", k))\n\t\tprocessGamepad()\n\t}\n\n\tfunction resetInput() {\n\t\tstate.keyState.update()\n\t\tstate.mouseState.update()\n\t\tstate.mergedGamepadState.buttonState.update()\n\t\tstate.mergedGamepadState.stickState.forEach((v, k) => {\n\t\t\tstate.mergedGamepadState.stickState.set(k, new Vec2(0))\n\t\t})\n\t\tstate.charInputted = []\n\t\tstate.isMouseMoved = false\n\n\t\tstate.gamepadStates.forEach((s) => {\n\t\t\ts.buttonState.update()\n\t\t\ts.stickState.forEach((v, k) => {\n\t\t\t\ts.stickState.set(k, new Vec2(0))\n\t\t\t})\n\t\t})\n\t}\n\n\tfunction registerGamepad(browserGamepad: Gamepad) {\n\n\t\tconst gamepad = {\n\t\t\tindex: browserGamepad.index,\n\t\t\tisPressed: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.pressed.has(btn)\n\t\t\t},\n\t\t\tisDown: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.down.has(btn)\n\t\t\t},\n\t\t\tisReleased: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.released.has(btn)\n\t\t\t},\n\t\t\tgetStick: (stick: GamepadStick) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).stickState.get(stick)\n\t\t\t},\n\t\t}\n\n\t\tstate.gamepads.push(gamepad)\n\n\t\tstate.gamepadStates.set(browserGamepad.index, {\n\t\t\tbuttonState: new ButtonState(),\n\t\t\tstickState: new Map([\n\t\t\t\t[\"left\", new Vec2(0)],\n\t\t\t\t[\"right\", new Vec2(0)],\n\t\t\t]),\n\t\t})\n\n\t\treturn gamepad\n\n\t}\n\n\tfunction removeGamepad(gamepad: Gamepad) {\n\t\tstate.gamepads = state.gamepads.filter((g) => g.index !== gamepad.index)\n\t\tstate.gamepadStates.delete(gamepad.index)\n\t}\n\n\tfunction processGamepad() {\n\n\t\tfor (const browserGamepad of navigator.getGamepads()) {\n\t\t\tif (browserGamepad && !state.gamepadStates.has(browserGamepad.index)) {\n\t\t\t\tregisterGamepad(browserGamepad)\n\t\t\t}\n\t\t}\n\n\t\tfor (const gamepad of state.gamepads) {\n\n\t\t\tconst browserGamepad = navigator.getGamepads()[gamepad.index]\n\t\t\tconst customMap = opt.gamepads ?? {}\n\t\t\tconst map = customMap[browserGamepad.id] ?? GAMEPAD_MAP[browserGamepad.id] ?? GAMEPAD_MAP[\"default\"]\n\t\t\tconst gamepadState = state.gamepadStates.get(gamepad.index)\n\n\t\t\tfor (let i = 0; i < browserGamepad.buttons.length; i++) {\n\t\t\t\tif (browserGamepad.buttons[i].pressed) {\n\t\t\t\t\tif (!gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonPress\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t\tstate.events.trigger(\"gamepadButtonDown\", map.buttons[i])\n\t\t\t\t} else {\n\t\t\t\t\tif (gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonRelease\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const stickName in map.sticks) {\n\t\t\t\tconst stick = map.sticks[stickName]\n\t\t\t\tconst value = new Vec2(\n\t\t\t\t\tbrowserGamepad.axes[stick.x],\n\t\t\t\t\tbrowserGamepad.axes[stick.y],\n\t\t\t\t)\n\t\t\t\tgamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.mergedGamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.events.trigger(\"gamepadStick\", stickName, value)\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttype EventList<M> = {\n\t\t[event in keyof M]?: (event: M[event]) => void\n\t}\n\n\tconst canvasEvents: EventList<HTMLElementEventMap> = {}\n\tconst docEvents: EventList<DocumentEventMap> = {}\n\tconst winEvents: EventList<WindowEventMap> = {}\n\n\tcanvasEvents.mousemove = (e) => {\n\t\tconst mousePos = new Vec2(e.offsetX, e.offsetY)\n\t\tconst mouseDeltaPos = new Vec2(e.movementX, e.movementY)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.isMouseMoved = true\n\t\t\tstate.mousePos = mousePos\n\t\t\tstate.mouseDeltaPos = mouseDeltaPos\n\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t})\n\t}\n\n\tconst MOUSE_BUTTONS: MouseButton[] = [\n\t\t\"left\",\n\t\t\"middle\",\n\t\t\"right\",\n\t\t\"back\",\n\t\t\"forward\",\n\t]\n\n\tcanvasEvents.mousedown = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.press(m)\n\t\t\tstate.events.trigger(\"mousePress\", m)\n\t\t})\n\t}\n\n\tcanvasEvents.mouseup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.release(m)\n\t\t\tstate.events.trigger(\"mouseRelease\", m)\n\t\t})\n\t}\n\n\tconst PREVENT_DEFAULT_KEYS = new Set([\n\t\t\" \",\n\t\t\"ArrowLeft\",\n\t\t\"ArrowRight\",\n\t\t\"ArrowUp\",\n\t\t\"ArrowDown\",\n\t\t\"Tab\",\n\t])\n\n\t// translate these key names to a simpler version\n\tconst KEY_ALIAS = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t}\n\n\tcanvasEvents.keydown = (e) => {\n\t\tif (PREVENT_DEFAULT_KEYS.has(e.key)) {\n\t\t\te.preventDefault()\n\t\t}\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tif (k.length === 1) {\n\t\t\t\tstate.events.trigger(\"charInput\", k)\n\t\t\t\tstate.charInputted.push(k)\n\t\t\t} else if (k === \"space\") {\n\t\t\t\tstate.events.trigger(\"charInput\", \" \")\n\t\t\t\tstate.charInputted.push(\" \")\n\t\t\t}\n\t\t\tif (e.repeat) {\n\t\t\t\tstate.keyState.pressRepeat(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t} else {\n\t\t\t\tstate.keyState.press(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t\tstate.events.trigger(\"keyPress\", k)\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.keyup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tstate.keyState.release(k)\n\t\t\tstate.events.trigger(\"keyRelease\", k)\n\t\t})\n\t}\n\n\tcanvasEvents.touchstart = (e) => {\n\t\t// disable long tap context menu\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchStart\",\n\t\t\t\t\tnew Vec2(t.clientX, t.clientY),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(touches[0].clientX, touches[0].clientY)\n\t\t\t\tstate.mouseState.press(\"left\")\n\t\t\t\tstate.events.trigger(\"mousePress\", \"left\")\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.touchmove = (e) => {\n\t\t// disable scrolling\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\"touchMove\", new Vec2(t.clientX, t.clientY), t)\n\t\t\t})\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(touches[0].clientX, touches[0].clientY)\n\t\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.touchend = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\"touchEnd\", new Vec2(t.clientX, t.clientY), t)\n\t\t\t})\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(touches[0].clientX, touches[0].clientY)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.touchcancel = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\"touchEnd\", new Vec2(t.clientX, t.clientY), t)\n\t\t\t})\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(touches[0].clientX, touches[0].clientY)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t})\n\t}\n\n\t// TODO: option to not prevent default?\n\tcanvasEvents.wheel = (e) => {\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"scroll\", new Vec2(e.deltaX, e.deltaY))\n\t\t})\n\t}\n\n\tcanvasEvents.contextmenu = (e) => e.preventDefault()\n\n\tdocEvents.visibilitychange = () => {\n\t\tif (document.visibilityState === \"visible\") {\n\t\t\t// prevent a surge of dt when switch back after the tab being hidden for a while\n\t\t\tstate.skipTime = true\n\t\t}\n\t}\n\n\twinEvents.gamepadconnected = (e) => {\n\t\tconst kbGamepad = registerGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadConnect\", kbGamepad)\n\t\t})\n\t}\n\n\twinEvents.gamepaddisconnected = (e) => {\n\t\tconst kbGamepad = getGamepads().filter((g) => g.index === e.gamepad.index)[0]\n\t\tremoveGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadDisconnect\", kbGamepad)\n\t\t})\n\t}\n\n\tfor (const name in canvasEvents) {\n\t\tstate.canvas.addEventListener(name, canvasEvents[name])\n\t}\n\n\tfor (const name in docEvents) {\n\t\tdocument.addEventListener(name, docEvents[name])\n\t}\n\n\tfor (const name in winEvents) {\n\t\twindow.addEventListener(name, winEvents[name])\n\t}\n\n\tconst resizeObserver = new ResizeObserver((entries) => {\n\t\tfor (const entry of entries) {\n\t\t\tif (entry.target !== state.canvas) continue\n\t\t\tif (\n\t\t\t\tstate.lastWidth === state.canvas.offsetWidth\n\t\t\t\t&& state.lastHeight === state.canvas.offsetHeight\n\t\t\t) return\n\t\t\tstate.lastWidth = state.canvas.offsetWidth\n\t\t\tstate.lastHeight = state.canvas.offsetHeight\n\t\t\tstate.events.onOnce(\"input\", () => {\n\t\t\t\tstate.events.trigger(\"resize\")\n\t\t\t})\n\t\t}\n\t})\n\n\tresizeObserver.observe(state.canvas)\n\n\treturn {\n\t\tdt,\n\t\ttime,\n\t\trun,\n\t\tcanvas,\n\t\tfps,\n\t\tnumFrames,\n\t\tquit,\n\t\tsetFullscreen,\n\t\tisFullscreen,\n\t\tsetCursor,\n\t\tscreenshot,\n\t\tgetGamepads,\n\t\tgetCursor,\n\t\tsetCursorLocked,\n\t\tisCursorLocked,\n\t\tisTouchscreen,\n\t\tmousePos,\n\t\tmouseDeltaPos,\n\t\tisKeyDown,\n\t\tisKeyPressed,\n\t\tisKeyPressedRepeat,\n\t\tisKeyReleased,\n\t\tisMouseDown,\n\t\tisMousePressed,\n\t\tisMouseReleased,\n\t\tisMouseMoved,\n\t\tisGamepadButtonPressed,\n\t\tisGamepadButtonDown,\n\t\tisGamepadButtonReleased,\n\t\tgetGamepadStick,\n\t\tcharInputted,\n\t\tonResize,\n\t\tonKeyDown,\n\t\tonKeyPress,\n\t\tonKeyPressRepeat,\n\t\tonKeyRelease,\n\t\tonMouseDown,\n\t\tonMousePress,\n\t\tonMouseRelease,\n\t\tonMouseMove,\n\t\tonCharInput,\n\t\tonTouchStart,\n\t\tonTouchMove,\n\t\tonTouchEnd,\n\t\tonScroll,\n\t\tonGamepadButtonDown,\n\t\tonGamepadButtonPress,\n\t\tonGamepadButtonRelease,\n\t\tonGamepadStick,\n\t\tonGamepadConnect,\n\t\tonGamepadDisconnect,\n\t\tevents: state.events,\n\t\tget paused() {\n\t\t\treturn state.paused\n\t\t},\n\t\tset paused(p: boolean) {\n\t\t\tstate.paused = p\n\t\t},\n\t}\n\n}\n", "// https://easings.net/\nconst c1 = 1.70158\nconst c2 = c1 * 1.525\nconst c3 = c1 + 1\nconst c4 = (2 * Math.PI) / 3\nconst c5 = (2 * Math.PI) / 4.5\n\nconst easings = {\n\tlinear: (x) => x,\n\teaseInSine: (x) => 1 - Math.cos((x * Math.PI) / 2),\n\teaseOutSine: (x) => Math.sin((x * Math.PI) / 2),\n\teaseInOutSine: (x) => -(Math.cos(Math.PI * x) - 1) / 2,\n\teaseInQuad: (x) => x * x,\n\teaseOutQuad: (x) => 1 - (1 - x) * (1 - x),\n\teaseInOutQuad: (x) => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n\teaseInCubic: (x) => x * x * x,\n\teaseOutCubic: (x) => 1 - Math.pow(1 - x, 3),\n\teaseInOutCubic: (x) => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n\teaseInQuart: (x) => x * x * x * x,\n\teaseOutQuart: (x) => 1 - Math.pow(1 - x, 4),\n\teaseInOutQuart: (x) => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n\teaseInQuint: (x) => x * x * x * x * x,\n\teaseOutQuint: (x) => 1 - Math.pow(1 - x, 5),\n\teaseInOutQuint: (x) => x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n\teaseInExpo: (x) => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n\teaseOutExpo: (x) => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n\teaseInOutExpo: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? Math.pow(2, 20 * x - 10) / 2\n\t\t\t\t\t: (2 - Math.pow(2, -20 * x + 10)) / 2\n\t},\n\teaseInCirc: (x) => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n\teaseOutCirc: (x) => Math.sqrt(1 - Math.pow(x - 1, 2)),\n\teaseInOutCirc: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n\t\t\t: (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2\n\t},\n\teaseInBack: (x) => c3 * x * x * x - c1 * x * x,\n\teaseOutBack: (x) => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n\teaseInOutBack: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n\t\t\t: (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2\n\t},\n\teaseInElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4)\n\t},\n\teaseOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1\n\t},\n\teaseInOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n\t\t\t\t\t: (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 + 1\n\t},\n\teaseInBounce: (x) => 1 - easings.easeOutBounce(1 - x),\n\teaseOutBounce: (x) => {\n\t\tconst n1 = 7.5625\n\t\tconst d1 = 2.75\n\t\tif (x < 1 / d1) {\n\t\t\treturn n1 * x * x\n\t\t} else if (x < 2 / d1) {\n\t\t\treturn n1 * (x -= 1.5 / d1) * x + 0.75\n\t\t} else if (x < 2.5 / d1) {\n\t\t\treturn n1 * (x -= 2.25 / d1) * x + 0.9375\n\t\t} else {\n\t\t\treturn n1 * (x -= 2.625 / d1) * x + 0.984375\n\t\t}\n\t},\n\teaseInOutBounce: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - easings.easeOutBounce(1 - 2 * x)) / 2\n\t\t\t: (1 + easings.easeOutBounce(2 * x - 1)) / 2\n\t},\n}\n\nexport default easings\n", "export default class Timer {\n\n\ttime: number\n\taction: () => void\n\tfinished: boolean = false\n\tpaused: boolean = false\n\n\tconstructor(time: number, action: () => void) {\n\t\tthis.time = time\n\t\tthis.action = action\n\t}\n\n\ttick(dt: number): boolean {\n\t\tif (this.finished || this.paused) return false\n\t\tthis.time -= dt\n\t\tif (this.time <= 0) {\n\t\t\tthis.action()\n\t\t\tthis.finished = true\n\t\t\tthis.time = 0\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\treset(time) {\n\t\tthis.time = time\n\t\tthis.finished = false\n\t}\n\n}\n", "const VERSION = \"3000.0.11\"\n\nimport initApp from \"./app\"\n\nimport {\n\tsat,\n\tvec2,\n\tRect,\n\tPolygon,\n\tLine,\n\tCircle,\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tRNG,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestLinePoint,\n\ttestLineLine,\n\ttestLineCircle,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestCirclePolygon,\n\tdeg2rad,\n\trad2deg,\n} from \"./math\"\n\nimport easings from \"./easings\"\n\nimport {\n\tIDList,\n\tEvent,\n\tEventHandler,\n\tdownload,\n\tdownloadText,\n\tdownloadJSON,\n\tdownloadBlob,\n\tuid,\n\tisDataURL,\n\tgetExt,\n\tdeepEq,\n\tdataURLToArrayBuffer,\n\tEventController,\n\t// eslint-disable-next-line\n\twarn,\n\t// eslint-disable-next-line\n\tbenchmark,\n\t// eslint-disable-next-line\n\tcomparePerf,\n\tBinaryHeap,\n} from \"./utils\"\n\nimport type {\n\tGfxShader,\n\tGfxFont,\n\tRenderProps,\n\tCharTransform,\n\tTextureOpt,\n\tFormattedText,\n\tFormattedChar,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tBitmapFontData,\n\tShaderData,\n\tLoadSpriteSrc,\n\tLoadSpriteOpt,\n\tLoadSoundOpt,\n\tSpriteAtlasData,\n\tLoadBitmapFontOpt,\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tTextAlign,\n\tGameObj,\n\tSceneName,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tAnchor,\n\tAnchorComp,\n\tZComp,\n\tFollowComp,\n\tMoveComp,\n\tOffScreenCompOpt,\n\tOffScreenComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tSpriteAnimPlayOpt,\n\tSpriteAnims,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleComp,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tMergeObj,\n\tLevelComp,\n\tEdge,\n\tTileComp,\n\tTileCompOpt,\n\tLevelOpt,\n\tRecording,\n\tBoomOpt,\n\tPeditFile,\n\tShape,\n\tDoubleJumpComp,\n\tTimerController,\n\tTweenController,\n\tLoadFontOpt,\n\tAgentComp,\n\tAgentCompOpt,\n\tPathFindOpt,\n\tGetOpt,\n\tVec2Args,\n\tNineSlice,\n\tLerpValue,\n\tTexFilter,\n} from \"./types\"\n\nimport Timer from \"./timer\"\n\n// @ts-ignore\nimport beanSpriteSrc from \"./assets/bean.png\"\n// @ts-ignore\nimport burpSoundSrc from \"./assets/burp.mp3\"\n// @ts-ignore\nimport kaSpriteSrc from \"./assets/ka.png\"\n// @ts-ignore\nimport boomSpriteSrc from \"./assets/boom.png\"\n\ntype EventList<M> = {\n\t[event in keyof M]?: (event: M[event]) => void\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// some default charsets for loading bitmap fonts\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n\nconst DEF_ANCHOR = \"topleft\"\nconst BG_GRID_SIZE = 64\n\nconst DEF_FONT = \"monospace\"\nconst DBG_FONT = \"monospace\"\nconst DEF_TEXT_SIZE = 36\nconst DEF_TEXT_CACHE_SIZE = 64\nconst MAX_TEXT_CACHE_SIZE = 256\nconst FONT_ATLAS_WIDTH = 2048\nconst FONT_ATLAS_HEIGHT = 2048\nconst SPRITE_ATLAS_WIDTH = 2048\nconst SPRITE_ATLAS_HEIGHT = 2048\n// 0.1 pixel padding to texture coordinates to prevent artifact\nconst UV_PAD = 0.1\nconst DEF_HASH_GRID_SIZE = 64\nconst DEF_FONT_FILTER = \"nearest\"\n\nconst LOG_MAX = 1\n\nconst VERTEX_FORMAT = [\n\t{ name: \"a_pos\", size: 2 },\n\t{ name: \"a_uv\", size: 2 },\n\t{ name: \"a_color\", size: 4 },\n]\n\nconst STRIDE = VERTEX_FORMAT.reduce((sum, f) => sum + f.size, 0)\n\nconst MAX_BATCHED_QUAD = 2048\nconst MAX_BATCHED_VERTS = MAX_BATCHED_QUAD * 4 * STRIDE\nconst MAX_BATCHED_INDICES = MAX_BATCHED_QUAD * 6\n\n// vertex shader template, replace {{user}} with user vertex shader code\nconst VERT_TEMPLATE = `\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 0.0, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`\n\n// fragment shader template, replace {{user}} with user fragment shader code\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`\n\n// default {{user}} vertex shader code\nconst DEF_VERT = `\nvec4 vert(vec2 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`\n\n// default {{user}} fragment shader code\nconst DEF_FRAG = `\nvec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n])\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n\t\"drawInspect\",\n])\n\n// convert anchor string to a vec2 offset\nfunction anchorPt(orig: Anchor | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return new Vec2(-1, -1)\n\t\tcase \"top\": return new Vec2(0, -1)\n\t\tcase \"topright\": return new Vec2(1, -1)\n\t\tcase \"left\": return new Vec2(-1, 0)\n\t\tcase \"center\": return new Vec2(0, 0)\n\t\tcase \"right\": return new Vec2(1, 0)\n\t\tcase \"botleft\": return new Vec2(-1, 1)\n\t\tcase \"bot\": return new Vec2(0, 1)\n\t\tcase \"botright\": return new Vec2(1, 1)\n\t\tdefault: return orig\n\t}\n}\n\nfunction alignPt(align: TextAlign): number {\n\tswitch (align) {\n\t\tcase \"left\": return 0\n\t\tcase \"center\": return 0.5\n\t\tcase \"right\": return 1\n\t\tdefault: return 0\n\t}\n}\n\nfunction createEmptyAudioBuffer(ctx: AudioContext) {\n\treturn ctx.createBuffer(1, 1, 44100)\n}\n\n// only exports one kaboom() which contains all the state\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\n\tconst root = gopt.root ?? document.body\n\n\t// if root is not defined (which falls back to <body>) we assume user is using kaboom on a clean page, and modify <body> to better fit a full screen canvas\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\"\n\t\tdocument.body.style[\"height\"] = \"100%\"\n\t\tdocument.body.style[\"margin\"] = \"0px\"\n\t\tdocument.documentElement.style[\"width\"] = \"100%\"\n\t\tdocument.documentElement.style[\"height\"] = \"100%\"\n\t}\n\n\t// create a <canvas> if user didn't provide one\n\tconst canvas = gopt.canvas ?? (() => {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\troot.appendChild(canvas)\n\t\treturn canvas\n\t})()\n\n\t// global pixel scale\n\tconst gscale = gopt.scale ?? 1\n\tconst fixedSize = gopt.width && gopt.height && !gopt.stretch && !gopt.letterbox\n\n\t// adjust canvas size according to user size / viewport settings\n\tif (fixedSize) {\n\t\tcanvas.width = gopt.width * gscale\n\t\tcanvas.height = gopt.height * gscale\n\t} else {\n\t\tcanvas.width = canvas.parentElement.offsetWidth\n\t\tcanvas.height = canvas.parentElement.offsetHeight\n\t}\n\n\tconst cw = canvas.width\n\tconst ch = canvas.height\n\tconst pixelDensity = gopt.pixelDensity || window.devicePixelRatio\n\n\tcanvas.width *= pixelDensity\n\tcanvas.height *= pixelDensity\n\n\t// canvas css styles\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t]\n\n\tif (fixedSize) {\n\t\tstyles.push(`width: ${cw}px`)\n\t\tstyles.push(`height: ${ch}px`)\n\t} else {\n\t\tstyles.push(\"width: 100%\")\n\t\tstyles.push(\"height: 100%\")\n\t}\n\n\tif (gopt.crisp) {\n\t\t// chrome only supports pixelated and firefox only supports crisp-edges\n\t\tstyles.push(\"image-rendering: pixelated\")\n\t\tstyles.push(\"image-rendering: crisp-edges\")\n\t}\n\n\tcanvas.style.cssText = styles.join(\";\")\n\t// make canvas focusable\n\tcanvas.tabIndex = 0\n\n\tconst fontCacheCanvas = document.createElement(\"canvas\")\n\tfontCacheCanvas.width = MAX_TEXT_CACHE_SIZE\n\tfontCacheCanvas.height = MAX_TEXT_CACHE_SIZE\n\tconst fontCacheCtx = fontCacheCanvas.getContext(\"2d\", {\n\t\twillReadFrequently: true,\n\t})\n\n\tconst app = initApp({\n\t\tcanvas: canvas,\n\t\ttouchToMouse: gopt.touchToMouse,\n\t\tgamepads: gopt.gamepads,\n\t\tpixelDensity: gopt.pixelDensity,\n\t\tmaxFPS: gopt.maxFPS,\n\t})\n\n\tconst gc: Array<() => void> = []\n\n\tconst gl = app.canvas()\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t})\n\n\tclass Texture {\n\n\t\tsrc: null | TexImageSource = null\n\t\tglTex: WebGLTexture\n\t\twidth: number\n\t\theight: number\n\n\t\tconstructor(w: number, h: number, opt: TextureOpt = {}) {\n\n\t\t\tthis.glTex = gl.createTexture()\n\t\t\tgc.push(() => this.free())\n\t\t\tthis.bind()\n\n\t\t\tif (w && h) {\n\t\t\t\tgl.texImage2D(\n\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t0, gl.RGBA,\n\t\t\t\t\tw,\n\t\t\t\t\th,\n\t\t\t\t\t0,\n\t\t\t\t\tgl.RGBA,\n\t\t\t\t\tgl.UNSIGNED_BYTE,\n\t\t\t\t\tnull,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.width = w\n\t\t\tthis.height = h\n\n\t\t\tconst filter = (() => {\n\t\t\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\t\t\tcase \"linear\": return gl.LINEAR\n\t\t\t\t\tcase \"nearest\": return gl.NEAREST\n\t\t\t\t\tdefault: return gl.NEAREST\n\t\t\t\t}\n\t\t\t})()\n\n\t\t\tconst wrap = (() => {\n\t\t\t\tswitch (opt.wrap) {\n\t\t\t\t\tcase \"repeat\": return gl.REPEAT\n\t\t\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE\n\t\t\t\t\tdefault: return gl.CLAMP_TO_EDGE\n\t\t\t\t}\n\t\t\t})()\n\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap)\n\t\t\tthis.unbind()\n\n\t\t}\n\n\t\tstatic fromImage(img: TexImageSource, opt: TextureOpt = {}): Texture {\n\t\t\tconst tex = new Texture(0, 0, opt)\n\t\t\ttex.bind()\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\t\ttex.width = img.width\n\t\t\ttex.height = img.height\n\t\t\ttex.unbind()\n\t\t\ttex.src = img\n\t\t\treturn tex\n\t\t}\n\n\t\tupdate(img: TexImageSource, x = 0, y = 0) {\n\t\t\tthis.bind()\n\t\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, x, y, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\t\tthis.unbind()\n\t\t}\n\n\t\tbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.glTex)\n\t\t}\n\n\t\tunbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null)\n\t\t}\n\n\t\tfree() {\n\t\t\tgl.deleteTexture(this.glTex)\n\t\t}\n\n\t}\n\n\tclass TexPacker {\n\t\tprivate tex: Texture\n\t\tprivate canvas: HTMLCanvasElement\n\t\tprivate ctx: CanvasRenderingContext2D\n\t\tprivate x: number = 0\n\t\tprivate y: number = 0\n\t\tprivate curHeight: number = 0\n\t\tconstructor(w: number, h: number) {\n\t\t\tthis.canvas = document.createElement(\"canvas\")\n\t\t\tthis.canvas.width = w\n\t\t\tthis.canvas.height = h\n\t\t\tthis.tex = Texture.fromImage(this.canvas)\n\t\t\tthis.ctx = this.canvas.getContext(\"2d\")\n\t\t}\n\t\tadd(img: TexImageSource): [Texture, Quad] {\n\t\t\tif (img.width > this.canvas.width || img.height > this.canvas.height) {\n\t\t\t\tthrow new Error(`Texture size (${img.width} x ${img.height}) exceeds limit (${this.canvas.width} x ${this.canvas.height})`)\n\t\t\t}\n\t\t\tif (this.x + img.width > this.canvas.width) {\n\t\t\t\tthis.x = 0\n\t\t\t\tthis.y += this.curHeight\n\t\t\t\tthis.curHeight = 0\n\t\t\t}\n\t\t\tif (this.y + img.height > this.canvas.height) {\n\t\t\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\t\t\t\tthis.tex = Texture.fromImage(this.canvas)\n\t\t\t\tthis.x = 0\n\t\t\t\tthis.y = 0\n\t\t\t\tthis.curHeight = 0\n\t\t\t}\n\t\t\tconst pos = new Vec2(this.x, this.y)\n\t\t\tthis.x += img.width\n\t\t\tif (img.height > this.curHeight) {\n\t\t\t\tthis.curHeight = img.height\n\t\t\t}\n\t\t\tif (img instanceof ImageData) {\n\t\t\t\tthis.ctx.putImageData(img, pos.x, pos.y)\n\t\t\t} else {\n\t\t\t\tthis.ctx.drawImage(img, pos.x, pos.y)\n\t\t\t}\n\t\t\tthis.tex.update(this.canvas)\n\t\t\treturn [this.tex, new Quad(\n\t\t\t\tpos.x / this.canvas.width,\n\t\t\t\tpos.y / this.canvas.height,\n\t\t\t\timg.width / this.canvas.width,\n\t\t\t\timg.height / this.canvas.height,\n\t\t\t)]\n\t\t}\n\t}\n\n\tclass FrameBuffer {\n\n\t\ttex: Texture\n\t\tglFrameBuffer: WebGLFramebuffer\n\t\tglRenderBuffer: WebGLRenderbuffer\n\n\t\tconstructor(w: number, h: number, opt: TextureOpt = {}) {\n\t\t\tthis.tex = new Texture(w, h, opt)\n\t\t\tthis.glFrameBuffer = gl.createFramebuffer()\n\t\t\tthis.glRenderBuffer = gl.createRenderbuffer()\n\t\t\tgc.push(() => this.free())\n\t\t\tthis.bind()\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, w, h)\n\t\t\tgl.framebufferTexture2D(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.COLOR_ATTACHMENT0,\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\tthis.tex.glTex,\n\t\t\t\t0,\n\t\t\t)\n\t\t\tgl.framebufferRenderbuffer(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.DEPTH_STENCIL_ATTACHMENT,\n\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\tthis.glRenderBuffer,\n\t\t\t)\n\t\t\tthis.unbind()\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.tex.width\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.tex.height\n\t\t}\n\n\t\tbind() {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.glFrameBuffer)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.glRenderBuffer)\n\t\t}\n\n\t\tunbind() {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null)\n\t\t}\n\n\t\tfree() {\n\t\t\tgl.deleteFramebuffer(this.glFrameBuffer)\n\t\t\tgl.deleteRenderbuffer(this.glRenderBuffer)\n\t\t\tthis.tex.free()\n\t\t}\n\n\t}\n\n\tconst gfx = (() => {\n\n\t\tconst defShader = makeShader(DEF_VERT, DEF_FRAG)\n\n\t\t// a 1x1 white texture to draw raw shapes like rectangles and polygons\n\t\t// we use a texture for those so we can use only 1 pipeline for drawing sprites + shapes\n\t\tconst emptyTex = Texture.fromImage(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255 ]), 1, 1),\n\t\t)\n\n\t\tconst frameBuffer = (gopt.width && gopt.height)\n\t\t\t? new FrameBuffer(gopt.width * pixelDensity, gopt.height * pixelDensity)\n\t\t\t: new FrameBuffer(gl.drawingBufferWidth, gl.drawingBufferHeight)\n\n\t\tlet bgColor: null | Color = null\n\t\tlet bgAlpha = 1\n\n\t\tif (gopt.background) {\n\t\t\tbgColor = Color.fromArray(gopt.background)\n\t\t\tbgAlpha = gopt.background[3] ?? 1\n\t\t\tgl.clearColor(\n\t\t\t\tbgColor.r / 255,\n\t\t\t\tbgColor.g / 255,\n\t\t\t\tbgColor.b / 255,\n\t\t\t\tbgAlpha,\n\t\t\t)\n\t\t}\n\n\t\tgl.enable(gl.BLEND)\n\t\tgl.enable(gl.SCISSOR_TEST)\n\t\tgl.blendFuncSeparate(\n\t\t\tgl.SRC_ALPHA,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t\tgl.ONE,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t)\n\n\t\t// we only use one vertex and index buffer that batches all draw calls\n\t\tconst vbuf = gl.createBuffer()\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf)\n\t\tgl.bufferData(gl.ARRAY_BUFFER, MAX_BATCHED_VERTS * 4, gl.DYNAMIC_DRAW)\n\n\t\tVERTEX_FORMAT.reduce((offset, f, i) => {\n\t\t\tgl.vertexAttribPointer(i, f.size, gl.FLOAT, false, STRIDE * 4, offset)\n\t\t\tgl.enableVertexAttribArray(i)\n\t\t\treturn offset + f.size * 4\n\t\t}, 0)\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\n\t\tconst ibuf = gl.createBuffer()\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf)\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, MAX_BATCHED_INDICES * 4, gl.DYNAMIC_DRAW)\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\n\t\t// a checkerboard texture used for the default background\n\t\tconst bgTex = Texture.fromImage(\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2), {\n\t\t\t\twrap: \"repeat\",\n\t\t\t\tfilter: \"nearest\",\n\t\t\t},\n\t\t)\n\n\t\treturn {\n\n\t\t\t// keep track of how many draw calls we're doing this frame\n\t\t\tdrawCalls: 0,\n\t\t\t// how many draw calls we're doing last frame, this is the number we give to users\n\t\t\tlastDrawCalls: 0,\n\n\t\t\t// gfx states\n\t\t\tdefShader: defShader,\n\t\t\tcurShader: defShader,\n\t\t\tframeBuffer: frameBuffer,\n\t\t\tpostShader: null,\n\t\t\tpostShaderUniform: null,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tcurUniform: {},\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\n\t\t\t// local vertex / index buffer queue\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\n\t\t\ttransform: new Mat4(),\n\t\t\ttransformStack: [],\n\n\t\t\tbgTex: bgTex,\n\t\t\tbgColor: bgColor,\n\t\t\tbgAlpha: bgAlpha,\n\n\t\t\twidth: gopt.width ?? gl.drawingBufferWidth / pixelDensity / gscale,\n\t\t\theight: gopt.height ?? gl.drawingBufferHeight / pixelDensity / gscale,\n\n\t\t\tviewport: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth: gl.drawingBufferWidth,\n\t\t\t\theight: gl.drawingBufferHeight,\n\t\t\t},\n\n\t\t}\n\n\t})()\n\n\tclass SpriteData {\n\n\t\ttex: Texture\n\t\tframes: Quad[] = [ new Quad(0, 0, 1, 1) ]\n\t\tanims: SpriteAnims = {}\n\t\tslice9: NineSlice | null = null\n\n\t\tconstructor(\n\t\t\ttex: Texture,\n\t\t\tframes?: Quad[],\n\t\t\tanims: SpriteAnims = {},\n\t\t\tslice9: NineSlice = null,\n\t\t) {\n\t\t\tthis.tex = tex\n\t\t\tif (frames) this.frames = frames\n\t\t\tthis.anims = anims\n\t\t\tthis.slice9 = slice9\n\t\t}\n\n\t\tstatic from(src: LoadSpriteSrc, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn typeof src === \"string\"\n\t\t\t\t? SpriteData.fromURL(src, opt)\n\t\t\t\t: Promise.resolve(SpriteData.fromImage(src, opt))\n\t\t}\n\n\t\tstatic fromImage(data: TexImageSource, opt: LoadSpriteOpt = {}): SpriteData {\n\t\t\tconst [tex, quad] = assets.packer.add(data)\n\t\t\tconst frames = opt.frames ? opt.frames.map((f) => new Quad(\n\t\t\t\tquad.x + f.x * quad.w,\n\t\t\t\tquad.y + f.y * quad.h,\n\t\t\t\tf.w * quad.w,\n\t\t\t\tf.h * quad.h,\n\t\t\t)) : slice(opt.sliceX || 1, opt.sliceY || 1, quad.x, quad.y, quad.w, quad.h)\n\t\t\treturn new SpriteData(tex, frames, opt.anims, opt.slice9)\n\t\t}\n\n\t\tstatic fromURL(url: string, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn loadImg(url).then((img) => SpriteData.fromImage(img, opt))\n\t\t}\n\n\t}\n\n\tclass SoundData {\n\n\t\tbuf: AudioBuffer\n\n\t\tconstructor(buf: AudioBuffer) {\n\t\t\tthis.buf = buf\n\t\t}\n\n\t\tstatic fromArrayBuffer(buf: ArrayBuffer): Promise<SoundData> {\n\t\t\treturn new Promise((resolve, reject) =>\n\t\t\t\taudio.ctx.decodeAudioData(buf, resolve, reject),\n\t\t\t).then((buf: AudioBuffer) => new SoundData(buf))\n\t\t}\n\n\t\tstatic fromURL(url: string): Promise<SoundData> {\n\t\t\tif (isDataURL(url)) {\n\t\t\t\treturn SoundData.fromArrayBuffer(dataURLToArrayBuffer(url))\n\t\t\t} else {\n\t\t\t\treturn fetchArrayBuffer(url).then((buf) => SoundData.fromArrayBuffer(buf))\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst audio = (() => {\n\n\t\t// TODO: handle when audio context is unavailable\n\t\tconst ctx = new (\n\t\t\twindow.AudioContext || (window as any).webkitAudioContext\n\t\t)() as AudioContext\n\t\tconst masterNode = ctx.createGain()\n\t\tmasterNode.connect(ctx.destination)\n\n\t\t// by default browsers can only load audio async, we don't deal with that and just start with an empty audio buffer\n\t\tconst burpSnd = new SoundData(createEmptyAudioBuffer(ctx))\n\n\t\t// load that burp sound\n\t\tctx.decodeAudioData(burpSoundSrc.buffer.slice(0)).then((buf) => {\n\t\t\tburpSnd.buf = buf\n\t\t}).catch((err) => {\n\t\t\tconsole.error(\"Failed to load burp: \", err)\n\t\t})\n\n\t\treturn {\n\t\t\tctx,\n\t\t\tmasterNode,\n\t\t\tburpSnd,\n\t\t}\n\n\t})()\n\n\tclass Asset<D> {\n\t\tloaded: boolean = false\n\t\tdata: D | null = null\n\t\terror: Error | null = null\n\t\tprivate onLoadEvents: Event<[D]> = new Event()\n\t\tprivate onErrorEvents: Event<[Error]> = new Event()\n\t\tprivate onFinishEvents: Event<[]> = new Event()\n\t\tconstructor(loader: Promise<D>) {\n\t\t\tloader.then((data) => {\n\t\t\t\tthis.data = data\n\t\t\t\tthis.onLoadEvents.trigger(data)\n\t\t\t}).catch((err) => {\n\t\t\t\tthis.error = err\n\t\t\t\tif (this.onErrorEvents.numListeners() > 0) {\n\t\t\t\t\tthis.onErrorEvents.trigger(err)\n\t\t\t\t} else {\n\t\t\t\t\tthrow err\n\t\t\t\t}\n\t\t\t}).finally(() => {\n\t\t\t\tthis.onFinishEvents.trigger()\n\t\t\t\tthis.loaded = true\n\t\t\t})\n\t\t}\n\t\tstatic loaded<D>(data: D): Asset<D> {\n\t\t\tconst asset = new Asset(Promise.resolve(data)) as Asset<D>\n\t\t\tasset.data = data\n\t\t\tasset.loaded = true\n\t\t\treturn asset\n\t\t}\n\t\tonLoad(action: (data: D) => void) {\n\t\t\tif (this.loaded && this.data) {\n\t\t\t\taction(this.data)\n\t\t\t} else {\n\t\t\t\tthis.onLoadEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tonError(action: (err: Error) => void) {\n\t\t\tif (this.loaded && this.error) {\n\t\t\t\taction(this.error)\n\t\t\t} else {\n\t\t\t\tthis.onErrorEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tonFinish(action: () => void) {\n\t\t\tif (this.loaded) {\n\t\t\t\taction()\n\t\t\t} else {\n\t\t\t\tthis.onFinishEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tthen(action: (data: D) => void): Asset<D> {\n\t\t\treturn this.onLoad(action)\n\t\t}\n\t\tcatch(action: (err: Error) => void): Asset<D> {\n\t\t\treturn this.onError(action)\n\t\t}\n\t\tfinally(action: () => void): Asset<D> {\n\t\t\treturn this.onFinish(action)\n\t\t}\n\t}\n\n\tclass AssetBucket<D> {\n\t\tassets: Map<string, Asset<D>> = new Map()\n\t\tlastUID: number = 0\n\t\tadd(name: string | null, loader: Promise<D>): Asset<D> {\n\t\t\t// if user don't provide a name we use a generated one\n\t\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\t\tconst asset = new Asset(loader)\n\t\t\tthis.assets.set(id, asset)\n\t\t\treturn asset\n\t\t}\n\t\taddLoaded(name: string | null, data: D): Asset<D> {\n\t\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\t\tconst asset = Asset.loaded(data)\n\t\t\tthis.assets.set(id, asset)\n\t\t\treturn asset\n\t\t}\n\t\tget(handle: string): Asset<D> | void {\n\t\t\treturn this.assets.get(handle)\n\t\t}\n\t\tprogress(): number {\n\t\t\tif (this.assets.size === 0) {\n\t\t\t\treturn 1\n\t\t\t}\n\t\t\tlet loaded = 0\n\t\t\tthis.assets.forEach((asset) => {\n\t\t\t\tif (asset.loaded) {\n\t\t\t\t\tloaded++\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn loaded / this.assets.size\n\t\t}\n\t}\n\n\tconst assets = {\n\t\t// prefix for when loading from a url\n\t\turlPrefix: \"\",\n\t\t// asset holders\n\t\tsprites: new AssetBucket<SpriteData>(),\n\t\tfonts: new AssetBucket<FontData>(),\n\t\tbitmapFonts: new AssetBucket<BitmapFontData>(),\n\t\tsounds: new AssetBucket<SoundData>(),\n\t\tshaders: new AssetBucket<ShaderData>(),\n\t\tcustom: new AssetBucket<any>(),\n\t\tpacker: new TexPacker(SPRITE_ATLAS_WIDTH, SPRITE_ATLAS_HEIGHT),\n\t\t// if we finished initially loading all assets\n\t\tloaded: false,\n\t}\n\n\tconst game = {\n\n\t\t// general events\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [Gamepad],\n\t\t\tgamepadDisconnect: [Gamepad],\n\t\t\tscroll: [Vec2],\n\t\t\tadd: [GameObj],\n\t\t\tdestroy: [GameObj],\n\t\t\tload: [],\n\t\t\tloading: [number],\n\t\t\terror: [Error],\n\t\t\tinput: [],\n\t\t\tframeEnd: [],\n\t\t\tresize: [],\n\t\t\tsceneLeave: [string],\n\t\t}>(),\n\n\t\t// object events\n\t\tobjEvents: new EventHandler(),\n\n\t\t// root game object\n\t\troot: make([]),\n\n\t\t// misc\n\t\tgravity: 0,\n\t\tscenes: {},\n\n\t\t// on screen log\n\t\tlogs: [],\n\n\t\t// camera\n\t\tcam: {\n\t\t\tpos: null,\n\t\t\tscale: new Vec2(1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\ttransform: new Mat4(),\n\t\t},\n\n\t}\n\n\t// TODO: accept Asset<T>?\n\t// wrap individual loaders with global loader counter, for stuff like progress bar\n\tfunction load<T>(prom: Promise<T>): Asset<T> {\n\t\treturn assets.custom.add(null, prom)\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\t\tconst buckets = [\n\t\t\tassets.sprites,\n\t\t\tassets.sounds,\n\t\t\tassets.shaders,\n\t\t\tassets.fonts,\n\t\t\tassets.bitmapFonts,\n\t\t\tassets.custom,\n\t\t]\n\t\treturn buckets.reduce((n, bucket) => n + bucket.progress(), 0) / buckets.length\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path?: string): string {\n\t\tif (path !== undefined) {\n\t\t\tassets.urlPrefix = path\n\t\t}\n\t\treturn assets.urlPrefix\n\t}\n\n\t// wrapper around fetch() that applies urlPrefix and basic error handling\n\tfunction fetchURL(path: string) {\n\t\tconst url = assets.urlPrefix + path\n\t\treturn fetch(url)\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) throw new Error(`Failed to fetch ${url}`)\n\t\t\t\treturn res\n\t\t\t})\n\t}\n\n\tfunction fetchJSON(path: string) {\n\t\treturn fetchURL(path).then((res) => res.json())\n\t}\n\n\tfunction fetchText(path: string) {\n\t\treturn fetchURL(path).then((res) => res.text())\n\t}\n\n\tfunction fetchArrayBuffer(path: string) {\n\t\treturn fetchURL(path).then((res) => res.arrayBuffer())\n\t}\n\n\t// wrapper around image loader to get a Promise\n\tfunction loadImg(src: string): Promise<HTMLImageElement> {\n\t\tconst img = new Image()\n\t\timg.crossOrigin = \"anonymous\"\n\t\timg.src = isDataURL(src) ? src : assets.urlPrefix + src\n\t\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\t\timg.onload = () => resolve(img)\n\t\t\timg.onerror = () => reject(new Error(`Failed to load image from \"${src}\"`))\n\t\t})\n\t}\n\n\tfunction loadJSON(name, url) {\n\t\treturn assets.custom.add(name, fetchJSON(url))\n\t}\n\n\tclass FontData {\n\t\tfontface: FontFace\n\t\toutline: number\n\t\tfilter: TexFilter\n\t\tconstructor(face: FontFace, opt: LoadFontOpt = {}) {\n\t\t\tthis.fontface = face\n\t\t\tthis.outline = opt.outline ?? 0\n\t\t\tthis.filter = opt.filter ?? DEF_FONT_FILTER\n\t\t}\n\t}\n\n\t// TODO: pass in null src to store opt for default fonts like \"monospace\"\n\tfunction loadFont(\n\t\tname: string,\n\t\tsrc: string | ArrayBuffer,\n\t\topt: LoadFontOpt = {},\n\t): Asset<FontData> {\n\t\tconst font = new FontFace(name, typeof src === \"string\" ? `url(${src})` : src)\n\t\tdocument.fonts.add(font)\n\t\treturn assets.fonts.add(name, font.load().catch((err) => {\n\t\t\tthrow new Error(`Failed to load font from \"${src}\": ${err}`)\n\t\t}).then((face) => new FontData(face, opt)))\n\t}\n\n\t// TODO: support outline\n\t// TODO: support LoadSpriteSrc\n\tfunction loadBitmapFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt: LoadBitmapFontOpt = {},\n\t): Asset<BitmapFontData> {\n\t\treturn assets.bitmapFonts.add(name, loadImg(src)\n\t\t\t.then((img) => {\n\t\t\t\treturn makeFont(\n\t\t\t\t\tTexture.fromImage(img, opt),\n\t\t\t\t\tgw,\n\t\t\t\t\tgh,\n\t\t\t\t\topt.chars ?? ASCII_CHARS,\n\t\t\t\t)\n\t\t\t}),\n\t\t)\n\t}\n\n\t// get an array of frames based on configuration on how to slice the image\n\tfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\t\tconst frames = []\n\t\tconst qw = w / x\n\t\tconst qh = h / y\n\t\tfor (let j = 0; j < y; j++) {\n\t\t\tfor (let i = 0; i < x; i++) {\n\t\t\t\tframes.push(new Quad(\n\t\t\t\t\tdx + i * qw,\n\t\t\t\t\tdy + j * qh,\n\t\t\t\t\tqw,\n\t\t\t\t\tqh,\n\t\t\t\t))\n\t\t\t}\n\t\t}\n\t\treturn frames\n\t}\n\n\t// TODO: load synchronously if passed TexImageSource\n\tfunction loadSpriteAtlas(\n\t\tsrc: LoadSpriteSrc,\n\t\tdata: SpriteAtlasData | string,\n\t): Asset<Record<string, SpriteData>> {\n\t\tif (typeof data === \"string\") {\n\t\t\treturn load(new Promise((res, rej) => {\n\t\t\t\tfetchJSON(data).then((json) => {\n\t\t\t\t\tloadSpriteAtlas(src, json).then(res).catch(rej)\n\t\t\t\t})\n\t\t\t}))\n\t\t}\n\t\treturn load(SpriteData.from(src).then((atlas) => {\n\t\t\tconst map = {}\n\t\t\tfor (const name in data) {\n\t\t\t\tconst info = data[name]\n\t\t\t\tconst quad = atlas.frames[0]\n\t\t\t\tconst w = SPRITE_ATLAS_WIDTH * quad.w\n\t\t\t\tconst h = SPRITE_ATLAS_HEIGHT * quad.h\n\t\t\t\tconst frames = info.frames ? info.frames.map((f) => new Quad(\n\t\t\t\t\tquad.x + (info.x + f.x) / w * quad.w,\n\t\t\t\t\tquad.y + (info.y + f.y) / h * quad.h,\n\t\t\t\t\tf.w / w * quad.w,\n\t\t\t\t\tf.h / h * quad.h,\n\t\t\t\t)) : slice(\n\t\t\t\t\tinfo.sliceX || 1,\n\t\t\t\t\tinfo.sliceY || 1,\n\t\t\t\t\tquad.x + info.x / w * quad.w,\n\t\t\t\t\tquad.y + info.y / h * quad.h,\n\t\t\t\t\tinfo.width / w * quad.w,\n\t\t\t\t\tinfo.height / h * quad.h,\n\t\t\t\t)\n\t\t\t\tconst spr = new SpriteData(atlas.tex, frames, info.anims)\n\t\t\t\tassets.sprites.addLoaded(name, spr)\n\t\t\t\tmap[name] = spr\n\t\t\t}\n\t\t\treturn map\n\t\t}))\n\t}\n\n\tfunction createSpriteSheet(\n\t\timages: TexImageSource[],\n\t\topt: LoadSpriteOpt = {},\n\t): SpriteData {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\tconst width = images[0].width\n\t\tconst height = images[0].height\n\t\tcanvas.width = width * images.length\n\t\tcanvas.height = height\n\t\tconst ctx = canvas.getContext(\"2d\")\n\t\timages.forEach((img, i) => {\n\t\t\tif (img instanceof ImageData) {\n\t\t\t\tctx.putImageData(img, i * width, 0)\n\t\t\t} else {\n\t\t\t\tctx.drawImage(img, i * width, 0)\n\t\t\t}\n\t\t})\n\t\tconst merged = ctx.getImageData(0, 0, images.length * width, height)\n\t\treturn SpriteData.fromImage(merged, {\n\t\t\t...opt,\n\t\t\tsliceX: images.length,\n\t\t\tsliceY: 1,\n\t\t})\n\t}\n\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string | null,\n\t\tsrc: LoadSpriteSrc | LoadSpriteSrc[],\n\t\topt: LoadSpriteOpt = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Asset<SpriteData> {\n\t\tif (Array.isArray(src)) {\n\t\t\tif (src.some((s) => typeof s === \"string\")) {\n\t\t\t\treturn assets.sprites.add(\n\t\t\t\t\tname,\n\t\t\t\t\tPromise.all(src.map((s) => {\n\t\t\t\t\t\treturn typeof s === \"string\" ? loadImg(s) : Promise.resolve(s)\n\t\t\t\t\t})).then((images) => createSpriteSheet(images, opt)),\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, createSpriteSheet(src as TexImageSource[], opt))\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof src === \"string\") {\n\t\t\t\treturn assets.sprites.add(name, SpriteData.from(src, opt))\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, SpriteData.fromImage(src, opt))\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction loadPedit(name: string | null, src: string | PeditFile): Asset<SpriteData> {\n\n\t\t// eslint-disable-next-line\n\t\treturn assets.sprites.add(name, new Promise(async (resolve) => {\n\n\t\t\tconst data = typeof src === \"string\" ? await fetchJSON(src) : src\n\t\t\tconst images = await Promise.all(data.frames.map(loadImg))\n\t\t\tconst canvas = document.createElement(\"canvas\")\n\t\t\tcanvas.width = data.width\n\t\t\tcanvas.height = data.height * data.frames.length\n\n\t\t\tconst ctx = canvas.getContext(\"2d\")\n\n\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\tctx.drawImage(img, 0, i * data.height)\n\t\t\t})\n\n\t\t\tconst spr = await loadSprite(null, canvas, {\n\t\t\t\tsliceY: data.frames.length,\n\t\t\t\tanims: data.anims,\n\t\t\t})\n\n\t\t\tresolve(spr)\n\n\t\t}))\n\n\t}\n\n\tfunction loadAseprite(\n\t\tname: string | null,\n\t\timgSrc: LoadSpriteSrc,\n\t\tjsonSrc: string,\n\t): Asset<SpriteData> {\n\t\tif (typeof imgSrc === \"string\" && !jsonSrc) {\n\t\t\tjsonSrc = imgSrc.replace(new RegExp(`${getExt(imgSrc)}$`), \"json\")\n\t\t}\n\t\tconst resolveJSON = typeof jsonSrc === \"string\"\n\t\t\t? fetchJSON(jsonSrc)\n\t\t\t: Promise.resolve(jsonSrc)\n\t\treturn assets.sprites.add(name, resolveJSON.then((data) => {\n\t\t\tconst size = data.meta.size\n\t\t\tconst frames = data.frames.map((f: any) => {\n\t\t\t\treturn new Quad(\n\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t)\n\t\t\t})\n\t\t\tconst anims = {}\n\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\tanims[anim.name] = anim.from\n\t\t\t\t} else {\n\t\t\t\t\tanims[anim.name] = {\n\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\tpingpong: anim.direction === \"pingpong\",\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn SpriteData.from(imgSrc, {\n\t\t\t\tframes: frames,\n\t\t\t\tanims: anims,\n\t\t\t})\n\t\t}))\n\t}\n\n\tfunction loadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t) {\n\t\treturn assets.shaders.addLoaded(name, makeShader(vert, frag))\n\t}\n\n\tfunction loadShaderURL(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t): Asset<ShaderData> {\n\t\tconst resolveUrl = (url?: string) =>\n\t\t\turl\n\t\t\t\t? fetchText(url)\n\t\t\t\t: Promise.resolve(null)\n\t\tconst load = Promise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\treturn makeShader(vcode, fcode)\n\t\t\t})\n\t\treturn assets.shaders.add(name, load)\n\t}\n\n\t// TODO: allow stream big audio\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string | null,\n\t\tsrc: string | ArrayBuffer,\n\t\topts: LoadSoundOpt = {},\n\t): Asset<SoundData> {\n\t\treturn assets.sounds.add(\n\t\t\tname,\n\t\t\ttypeof src === \"string\"\n\t\t\t\t? SoundData.fromURL(src)\n\t\t\t\t: SoundData.fromArrayBuffer(src),\n\t\t)\n\t}\n\n\tfunction loadBean(name: string = \"bean\"): Asset<SpriteData> {\n\t\treturn loadSprite(name, beanSpriteSrc)\n\t}\n\n\tfunction getSprite(handle: string): Asset<SpriteData> | void {\n\t\treturn assets.sprites.get(handle)\n\t}\n\n\tfunction getSound(handle: string): Asset<SoundData> | void {\n\t\treturn assets.sounds.get(handle)\n\t}\n\n\tfunction getFont(handle: string): Asset<FontData> | void {\n\t\treturn assets.fonts.get(handle)\n\t}\n\n\tfunction getBitmapFont(handle: string): Asset<BitmapFontData> | void {\n\t\treturn assets.bitmapFonts.get(handle)\n\t}\n\n\tfunction getShader(handle: string): Asset<ShaderData> | void {\n\t\treturn assets.shaders.get(handle)\n\t}\n\n\tfunction getAsset(handle: string): Asset<any> | void {\n\t\treturn assets.custom.get(handle)\n\t}\n\n\tfunction resolveSprite(\n\t\tsrc: DrawSpriteOpt[\"sprite\"],\n\t): Asset<SpriteData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst spr = getSprite(src)\n\t\t\tif (spr) {\n\t\t\t\t// if it's already loaded or being loading, return it\n\t\t\t\treturn spr\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\t// if there's any other ongoing loading task we return empty and don't error yet\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\t// if all other assets are loaded and we still haven't found this sprite, throw\n\t\t\t\tthrow new Error(`Sprite not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SpriteData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new Error(`Invalid sprite: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveSound(\n\t\tsrc: Parameters<typeof play>[0],\n\t): Asset<SoundData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst snd = getSound(src)\n\t\t\tif (snd) {\n\t\t\t\treturn snd\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Sound not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SoundData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new Error(`Invalid sound: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveShader(\n\t\tsrc: RenderProps[\"shader\"],\n\t): ShaderData | Asset<ShaderData> | null {\n\t\tif (!src) {\n\t\t\treturn gfx.defShader\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst shader = getShader(src)\n\t\t\tif (shader) {\n\t\t\t\treturn shader.data ?? shader\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Shader not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\tfunction resolveFont(\n\t\tsrc: DrawTextOpt[\"font\"],\n\t):\n\t\t| FontData\n\t\t| Asset<FontData>\n\t\t| BitmapFontData\n\t\t| Asset<BitmapFontData>\n\t\t| string\n\t\t| void\n\t{\n\t\tif (!src) {\n\t\t\treturn resolveFont(gopt.font ?? DEF_FONT)\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst bfont = getBitmapFont(src)\n\t\t\tconst font = getFont(src)\n\t\t\tif (bfont) {\n\t\t\t\treturn bfont.data ?? bfont\n\t\t\t} else if (font) {\n\t\t\t\treturn font.data ?? font\n\t\t\t} else if (document.fonts.check(`${DEF_TEXT_CACHE_SIZE}px ${src}`)) {\n\t\t\t\treturn src\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Font not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\taudio.masterNode.gain.value = v\n\t\t}\n\t\treturn audio.masterNode.gain.value\n\t}\n\n\t// TODO: time() not correct when looped over or ended\n\t// TODO: onEnd() not working\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsrc: string | SoundData | Asset<SoundData>,\n\t\topt: AudioPlayOpt = {},\n\t): AudioPlay {\n\n\t\tconst ctx = audio.ctx\n\t\tlet paused = opt.paused ?? false\n\t\tlet srcNode = ctx.createBufferSource()\n\t\tconst onEndEvents = new Event()\n\t\tconst gainNode = ctx.createGain()\n\t\tconst pos = opt.seek ?? 0\n\t\tlet startTime = 0\n\t\tlet stopTime = 0\n\t\tlet started = false\n\n\t\tsrcNode.loop = Boolean(opt.loop)\n\t\tsrcNode.detune.value = opt.detune ?? 0\n\t\tsrcNode.playbackRate.value = opt.speed ?? 1\n\t\tsrcNode.connect(gainNode)\n\t\tsrcNode.onended = () => {\n\t\t\tif (getTime() >= srcNode.buffer?.duration ?? Number.POSITIVE_INFINITY) {\n\t\t\t\tonEndEvents.trigger()\n\t\t\t}\n\t\t}\n\t\tgainNode.connect(audio.masterNode)\n\t\tgainNode.gain.value = opt.volume ?? 1\n\n\t\tconst start = (data: SoundData) => {\n\t\t\tsrcNode.buffer = data.buf\n\t\t\tif (!paused) {\n\t\t\t\tstartTime = ctx.currentTime\n\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\tstarted = true\n\t\t\t}\n\t\t}\n\n\t\tconst snd = resolveSound(src)\n\n\t\tif (snd instanceof Asset) {\n\t\t\tsnd.onLoad(start)\n\t\t}\n\n\t\tconst getTime = () => {\n\t\t\tif (!srcNode.buffer) return 0\n\t\t\tconst t = paused\n\t\t\t\t? stopTime - startTime\n\t\t\t\t: ctx.currentTime - startTime\n\t\t\tconst d = srcNode.buffer.duration\n\t\t\treturn srcNode.loop ? t % d : Math.min(t, d)\n\t\t}\n\n\t\tconst cloneNode = (oldNode: AudioBufferSourceNode) => {\n\t\t\tconst newNode = ctx.createBufferSource()\n\t\t\tnewNode.buffer = oldNode.buffer\n\t\t\tnewNode.loop = oldNode.loop\n\t\t\tnewNode.playbackRate.value = oldNode.playbackRate.value\n\t\t\tnewNode.detune.value = oldNode.detune.value\n\t\t\tnewNode.onended = oldNode.onended\n\t\t\tnewNode.connect(gainNode)\n\t\t\treturn newNode\n\t\t}\n\n\t\treturn {\n\n\t\t\tset paused(p: boolean) {\n\t\t\t\tif (paused === p) return\n\t\t\t\tpaused = p\n\t\t\t\tif (p) {\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\t\tstarted = false\n\t\t\t\t\t}\n\t\t\t\t\tstopTime = ctx.currentTime\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tconst pos = stopTime - startTime\n\t\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstartTime = ctx.currentTime - pos\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tget paused() {\n\t\t\t\treturn paused\n\t\t\t},\n\n\t\t\tplay(time: number = 0) {\n\t\t\t\tthis.seek(time)\n\t\t\t\tthis.paused = false\n\t\t\t},\n\n\t\t\tseek(time: number) {\n\t\t\t\tif (!srcNode.buffer?.duration) return\n\t\t\t\tif (time > srcNode.buffer.duration) return\n\t\t\t\tif (paused) {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = stopTime - time\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = ctx.currentTime - time\n\t\t\t\t\tsrcNode.start(0, time)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tset speed(val: number) {\n\t\t\t\tsrcNode.playbackRate.value = val\n\t\t\t},\n\n\t\t\tget speed() {\n\t\t\t\treturn srcNode.playbackRate.value\n\t\t\t},\n\n\t\t\tset detune(val: number) {\n\t\t\t\tsrcNode.detune.value = val\n\t\t\t},\n\n\t\t\tget detune() {\n\t\t\t\treturn srcNode.detune.value\n\t\t\t},\n\n\t\t\tset volume(val: number) {\n\t\t\t\tgainNode.gain.value = Math.max(val, 0)\n\t\t\t},\n\n\t\t\tget volume() {\n\t\t\t\treturn gainNode.gain.value\n\t\t\t},\n\n\t\t\tset loop(l: boolean) {\n\t\t\t\tsrcNode.loop = l\n\t\t\t},\n\n\t\t\tget loop() {\n\t\t\t\treturn srcNode.loop\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn srcNode.buffer?.duration ?? 0\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\treturn getTime() % this.duration()\n\t\t\t},\n\n\t\t\tonEnd(action: () => void) {\n\t\t\t\treturn onEndEvents.add(action)\n\t\t\t},\n\n\t\t\tthen(action: () => void) {\n\t\t\t\treturn this.onEnd(action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// core kaboom logic\n\tfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\t\treturn play(audio.burpSnd, opt)\n\t}\n\n\ttype DrawTextureOpt = RenderProps & {\n\t\ttex: Texture,\n\t\twidth?: number,\n\t\theight?: number,\n\t\ttiled?: boolean,\n\t\tflipX?: boolean,\n\t\tflipY?: boolean,\n\t\tquad?: Quad,\n\t\tanchor?: Anchor | Vec2,\n\t}\n\n\tfunction makeShader(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxShader {\n\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT)\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG)\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER)\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER)\n\n\t\tgl.shaderSource(vertShader, vcode)\n\t\tgl.shaderSource(fragShader, fcode)\n\t\tgl.compileShader(vertShader)\n\t\tgl.compileShader(fragShader)\n\n\t\tconst prog = gl.createProgram()\n\n\t\tgc.push(() => gl.deleteProgram(prog))\n\t\tgl.attachShader(prog, vertShader)\n\t\tgl.attachShader(prog, fragShader)\n\n\t\tgl.bindAttribLocation(prog, 0, \"a_pos\")\n\t\tgl.bindAttribLocation(prog, 1, \"a_uv\")\n\t\tgl.bindAttribLocation(prog, 2, \"a_color\")\n\n\t\tgl.linkProgram(prog)\n\n\t\tif (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n\n\t\t\tconst formatShaderError = (msg: string) => {\n\t\t\t\tconst FMT = /^ERROR:\\s0:(?<line>\\d+):\\s(?<msg>.+)/\n\t\t\t\tconst match = msg.match(FMT)\n\t\t\t\treturn {\n\t\t\t\t\tline: Number(match.groups.line),\n\t\t\t\t\t// seem to be a \\n\\0 at the end of error messages, causing unwanted line break\n\t\t\t\t\tmsg: match.groups.msg.replace(/\\n\\0$/, \"\"),\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst vertError = gl.getShaderInfoLog(vertShader)\n\t\t\tconst fragError = gl.getShaderInfoLog(fragShader)\n\t\t\tlet msg = \"\"\n\n\t\t\tif (vertError) {\n\t\t\t\tconst err = formatShaderError(vertError)\n\t\t\t\tmsg += `Vertex shader line ${err.line - 14}: ${err.msg}`\n\t\t\t}\n\n\t\t\tif (fragError) {\n\t\t\t\tconst err = formatShaderError(fragError)\n\t\t\t\tmsg += `Fragment shader line ${err.line - 14}: ${err.msg}`\n\t\t\t}\n\n\t\t\tthrow new Error(msg)\n\n\t\t}\n\n\t\tgl.deleteShader(vertShader)\n\t\tgl.deleteShader(fragShader)\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(prog)\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null)\n\t\t\t},\n\n\t\t\tfree() {\n\t\t\t\tgl.deleteProgram(prog)\n\t\t\t},\n\n\t\t\t// TODO: support vec3 and vec4\n\t\t\tsend(uniform: Uniform) {\n\t\t\t\tfor (const name in uniform) {\n\t\t\t\t\tconst val = uniform[name]\n\t\t\t\t\tconst loc = gl.getUniformLocation(prog, name)\n\t\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\t\tgl.uniform1f(loc, val)\n\t\t\t\t\t} else if (val instanceof Mat4) {\n\t\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m))\n\t\t\t\t\t} else if (val instanceof Color) {\n\t\t\t\t\t\t// TODO: opacity?\n\t\t\t\t\t\tgl.uniform3f(loc, val.r, val.g, val.b)\n\t\t\t\t\t} else if (val instanceof Vec2) {\n\t\t\t\t\t\tgl.uniform2f(loc, val.x, val.y)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: Texture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw\n\t\tconst map: Record<string, Quad> = {}\n\t\tconst charMap = chars.split(\"\").entries()\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = new Quad(\n\t\t\t\t(i % cols) * gw,\n\t\t\t\tMath.floor(i / cols) * gh,\n\t\t\t\tgw,\n\t\t\t\tgh,\n\t\t\t)\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tsize: gh,\n\t\t}\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\tfixed: boolean,\n\t\ttex: Texture = gfx.defTex,\n\t\tshaderSrc: RenderProps[\"shader\"] = gfx.defShader,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\tconst shader = resolveShader(shaderSrc)\n\n\t\tif (!shader || shader instanceof Asset) {\n\t\t\treturn\n\t\t}\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| shader !== gfx.curShader\n\t\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > MAX_BATCHED_VERTS\n\t\t\t|| gfx.iqueue.length + indices.length > MAX_BATCHED_INDICES\n\t\t) {\n\t\t\tflush()\n\t\t}\n\n\t\tconst transform = fixed ? gfx.transform : game.cam.transform.mult(gfx.transform)\n\n\t\tfor (const v of verts) {\n\t\t\t// normalized world space coordinate [-1.0 ~ 1.0]\n\t\t\tconst pt = screen2ndc(transform.multVec2(v.pos))\n\t\t\tgfx.vqueue.push(\n\t\t\t\tpt.x, pt.y,\n\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t\t)\n\t\t}\n\n\t\tfor (const i of indices) {\n\t\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE - verts.length)\n\t\t}\n\n\t\tgfx.curTex = tex\n\t\tgfx.curShader = shader\n\t\tgfx.curUniform = uniform\n\n\t}\n\n\t// draw all batched shapes\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curShader\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf)\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue))\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf)\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue))\n\t\tgfx.curShader.bind()\n\t\tgfx.curShader.send(gfx.curUniform)\n\t\tgfx.curTex.bind()\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0)\n\t\tgfx.curTex.unbind()\n\t\tgfx.curShader.unbind()\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\n\t\tgfx.vqueue.length = 0\n\t\tgfx.iqueue.length = 0\n\n\t\tgfx.drawCalls++\n\n\t}\n\n\t// start a rendering frame, reset some states\n\tfunction frameStart() {\n\n\t\t// clear backbuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\t\tgfx.frameBuffer.bind()\n\t\tgl.viewport(0, 0, gfx.frameBuffer.width, gfx.frameBuffer.height)\n\t\t// clear framebuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\n\t\tif (!gfx.bgColor) {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tdrawUVQuad({\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\twidth() / BG_GRID_SIZE,\n\t\t\t\t\t\theight() / BG_GRID_SIZE,\n\t\t\t\t\t),\n\t\t\t\t\ttex: gfx.bgTex,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tgfx.drawCalls = 0\n\t\tgfx.transformStack.length = 0\n\t\tgfx.transform = new Mat4()\n\n\t}\n\n\tfunction usePostEffect(name: string, uniform?: Uniform | (() => Uniform)) {\n\t\tgfx.postShader = name\n\t\tgfx.postShaderUniform = uniform ?? null\n\t}\n\n\tfunction frameEnd() {\n\t\t// TODO: don't render debug UI with framebuffer\n\t\t// TODO: polish framebuffer rendering / sizing issues\n\t\tflush()\n\t\tgfx.frameBuffer.unbind()\n\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight)\n\n\t\tflush()\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gl.drawingBufferWidth / pixelDensity\n\t\tgfx.height = gl.drawingBufferHeight / pixelDensity\n\n\t\tdrawTexture({\n\t\t\tflipY: true,\n\t\t\ttex: gfx.frameBuffer.tex,\n\t\t\tpos: new Vec2(gfx.viewport.x, gfx.viewport.y),\n\t\t\twidth: gfx.viewport.width,\n\t\t\theight: gfx.viewport.height,\n\t\t\tshader: gfx.postShader,\n\t\t\tuniform: typeof gfx.postShaderUniform === \"function\"\n\t\t\t\t? gfx.postShaderUniform()\n\t\t\t\t: gfx.postShaderUniform,\n\t\t\tfixed: true,\n\t\t})\n\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\t\tgfx.lastDrawCalls = gfx.drawCalls\n\t}\n\n\t// convert a screen space coordinate to webgl normalized device coordinate\n\tfunction screen2ndc(pt: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t)\n\t}\n\n\tfunction pushMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone()\n\t}\n\n\tfunction pushTranslate(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 0 && p.y === 0) return\n\t\tgfx.transform.translate(p)\n\t}\n\n\tfunction pushScale(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 1 && p.y === 1) return\n\t\tgfx.transform.scale(p)\n\t}\n\n\tfunction pushRotate(a: number) {\n\t\tif (!a) return\n\t\tgfx.transform.rotate(a)\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone())\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop()\n\t\t}\n\t}\n\n\t// draw a uv textured quad\n\tfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\t\tconst q = opt.quad || new Quad(0, 0, 1, 1)\n\t\tconst color = opt.color || rgb(255, 255, 255)\n\t\tconst opacity = opt.opacity ?? 1\n\n\t\t// apply uv padding to avoid artifacts\n\t\tconst uvPadX = opt.tex ? UV_PAD / opt.tex.width : 0\n\t\tconst uvPadY = opt.tex ? UV_PAD / opt.tex.height : 0\n\t\tconst qx = q.x + uvPadX\n\t\tconst qy = q.y + uvPadY\n\t\tconst qw = q.w - uvPadX * 2\n\t\tconst qh = q.h - uvPadY * 2\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushRotate(opt.angle)\n\t\tpushScale(opt.scale)\n\t\tpushTranslate(offset)\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], opt.fixed, opt.tex, opt.shader, opt.uniform)\n\n\t\tpopTransform()\n\n\t}\n\n\t// TODO: clean\n\tfunction drawTexture(opt: DrawTextureOpt) {\n\n\t\tif (!opt.tex) {\n\t\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\")\n\t\t}\n\n\t\tconst q = opt.quad ?? new Quad(0, 0, 1, 1)\n\t\tconst w = opt.tex.width * q.w\n\t\tconst h = opt.tex.height * q.h\n\t\tconst scale = new Vec2(1)\n\n\t\tif (opt.tiled) {\n\n\t\t\t// TODO: draw fract\n\t\t\tconst repX = Math.ceil((opt.width || w) / w)\n\t\t\tconst repY = Math.ceil((opt.height || h) / h)\n\t\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(new Vec2(1, 1)).scale(0.5)\n\t\t\tconst offset = anchor.scale(repX * w, repY * h)\n\n\t\t\t// TODO: rotation\n\t\t\tfor (let i = 0; i < repX; i++) {\n\t\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: (opt.pos || new Vec2(0)).add(new Vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\tanchor: \"topleft\",\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// TODO: should this ignore scale?\n\t\t\tif (opt.width && opt.height) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = opt.height / h\n\t\t\t} else if (opt.width) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (opt.height) {\n\t\t\t\tscale.y = opt.height / h\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\n\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\ttex: opt.tex,\n\t\t\t\tquad: q,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t}))\n\n\t\t}\n\n\t}\n\n\tfunction drawSprite(opt: DrawSpriteOpt) {\n\n\t\tif (!opt.sprite) {\n\t\t\tthrow new Error(\"drawSprite() requires property \\\"sprite\\\"\")\n\t\t}\n\n\t\t// TODO: slow\n\t\tconst spr = resolveSprite(opt.sprite)\n\n\t\tif (!spr || !spr.data) {\n\t\t\treturn\n\t\t}\n\n\t\tconst q = spr.data.frames[opt.frame ?? 0]\n\n\t\tif (!q) {\n\t\t\tthrow new Error(`Frame not found: ${opt.frame ?? 0}`)\n\t\t}\n\n\t\tdrawTexture(Object.assign({}, opt, {\n\t\t\ttex: spr.data.tex,\n\t\t\tquad: q.scale(opt.quad ?? new Quad(0, 0, 1, 1)),\n\t\t}))\n\n\t}\n\n\t// generate vertices to form an arc\n\tfunction getArcPts(\n\t\tpos: Vec2,\n\t\tradiusX: number,\n\t\tradiusY: number,\n\t\tstart: number,\n\t\tend: number,\n\t\tres: number = 1,\n\t): Vec2[] {\n\n\t\t// normalize and turn start and end angles to radians\n\t\tstart = deg2rad(start % 360)\n\t\tend = deg2rad(end % 360)\n\t\tif (end <= start) end += Math.PI * 2\n\n\t\tconst pts = []\n\t\tconst nverts = Math.ceil((end - start) / deg2rad(8) * res)\n\t\tconst step = (end - start) / nverts\n\n\t\t// calculate vertices\n\t\tfor (let a = start; a < end; a += step) {\n\t\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)))\n\t\t}\n\n\t\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)))\n\n\t\treturn pts\n\n\t}\n\n\tfunction drawRect(opt: DrawRectOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(1, 1)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\n\t\tlet pts = [\n\t\t\tnew Vec2(0, 0),\n\t\t\tnew Vec2(w, 0),\n\t\t\tnew Vec2(w, h),\n\t\t\tnew Vec2(0, h),\n\t\t]\n\n\t\t// TODO: gradient for rounded rect\n\t\t// TODO: drawPolygon should handle generic rounded corners\n\t\tif (opt.radius) {\n\n\t\t\t// maxium radius is half the shortest side\n\t\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius)\n\n\t\t\tpts = [\n\t\t\t\tnew Vec2(r, 0),\n\t\t\t\tnew Vec2(w - r, 0),\n\t\t\t\t...getArcPts(new Vec2(w - r, r), r, r, 270, 360),\n\t\t\t\tnew Vec2(w, r),\n\t\t\t\tnew Vec2(w, h - r),\n\t\t\t\t...getArcPts(new Vec2(w - r, h - r), r, r, 0, 90),\n\t\t\t\tnew Vec2(w - r, h),\n\t\t\t\tnew Vec2(r, h),\n\t\t\t\t...getArcPts(new Vec2(r, h - r), r, r, 90, 180),\n\t\t\t\tnew Vec2(0, h - r),\n\t\t\t\tnew Vec2(0, r),\n\t\t\t\t...getArcPts(new Vec2(r, r), r, r, 180, 270),\n\t\t\t]\n\n\t\t}\n\n\t\tdrawPolygon(Object.assign({}, opt, {\n\t\t\toffset,\n\t\t\tpts,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: opt.horizontal ? [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t] : [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t}))\n\n\t}\n\n\tfunction drawLine(opt: DrawLineOpt) {\n\n\t\tconst { p1, p2 } = opt\n\n\t\tif (!p1 || !p2) {\n\t\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\")\n\t\t}\n\n\t\tconst w = opt.width || 1\n\n\t\t// the displacement from the line end point to the corner point\n\t\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5)\n\n\t\t// calculate the 4 corner points of the line polygon\n\t\tconst verts = [\n\t\t\tp1.sub(dis),\n\t\t\tp1.add(dis),\n\t\t\tp2.add(dis),\n\t\t\tp2.sub(dis),\n\t\t].map((p) => ({\n\t\t\tpos: new Vec2(p.x, p.y),\n\t\t\tuv: new Vec2(0),\n\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}))\n\n\t\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t}\n\n\tfunction drawLines(opt: DrawLinesOpt) {\n\n\t\tconst pts = opt.pts\n\n\t\tif (!pts) {\n\t\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tif (pts.length < 2) {\n\t\t\treturn\n\t\t}\n\n\t\tif (opt.radius && pts.length >= 3) {\n\n\t\t\t// TODO: line joines\n\t\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\t\tlet minSLen = pts[0].sdist(pts[1])\n\n\t\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\t\tminSLen = Math.min(pts[i].sdist(pts[i + 1]), minSLen)\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line\n\t\t\tconst radius = Math.min(opt.radius, Math.sqrt(minSLen) / 2)\n\n\t\t\tdrawLine(Object.assign({}, opt, { p1: pts[0], p2: pts[1] }))\n\n\t\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\t\tconst p1 = pts[i]\n\t\t\t\tconst p2 = pts[i + 1]\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: p1,\n\t\t\t\t\tp2: p2,\n\t\t\t\t}))\n\t\t\t}\n\n\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\tp1: pts[pts.length - 2],\n\t\t\t\tp2: pts[pts.length - 1],\n\t\t\t}))\n\n\t\t} else {\n\n\t\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: pts[i],\n\t\t\t\t\tp2: pts[i + 1],\n\t\t\t\t}))\n\t\t\t\t// TODO: other line join types\n\t\t\t\tif (opt.join !== \"none\") {\n\t\t\t\t\tdrawCircle(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: pts[i],\n\t\t\t\t\t\tradius: opt.width / 2,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction drawTriangle(opt: DrawTriangleOpt) {\n\t\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\t\tthrow new Error(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\")\n\t\t}\n\t\treturn drawPolygon(Object.assign({}, opt, {\n\t\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t\t}))\n\t}\n\n\tfunction drawCircle(opt: DrawCircleOpt) {\n\n\t\tif (!opt.radius) {\n\t\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\")\n\t\t}\n\n\t\tif (opt.radius === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tdrawEllipse(Object.assign({}, opt, {\n\t\t\tradiusX: opt.radius,\n\t\t\tradiusY: opt.radius,\n\t\t\tangle: 0,\n\t\t}))\n\n\t}\n\n\tfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\t\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\")\n\t\t}\n\n\t\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst start = opt.start ?? 0\n\t\tconst end = opt.end ?? 360\n\t\tconst offset = anchorPt(opt.anchor ?? \"center\").scale(new Vec2(-opt.radiusX, -opt.radiusY))\n\n\t\tconst pts = getArcPts(\n\t\t\toffset,\n\t\t\topt.radiusX,\n\t\t\topt.radiusY,\n\t\t\tstart,\n\t\t\tend,\n\t\t\topt.resolution,\n\t\t)\n\n\t\t// center\n\t\tpts.unshift(offset)\n\n\t\tconst polyOpt = Object.assign({}, opt, {\n\t\t\tpts,\n\t\t\tradius: 0,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\t...Array(pts.length - 1).fill(opt.gradient[1]),\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t})\n\n\t\t// full circle with outline shouldn't have the center point\n\t\tif (end - start >= 360 && opt.outline) {\n\t\t\tif (opt.fill !== false) {\n\t\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\t\toutline: null,\n\t\t\t\t}))\n\t\t\t}\n\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\tpts: pts.slice(1),\n\t\t\t\tfill: false,\n\t\t\t}))\n\t\t\treturn\n\t\t}\n\n\t\tdrawPolygon(polyOpt)\n\n\t}\n\n\tfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\t\tif (!opt.pts) {\n\t\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tconst npts = opt.pts.length\n\n\t\tif (npts < 3) {\n\t\t\treturn\n\t\t}\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushScale(opt.scale)\n\t\tpushRotate(opt.angle)\n\t\tpushTranslate(opt.offset)\n\n\t\tif (opt.fill !== false) {\n\n\t\t\tconst color = opt.color ?? Color.WHITE\n\n\t\t\tconst verts = opt.pts.map((pt, i) => ({\n\t\t\t\tpos: new Vec2(pt.x, pt.y),\n\t\t\t\tuv: new Vec2(0, 0),\n\t\t\t\tcolor: opt.colors ? (opt.colors[i] ?? color) : color,\n\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t}))\n\n\t\t\t// TODO: better triangulation\n\t\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t\t.flat()\n\n\t\t\tdrawRaw(verts, opt.indices ?? indices, opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t\t}\n\n\t\tif (opt.outline) {\n\t\t\tdrawLines({\n\t\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\t\tradius: opt.radius,\n\t\t\t\twidth: opt.outline.width,\n\t\t\t\tcolor: opt.outline.color,\n\t\t\t\tjoin: opt.outline.join,\n\t\t\t\tuniform: opt.uniform,\n\t\t\t\tfixed: opt.fixed,\n\t\t\t\topacity: opt.opacity,\n\t\t\t})\n\t\t}\n\n\t\tpopTransform()\n\n\t}\n\n\tfunction drawStenciled(content: () => void, mask: () => void, test: number) {\n\n\t\tflush()\n\t\tgl.clear(gl.STENCIL_BUFFER_BIT)\n\t\tgl.enable(gl.STENCIL_TEST)\n\n\t\t// don't perform test, pure write\n\t\tgl.stencilFunc(\n\t\t\tgl.NEVER,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// always replace since we're writing to the buffer\n\t\tgl.stencilOp(\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t)\n\n\t\tmask()\n\t\tflush()\n\n\t\t// perform test\n\t\tgl.stencilFunc(\n\t\t\ttest,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// don't write since we're only testing\n\t\tgl.stencilOp(\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t)\n\n\t\tcontent()\n\t\tflush()\n\t\tgl.disable(gl.STENCIL_TEST)\n\n\t}\n\n\tfunction drawMasked(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.EQUAL)\n\t}\n\n\tfunction drawSubtracted(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.NOTEQUAL)\n\t}\n\n\tfunction getViewportScale() {\n\t\treturn (gfx.viewport.width + gfx.viewport.height) / (gfx.width + gfx.height)\n\t}\n\n\tfunction drawUnscaled(content: () => void) {\n\t\tflush()\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gfx.viewport.width\n\t\tgfx.height = gfx.viewport.height\n\t\tcontent()\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\t}\n\n\tfunction applyCharTransform(fchar: FormattedChar, tr: CharTransform) {\n\t\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos)\n\t\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale))\n\t\tif (tr.angle) fchar.angle += tr.angle\n\t\tif (tr.color) fchar.color = fchar.color.mult(tr.color)\n\t\tif (tr.opacity) fchar.opacity *= tr.opacity\n\t}\n\n\t// TODO: escape\n\t// eslint-disable-next-line\n\tconst TEXT_STYLE_RE = /\\[(?<style>\\w+)\\](?<text>.*?)\\[\\/\\k<style>\\]/g\n\n\t// TODO: handle nested\n\tfunction compileStyledText(text: string): {\n\t\tcharStyleMap: Record<number, string[]>,\n\t\ttext: string,\n\t} {\n\n\t\tconst charStyleMap = {}\n\t\t// get the text without the styling syntax\n\t\tconst renderText = text.replace(TEXT_STYLE_RE, \"$2\")\n\t\tlet idxOffset = 0\n\n\t\t// put each styled char index into a map for easy access when iterating each char\n\t\tfor (const match of text.matchAll(TEXT_STYLE_RE)) {\n\t\t\tconst origIdx = match.index - idxOffset\n\t\t\tfor (let i = 0; i < match.groups.text.length; i++) {\n\t\t\t\tcharStyleMap[i + origIdx] = [match.groups.style]\n\t\t\t}\n\t\t\t// omit the style syntax in format string when calculating index\n\t\t\tidxOffset += match[0].length - match.groups.text.length\n\t\t}\n\n\t\treturn {\n\t\t\tcharStyleMap: charStyleMap,\n\t\t\ttext: renderText,\n\t\t}\n\n\t}\n\n\ttype FontAtlas = {\n\t\tfont: BitmapFontData,\n\t\tcursor: Vec2,\n\t\toutline: number,\n\t}\n\n\tconst fontAtlases: Record<string, FontAtlas> = {}\n\n\t// TODO: cache formatted text\n\t// format text and return a list of chars with their calculated position\n\tfunction formatText(opt: DrawTextOpt): FormattedText {\n\n\t\tif (opt.text === undefined) {\n\t\t\tthrow new Error(\"formatText() requires property \\\"text\\\".\")\n\t\t}\n\n\t\tlet font = resolveFont(opt.font)\n\n\t\t// if it's still loading\n\t\tif (opt.text === \"\" || font instanceof Asset || !font) {\n\t\t\treturn {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tchars: [],\n\t\t\t\topt: opt,\n\t\t\t}\n\t\t}\n\n\t\tconst { charStyleMap, text } = compileStyledText(opt.text + \"\")\n\t\tconst chars = text.split(\"\")\n\n\t\t// if it's not bitmap font, we draw it with 2d canvas or use cached image\n\t\tif (font instanceof FontData || typeof font === \"string\") {\n\n\t\t\tconst fontName = font instanceof FontData ? font.fontface.family : font\n\t\t\tconst opts: LoadFontOpt = font instanceof FontData ? {\n\t\t\t\toutline: font.outline,\n\t\t\t\tfilter: font.filter,\n\t\t\t} : {\n\t\t\t\toutline: 0,\n\t\t\t\tfilter: DEF_FONT_FILTER,\n\t\t\t}\n\n\t\t\t// TODO: customizable font tex filter\n\t\t\tconst atlas: FontAtlas = fontAtlases[fontName] ?? {\n\t\t\t\tfont: {\n\t\t\t\t\ttex: new Texture(FONT_ATLAS_WIDTH, FONT_ATLAS_HEIGHT, {\n\t\t\t\t\t\tfilter: opts.filter,\n\t\t\t\t\t}),\n\t\t\t\t\tmap: {},\n\t\t\t\t\tsize: DEF_TEXT_CACHE_SIZE,\n\t\t\t\t},\n\t\t\t\tcursor: new Vec2(0),\n\t\t\t\toutline: opts.outline,\n\t\t\t}\n\n\t\t\tif (!fontAtlases[fontName]) {\n\t\t\t\tfontAtlases[fontName] = atlas\n\t\t\t}\n\n\t\t\tfont = atlas.font\n\n\t\t\tfor (const ch of chars) {\n\n\t\t\t\tif (!atlas.font.map[ch]) {\n\n\t\t\t\t\t// TODO: use assets.packer to pack font texture\n\t\t\t\t\tconst c2d = fontCacheCtx\n\t\t\t\t\tc2d.clearRect(0, 0, fontCacheCanvas.width, fontCacheCanvas.height)\n\t\t\t\t\tc2d.font = `${font.size}px ${fontName}`\n\t\t\t\t\tc2d.textBaseline = \"top\"\n\t\t\t\t\tc2d.textAlign = \"left\"\n\t\t\t\t\tc2d.fillStyle = \"#ffffff\"\n\t\t\t\t\tconst m = c2d.measureText(ch)\n\t\t\t\t\tlet w = Math.ceil(m.width)\n\t\t\t\t\tlet h = font.size\n\t\t\t\t\tif (atlas.outline) {\n\t\t\t\t\t\tc2d.lineJoin = \"round\"\n\t\t\t\t\t\tc2d.lineWidth = atlas.outline * 2\n\t\t\t\t\t\tc2d.strokeStyle = \"#000000\"\n\t\t\t\t\t\tc2d.strokeText(ch, atlas.outline, atlas.outline)\n\t\t\t\t\t\tw += atlas.outline * 2\n\t\t\t\t\t\th += atlas.outline * 3\n\t\t\t\t\t}\n\t\t\t\t\tc2d.fillText(ch, atlas.outline, atlas.outline)\n\n\t\t\t\t\tconst img = c2d.getImageData(0, 0, w, h)\n\n\t\t\t\t\t// if we are about to exceed the X axis of the texture, go to another line\n\t\t\t\t\tif (atlas.cursor.x + w > FONT_ATLAS_WIDTH) {\n\t\t\t\t\t\tatlas.cursor.x = 0\n\t\t\t\t\t\tatlas.cursor.y += h\n\t\t\t\t\t\tif (atlas.cursor.y > FONT_ATLAS_HEIGHT) {\n\t\t\t\t\t\t\t// TODO: create another atlas\n\t\t\t\t\t\t\tthrow new Error(\"Font atlas exceeds character limit\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfont.tex.update(img, atlas.cursor.x, atlas.cursor.y)\n\t\t\t\t\tfont.map[ch] = new Quad(atlas.cursor.x, atlas.cursor.y, w, h)\n\t\t\t\t\tatlas.cursor.x += w\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst size = opt.size || font.size\n\t\tconst scale = vec2(opt.scale ?? 1).scale(size / font.size)\n\t\tconst lineSpacing = opt.lineSpacing ?? 0\n\t\tconst letterSpacing = opt.letterSpacing ?? 0\n\t\tlet curX = 0\n\t\tlet tw = 0\n\t\tlet th = 0\n\t\tconst lines: Array<{\n\t\t\twidth: number,\n\t\t\tchars: FormattedChar[],\n\t\t}> = []\n\t\tlet curLine: FormattedChar[] = []\n\t\tlet cursor = 0\n\t\tlet lastSpace = null\n\t\tlet lastSpaceWidth = null\n\n\t\t// TODO: word break\n\t\twhile (cursor < chars.length) {\n\n\t\t\tlet ch = chars[cursor]\n\n\t\t\t// always new line on '\\n'\n\t\t\tif (ch === \"\\n\") {\n\n\t\t\t\tth += size + lineSpacing\n\n\t\t\t\tlines.push({\n\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\tchars: curLine,\n\t\t\t\t})\n\n\t\t\t\tlastSpace = null\n\t\t\t\tlastSpaceWidth = null\n\t\t\t\tcurX = 0\n\t\t\t\tcurLine = []\n\n\t\t\t} else {\n\n\t\t\t\tlet q = font.map[ch]\n\n\t\t\t\t// TODO: leave space if character not found?\n\t\t\t\tif (q) {\n\n\t\t\t\t\tlet gw = q.w * scale.x\n\n\t\t\t\t\tif (opt.width && curX + gw > opt.width) {\n\t\t\t\t\t\t// new line on last word if width exceeds\n\t\t\t\t\t\tth += size + lineSpacing\n\t\t\t\t\t\tif (lastSpace != null) {\n\t\t\t\t\t\t\tcursor -= curLine.length - lastSpace\n\t\t\t\t\t\t\tch = chars[cursor]\n\t\t\t\t\t\t\tq = font.map[ch]\n\t\t\t\t\t\t\tgw = q.w * scale.x\n\t\t\t\t\t\t\t// omit trailing space\n\t\t\t\t\t\t\tcurLine = curLine.slice(0, lastSpace - 1)\n\t\t\t\t\t\t\tcurX = lastSpaceWidth\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSpace = null\n\t\t\t\t\t\tlastSpaceWidth = null\n\t\t\t\t\t\tlines.push({\n\t\t\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\t\t\tchars: curLine,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tcurX = 0\n\t\t\t\t\t\tcurLine = []\n\t\t\t\t\t}\n\n\t\t\t\t\t// push char\n\t\t\t\t\tcurLine.push({\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\twidth: q.w,\n\t\t\t\t\t\theight: q.h,\n\t\t\t\t\t\t// without some padding there'll be visual artifacts on edges\n\t\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t\tq.x / font.tex.width,\n\t\t\t\t\t\t\tq.y / font.tex.height,\n\t\t\t\t\t\t\tq.w / font.tex.width,\n\t\t\t\t\t\t\tq.h / font.tex.height,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tch: ch,\n\t\t\t\t\t\tpos: new Vec2(curX, th),\n\t\t\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\t\t\t\tscale: vec2(scale),\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t})\n\n\t\t\t\t\tif (ch === \" \") {\n\t\t\t\t\t\tlastSpace = curLine.length\n\t\t\t\t\t\tlastSpaceWidth = curX\n\t\t\t\t\t}\n\n\t\t\t\t\tcurX += gw\n\t\t\t\t\ttw = Math.max(tw, curX)\n\t\t\t\t\tcurX += letterSpacing\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcursor++\n\n\t\t}\n\n\t\tlines.push({\n\t\t\twidth: curX - letterSpacing,\n\t\t\tchars: curLine,\n\t\t})\n\n\t\tth += size\n\n\t\tif (opt.width) {\n\t\t\ttw = opt.width\n\t\t}\n\n\t\tconst fchars: FormattedChar[] = []\n\n\t\tfor (const line of lines) {\n\n\t\t\tconst ox = (tw - line.width) * alignPt(opt.align ?? \"left\")\n\n\t\t\tfor (const fchar of line.chars) {\n\n\t\t\t\tconst q = font.map[fchar.ch]\n\t\t\t\tconst idx = fchars.length\n\n\t\t\t\tfchar.pos = fchar.pos.add(ox, 0).add(\n\t\t\t\t\tq.w * scale.x * 0.5,\n\t\t\t\t\tq.h * scale.y * 0.5,\n\t\t\t\t)\n\n\t\t\t\tif (opt.transform) {\n\t\t\t\t\tconst tr = typeof opt.transform === \"function\"\n\t\t\t\t\t\t? opt.transform(idx, fchar.ch)\n\t\t\t\t\t\t: opt.transform\n\t\t\t\t\tif (tr) {\n\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (charStyleMap[idx]) {\n\t\t\t\t\tconst styles = charStyleMap[idx]\n\t\t\t\t\tfor (const name of styles) {\n\t\t\t\t\t\tconst style = opt.styles[name]\n\t\t\t\t\t\tconst tr = typeof style === \"function\"\n\t\t\t\t\t\t\t? style(idx, fchar.ch)\n\t\t\t\t\t\t\t: style\n\t\t\t\t\t\tif (tr) {\n\t\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfchars.push(fchar)\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t\topt: opt,\n\t\t}\n\n\t}\n\n\tfunction drawText(opt: DrawTextOpt) {\n\t\tdrawFormattedText(formatText(opt))\n\t}\n\n\tfunction drawFormattedText(ftext: FormattedText) {\n\t\tpushTransform()\n\t\tpushTranslate(ftext.opt.pos)\n\t\tpushRotate(ftext.opt.angle)\n\t\tpushTranslate(anchorPt(ftext.opt.anchor ?? \"topleft\").add(1, 1).scale(ftext.width, ftext.height).scale(-0.5))\n\t\tftext.chars.forEach((ch) => {\n\t\t\tdrawUVQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.width,\n\t\t\t\theight: ch.height,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tangle: ch.angle,\n\t\t\t\tcolor: ch.color,\n\t\t\t\topacity: ch.opacity,\n\t\t\t\tquad: ch.quad,\n\t\t\t\tanchor: \"center\",\n\t\t\t\tuniform: ftext.opt.uniform,\n\t\t\t\tshader: ftext.opt.shader,\n\t\t\t\tfixed: ftext.opt.fixed,\n\t\t\t})\n\t\t})\n\t\tpopTransform()\n\t}\n\n\t// get game width\n\tfunction width(): number {\n\t\treturn gfx.width\n\t}\n\n\t// get game height\n\tfunction height(): number {\n\t\treturn gfx.height\n\t}\n\n\tconst winEvents: EventList<WindowEventMap> = {}\n\n\t// transform a point from window space to content space\n\tfunction windowToContent(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\t(pt.x - gfx.viewport.x) * width() / gfx.viewport.width,\n\t\t\t(pt.y - gfx.viewport.y) * height() / gfx.viewport.height,\n\t\t)\n\t}\n\n\t// transform a point from content space to view space\n\tfunction contentToView(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\tpt.x * gfx.viewport.width / gfx.width,\n\t\t\tpt.y * gfx.viewport.height / gfx.height,\n\t\t)\n\t}\n\n\tfunction mousePos() {\n\t\treturn windowToContent(app.mousePos())\n\t}\n\n\twinEvents.error = (e) => {\n\t\tif (e.error) {\n\t\t\thandleErr(e.error)\n\t\t} else {\n\t\t\t// ignore errors from somewhere else, e.g. iframes\n\t\t\tif (e.message === \"Script error.\") return\n\n\t\t\thandleErr(new Error(e.message))\n\t\t}\n\t}\n\n\twinEvents.unhandledrejection = (e) => handleErr(e.reason)\n\n\tfor (const name in winEvents) {\n\t\twindow.addEventListener(name, winEvents[name])\n\t}\n\n\tconst debug: Debug = {\n\t\tinspect: false,\n\t\ttimeScale: 1,\n\t\tshowLog: true,\n\t\tfps: () => app.fps(),\n\t\tnumFrames: () => app.numFrames(),\n\t\tstepFrame: updateFrame,\n\t\tdrawCalls: () => gfx.drawCalls,\n\t\tclearLog: () => game.logs = [],\n\t\tlog: (msg) => {\n\t\t\tconst max = gopt.logMax ?? LOG_MAX\n\t\t\tconst style = msg instanceof Error ? \"error\" : \"info\"\n\t\t\tgame.logs.unshift(`${`[time]${app.time().toFixed(2)}[/time] `}[${style}]${msg?.toString ? msg.toString() : msg}[/${style}]`)\n\t\t\tif (game.logs.length > max) {\n\t\t\t\tgame.logs = game.logs.slice(0, max)\n\t\t\t}\n\t\t},\n\t\terror: (msg) => debug.log(new Error(msg.toString ? msg.toString() : msg as string)),\n\t\tcurRecording: null,\n\t\tget paused() {\n\t\t\treturn app.paused\n\t\t},\n\t\tset paused(v) {\n\t\t\tapp.paused = v\n\t\t\tif (v) {\n\t\t\t\taudio.ctx.suspend()\n\t\t\t} else {\n\t\t\t\taudio.ctx.resume()\n\t\t\t}\n\t\t},\n\t}\n\n\tfunction dt() {\n\t\treturn app.dt()\n\t}\n\n\tfunction camPos(...pos: Vec2Args): Vec2 {\n\t\tif (pos.length > 0) {\n\t\t\tgame.cam.pos = vec2(...pos)\n\t\t}\n\t\treturn game.cam.pos ? game.cam.pos.clone() : center()\n\t}\n\n\tfunction camScale(...scale: Vec2Args): Vec2 {\n\t\tif (scale.length > 0) {\n\t\t\tgame.cam.scale = vec2(...scale)\n\t\t}\n\t\treturn game.cam.scale.clone()\n\t}\n\n\tfunction camRot(angle: number): number {\n\t\tif (angle !== undefined) {\n\t\t\tgame.cam.angle = angle\n\t\t}\n\t\treturn game.cam.angle\n\t}\n\n\tfunction shake(intensity: number = 12) {\n\t\tgame.cam.shake = intensity\n\t}\n\n\tfunction toScreen(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.multVec2(p)\n\t}\n\n\tfunction toWorld(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.invert().multVec2(p)\n\t}\n\n\tfunction calcTransform(obj: GameObj): Mat4 {\n\t\tconst tr = new Mat4()\n\t\tif (obj.pos) tr.translate(obj.pos)\n\t\tif (obj.scale) tr.scale(obj.scale)\n\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\treturn obj.parent ? tr.mult(obj.parent.transform) : tr\n\t}\n\n\tfunction make<T>(comps: CompList<T>): GameObj<T> {\n\n\t\tconst compStates = new Map()\n\t\tconst cleanups = {}\n\t\tconst events = new EventHandler()\n\t\tlet onCurCompCleanup = null\n\n\t\t// TODO: \"this\" should be typed here\n\t\tconst obj = {\n\n\t\t\tid: uid(),\n\t\t\t// TODO: a nice way to hide / pause when add()-ing\n\t\t\thidden: false,\n\t\t\tpaused: false,\n\t\t\ttransform: new Mat4(),\n\t\t\tchildren: [],\n\t\t\tparent: null,\n\n\t\t\tadd<T2>(a: CompList<T2> | GameObj<T2>): GameObj<T2> {\n\t\t\t\tconst obj = (() => {\n\t\t\t\t\tif (Array.isArray(a)) {\n\t\t\t\t\t\treturn make(a)\n\t\t\t\t\t}\n\t\t\t\t\tif (a.parent) {\n\t\t\t\t\t\tthrow new Error(\"Cannot add a game obj that already has a parent.\")\n\t\t\t\t\t}\n\t\t\t\t\treturn a\n\t\t\t\t})()\n\t\t\t\tobj.parent = this\n\t\t\t\tobj.transform = calcTransform(obj)\n\t\t\t\tthis.children.push(obj)\n\t\t\t\tobj.trigger(\"add\", obj)\n\t\t\t\tgame.events.trigger(\"add\", obj)\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\treadd(obj: GameObj): GameObj {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tthis.children.push(obj)\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\tremove(obj: GameObj): void {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tobj.parent = null\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tconst trigger = (o) => {\n\t\t\t\t\t\to.trigger(\"destroy\")\n\t\t\t\t\t\tgame.events.trigger(\"destroy\", o)\n\t\t\t\t\t\to.children.forEach((child) => trigger(child))\n\t\t\t\t\t}\n\t\t\t\t\ttrigger(obj)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tremoveAll(tag?: Tag) {\n\t\t\t\tif (tag) {\n\t\t\t\t\tthis.get(tag).forEach((obj) => this.remove(obj))\n\t\t\t\t} else {\n\t\t\t\t\tfor (const child of [...this.children]) this.remove(child)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (this.paused) return\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.update())\n\t\t\t\tthis.trigger(\"update\")\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<PosComp | ScaleComp | RotateComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\t// TODO: automatically don't draw if offscreen\n\t\t\t\tthis.trigger(\"draw\")\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.draw())\n\t\t\t\tpopTransform()\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<PosComp | ScaleComp | RotateComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.drawInspect())\n\t\t\t\tthis.trigger(\"drawInspect\")\n\t\t\t\tpopTransform()\n\t\t\t},\n\n\t\t\t// use a comp, or tag\n\t\t\tuse(comp: Comp | Tag) {\n\n\t\t\t\tif (!comp) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// tag\n\t\t\t\tif (typeof comp === \"string\") {\n\t\t\t\t\treturn this.use({\n\t\t\t\t\t\tid: comp,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tlet gc = []\n\n\t\t\t\t// clear if overwrite\n\t\t\t\tif (comp.id) {\n\t\t\t\t\tthis.unuse(comp.id)\n\t\t\t\t\tcleanups[comp.id] = []\n\t\t\t\t\tgc = cleanups[comp.id]\n\t\t\t\t\tcompStates.set(comp.id, comp)\n\t\t\t\t}\n\n\t\t\t\tfor (const k in comp) {\n\n\t\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\n\t\t\t\t\tconst prop = Object.getOwnPropertyDescriptor(comp, k)\n\n\t\t\t\t\tif (typeof prop.value === \"function\") {\n\t\t\t\t\t\tcomp[k] = comp[k].bind(this)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.set) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tset: prop.set.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.get) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tget: prop.get.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\t// automatically clean up events created by components in add() stage\n\t\t\t\t\t\tconst func = k === \"add\" ? () => {\n\t\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\t\tcomp[k]()\n\t\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t\t} : comp[k]\n\t\t\t\t\t\tgc.push(this.on(k, func).cancel)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\t\t\tget: () => comp[k],\n\t\t\t\t\t\t\t\tset: (val) => comp[k] = val,\n\t\t\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tgc.push(() => delete this[k])\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(`Duplicate component property: \"${k}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// check for component dependencies\n\t\t\t\tconst checkDeps = () => {\n\t\t\t\t\tif (!comp.require) return\n\t\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\t\tthrow new Error(`Component \"${comp.id}\" requires component \"${dep}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (comp.destroy) {\n\t\t\t\t\tgc.push(comp.destroy.bind(this))\n\t\t\t\t}\n\n\t\t\t\t// manually trigger add event if object already exist\n\t\t\t\tif (this.exists()) {\n\t\t\t\t\tcheckDeps()\n\t\t\t\t\tif (comp.add) {\n\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\tcomp.add.call(this)\n\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (comp.require) {\n\t\t\t\t\t\tgc.push(this.on(\"add\", checkDeps).cancel)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tunuse(id: Tag) {\n\t\t\t\tif (cleanups[id]) {\n\t\t\t\t\tcleanups[id].forEach((e) => e())\n\t\t\t\t\tdelete cleanups[id]\n\t\t\t\t}\n\t\t\t\tif (compStates.has(id)) {\n\t\t\t\t\tcompStates.delete(id)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tc(id: Tag): Comp {\n\t\t\t\treturn compStates.get(id)\n\t\t\t},\n\n\t\t\tget(t: Tag | Tag[], opts: GetOpt = {}): GameObj[] {\n\t\t\t\tlet list: GameObj[] = opts.recursive\n\t\t\t\t\t? this.children.flatMap(function recurse(child) {\n\t\t\t\t\t\treturn [child, ...child.children.flatMap(recurse)]\n\t\t\t\t\t})\n\t\t\t\t\t: this.children\n\t\t\t\tlist = list.filter((child) => t ? child.is(t) : true)\n\t\t\t\tif (opts.liveUpdate) {\n\t\t\t\t\tconst isChild = (obj) => {\n\t\t\t\t\t\treturn opts.recursive\n\t\t\t\t\t\t\t? this.isAncestorOf(obj)\n\t\t\t\t\t\t\t: obj.parent === this\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: handle when object add / remove tags\n\t\t\t\t\t// TODO: a way to cancel the events?\n\t\t\t\t\tonAdd((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tlist.push(obj)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tonDestroy((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tconst idx = list.findIndex((o) => o.id === obj.id)\n\t\t\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\t\t\tlist.splice(idx, 1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\treturn list\n\t\t\t},\n\n\t\t\tisAncestorOf(obj: GameObj) {\n\t\t\t\tif (!obj.parent) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn obj.parent === this || this.isAncestorOf(obj.parent)\n\t\t\t},\n\n\t\t\texists(): boolean {\n\t\t\t\treturn game.root.isAncestorOf(this)\n\t\t\t},\n\n\t\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\t\tif (tag === \"*\") {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(tag)) {\n\t\t\t\t\tfor (const t of tag) {\n\t\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn this.c(tag) != null\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ton(name: string, action: (...args) => void): EventController {\n\t\t\t\tconst ctrl = events.on(name, action.bind(this))\n\t\t\t\tif (onCurCompCleanup) {\n\t\t\t\t\tonCurCompCleanup(() => ctrl.cancel())\n\t\t\t\t}\n\t\t\t\treturn ctrl\n\t\t\t},\n\n\t\t\ttrigger(name: string, ...args): void {\n\t\t\t\tevents.trigger(name, ...args)\n\t\t\t\tgame.objEvents.trigger(name, this, ...args)\n\t\t\t},\n\n\t\t\tdestroy() {\n\t\t\t\tif (this.parent) {\n\t\t\t\t\tthis.parent.remove(this)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tconst info = {}\n\t\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null\n\t\t\t\t}\n\t\t\t\treturn info\n\t\t\t},\n\n\t\t\tonAdd(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"add\", cb)\n\t\t\t},\n\n\t\t\tonUpdate(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"update\", cb)\n\t\t\t},\n\n\t\t\tonDraw(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"draw\", cb)\n\t\t\t},\n\n\t\t\tonDestroy(action: () => void): EventController {\n\t\t\t\treturn this.on(\"destroy\", action)\n\t\t\t},\n\n\t\t\tclearEvents() {\n\t\t\t\tevents.clear()\n\t\t\t},\n\n\t\t}\n\n\t\tfor (const comp of comps) {\n\t\t\tobj.use(comp)\n\t\t}\n\n\t\treturn obj as unknown as GameObj<T>\n\n\t}\n\n\t// add an event to a tag\n\tfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventController {\n\t\tif (!game.objEvents[event]) {\n\t\t\tgame.objEvents[event] = new IDList()\n\t\t}\n\t\treturn game.objEvents.on(event, (obj, ...args) => {\n\t\t\tif (obj.is(tag)) {\n\t\t\t\tcb(obj, ...args)\n\t\t\t}\n\t\t})\n\t}\n\n\t// add update event to a tag or global update\n\tconst onUpdate = ((tag: Tag | (() => void), action?: (obj: GameObj) => void) => {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\tconst obj = add([{ update: tag }])\n\t\t\treturn {\n\t\t\t\tget paused() {\n\t\t\t\t\treturn obj.paused\n\t\t\t\t},\n\t\t\t\tset paused(p) {\n\t\t\t\t\tobj.paused = p\n\t\t\t\t},\n\t\t\t\tcancel: () => obj.destroy(),\n\t\t\t}\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"update\", tag, action)\n\t\t}\n\t}) as KaboomCtx[\"onUpdate\"]\n\n\t// add draw event to a tag or global draw\n\tconst onDraw = ((tag: Tag | (() => void), action?: (obj: GameObj) => void) => {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\tconst obj = add([{ draw: tag }])\n\t\t\treturn {\n\t\t\t\tget paused() {\n\t\t\t\t\treturn obj.hidden\n\t\t\t\t},\n\t\t\t\tset paused(p) {\n\t\t\t\t\tobj.hidden = p\n\t\t\t\t},\n\t\t\t\tcancel: () => obj.destroy(),\n\t\t\t}\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"draw\", tag, action)\n\t\t}\n\t}) as KaboomCtx[\"onDraw\"]\n\n\tfunction onAdd(tag: Tag | ((obj: GameObj) => void), action?: (obj: GameObj) => void) {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\treturn game.events.on(\"add\", tag)\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"add\", tag, action)\n\t\t}\n\t}\n\n\tfunction onDestroy(tag: Tag | ((obj: GameObj) => void), action?: (obj: GameObj) => void) {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\treturn game.events.on(\"destroy\", tag)\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"destroy\", tag, action)\n\t\t}\n\t}\n\n\t// add an event that runs with objs with t1 collides with objs with t2\n\tfunction onCollide(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideUpdate(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideUpdate\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideEnd(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideEnd\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction forAllCurrentAndFuture(t: Tag, action: (obj: GameObj) => void) {\n\t\tget(t, { recursive: true }).forEach(action)\n\t\tonAdd(t, action)\n\t}\n\n\t// add an event that runs when objs with tag t is clicked\n\tfunction onClick(tag: Tag | (() => void), action?: (obj: GameObj) => void): EventController {\n\t\tif (typeof tag === \"function\") {\n\t\t\treturn app.onMousePress(tag)\n\t\t} else {\n\t\t\tconst events = []\n\t\t\tforAllCurrentAndFuture(tag, (obj) => {\n\t\t\t\tif (!obj.area)\n\t\t\t\t\tthrow new Error(\"onClick() requires the object to have area() component\")\n\t\t\t\tevents.push(obj.onClick(() => action(obj)))\n\t\t\t})\n\t\t\treturn EventController.join(events)\n\t\t}\n\t}\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHover(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHover() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHover(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHoverUpdate(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHoverUpdate() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverUpdate(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is unhovered\n\tfunction onHoverEnd(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHoverEnd() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverEnd(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// TODO: use PromiseLike?\n\t// TODO: use root game object and timer()?\n\t// add an event that'd be run after t\n\tfunction wait(time: number, action?: () => void): TimerController {\n\t\tlet t = 0\n\t\tconst actions = []\n\t\tif (action) actions.push(action)\n\t\tconst ev = onUpdate(() => {\n\t\t\tt += dt()\n\t\t\tif (t >= time) {\n\t\t\t\tev.cancel()\n\t\t\t\tactions.forEach((action) => action())\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tpaused: ev.paused,\n\t\t\tcancel: ev.cancel,\n\t\t\tonEnd(action) {\n\t\t\t\tactions.push(action)\n\t\t\t},\n\t\t\tthen(action) {\n\t\t\t\tthis.onEnd(action)\n\t\t\t\treturn this\n\t\t\t},\n\t\t}\n\t}\n\n\t// add an event that's run every t seconds\n\tfunction loop(t: number, action: () => void): EventController {\n\n\t\tlet curTimer: null | TimerController = null\n\n\t\tconst newAction = () => {\n\t\t\t// TODO: should f be execute right away as loop() is called?\n\t\t\tcurTimer = wait(t, newAction)\n\t\t\taction()\n\t\t}\n\n\t\tcurTimer = wait(0, newAction)\n\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn curTimer.paused\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tcurTimer.paused = p\n\t\t\t},\n\t\t\tcancel: () => curTimer.cancel(),\n\t\t}\n\n\t}\n\n\tfunction enterDebugMode() {\n\n\t\tapp.onKeyPress(\"f1\", () => {\n\t\t\tdebug.inspect = !debug.inspect\n\t\t})\n\n\t\tapp.onKeyPress(\"f2\", () => {\n\t\t\tdebug.clearLog()\n\t\t})\n\n\t\tapp.onKeyPress(\"f8\", () => {\n\t\t\tdebug.paused = !debug.paused\n\t\t})\n\n\t\tapp.onKeyPress(\"f7\", () => {\n\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1)\n\t\t})\n\n\t\tapp.onKeyPress(\"f9\", () => {\n\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1)\n\t\t})\n\n\t\tapp.onKeyPress(\"f10\", () => {\n\t\t\tdebug.stepFrame()\n\t\t})\n\n\t}\n\n\tfunction enterBurpMode() {\n\t\tapp.onKeyPress(\"b\", () => burp())\n\t}\n\n\tfunction setGravity(g: number) {\n\t\tgame.gravity = g\n\t}\n\n\tfunction getGravity() {\n\t\treturn game.gravity\n\t}\n\n\tfunction setBackground(...args) {\n\t\tif (args.length === 1 || args.length === 2) {\n\t\t\tgfx.bgColor = rgb(args[0])\n\t\t\tif (args[1]) gfx.bgAlpha = args[1]\n\t\t} else if (args.length === 3 || args.length === 4) {\n\t\t\tgfx.bgColor = rgb(args[0], args[1], args[2])\n\t\t\tif (args[3]) gfx.bgAlpha = args[3]\n\t\t}\n\t\tgl.clearColor(\n\t\t\tgfx.bgColor.r / 255,\n\t\t\tgfx.bgColor.g / 255,\n\t\t\tgfx.bgColor.b / 255,\n\t\t\tgfx.bgAlpha,\n\t\t)\n\t}\n\n\tfunction getBackground() {\n\t\treturn gfx.bgColor.clone()\n\t}\n\n\t// TODO: manage global velocity here?\n\tfunction pos(...args: Vec2Args): PosComp {\n\n\t\treturn {\n\n\t\t\tid: \"pos\",\n\t\t\tpos: vec2(...args),\n\n\t\t\tmoveBy(...args: Vec2Args) {\n\t\t\t\tthis.pos = this.pos.add(vec2(...args))\n\t\t\t},\n\n\t\t\t// move with velocity (pixels per second)\n\t\t\tmove(...args: Vec2Args) {\n\t\t\t\tthis.moveBy(vec2(...args).scale(dt()))\n\t\t\t},\n\n\t\t\t// move to a destination, with optional speed\n\t\t\tmoveTo(...args) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2])\n\t\t\t\t}\n\t\t\t\tconst dest = args[0]\n\t\t\t\tconst speed = args[1]\n\t\t\t\tif (speed === undefined) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst diff = dest.sub(this.pos)\n\t\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tthis.move(diff.unit().scale(speed))\n\t\t\t},\n\n\t\t\tworldPos(this: GameObj<PosComp>): Vec2 {\n\t\t\t\treturn this.parent\n\t\t\t\t\t? this.parent.transform.multVec2(this.pos)\n\t\t\t\t\t: this.pos\n\t\t\t},\n\n\t\t\t// get the screen position (transformed by camera)\n\t\t\tscreenPos(this: GameObj<PosComp | FixedComp>): Vec2 {\n\t\t\t\treturn this.fixed\n\t\t\t\t\t? this.pos\n\t\t\t\t\t: toScreen(this.pos)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`\n\t\t\t},\n\n\t\t\tdrawInspect() {\n\t\t\t\tdrawCircle({\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\tradius: 4 / getViewportScale(),\n\t\t\t\t})\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// TODO: allow single number assignment\n\tfunction scale(...args: Vec2Args): ScaleComp {\n\t\tif (args.length === 0) {\n\t\t\treturn scale(1)\n\t\t}\n\t\treturn {\n\t\t\tid: \"scale\",\n\t\t\tscale: vec2(...args),\n\t\t\tscaleTo(...args: Vec2Args) {\n\t\t\t\tthis.scale = vec2(...args)\n\t\t\t},\n\t\t\tscaleBy(...args: Vec2Args) {\n\t\t\t\tthis.scale.scale(vec2(...args))\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction rotate(r: number): RotateComp {\n\t\treturn {\n\t\t\tid: \"rotate\",\n\t\t\tangle: r ?? 0,\n\t\t\trotateBy(angle: number) {\n\t\t\t\tthis.angle += angle\n\t\t\t},\n\t\t\trotateTo(angle: number) {\n\t\t\t\tthis.angle = angle\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.round(this.angle)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction color(...args): ColorComp {\n\t\treturn {\n\t\t\tid: \"color\",\n\t\t\tcolor: rgb(...args),\n\t\t\tinspect() {\n\t\t\t\treturn this.color.toString()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction toFixed(n: number, f: number) {\n\t\treturn Number(n.toFixed(f))\n\t}\n\n\t// TODO: fadeIn here?\n\tfunction opacity(a: number): OpacityComp {\n\t\treturn {\n\t\t\tid: \"opacity\",\n\t\t\topacity: a ?? 1,\n\t\t\tinspect() {\n\t\t\t\treturn `${toFixed(this.opacity, 1)}`\n\t\t\t},\n\t\t\tfadeOut(time = 1, easeFunc = easings.linear): TweenController {\n\t\t\t\treturn tween(this.opacity, 0, time, (a) => this.opacity = a, easeFunc)\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction anchor(o: Anchor | Vec2): AnchorComp {\n\t\tif (!o) {\n\t\t\tthrow new Error(\"Please define an anchor\")\n\t\t}\n\t\treturn {\n\t\t\tid: \"anchor\",\n\t\t\tanchor: o,\n\t\t\tinspect() {\n\t\t\t\tif (typeof this.anchor === \"string\") {\n\t\t\t\t\treturn this.anchor\n\t\t\t\t} else {\n\t\t\t\t\treturn this.anchor.toString()\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction z(z: number): ZComp {\n\t\treturn {\n\t\t\tid: \"z\",\n\t\t\tz: z,\n\t\t\tinspect() {\n\t\t\t\treturn `${this.z}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\t\treturn {\n\t\t\tid: \"follow\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tfollow: {\n\t\t\t\tobj: obj,\n\t\t\t\toffset: offset ?? vec2(0),\n\t\t\t},\n\t\t\tadd(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction move(dir: number | Vec2, speed: number): MoveComp {\n\t\tconst d = typeof dir === \"number\" ? Vec2.fromAngle(dir) : dir.unit()\n\t\treturn {\n\t\t\tid: \"move\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tupdate(this: GameObj<PosComp>) {\n\t\t\t\tthis.move(d.scale(speed))\n\t\t\t},\n\t\t}\n\t}\n\n\tconst DEF_OFFSCREEN_DIS = 200\n\n\tfunction offscreen(opt: OffScreenCompOpt = {}): OffScreenComp {\n\t\tconst distance = opt.distance ?? DEF_OFFSCREEN_DIS\n\t\tlet isOut = false\n\t\treturn {\n\t\t\tid: \"offscreen\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tisOffScreen(this: GameObj<PosComp>): boolean {\n\t\t\t\tconst pos = toScreen(this.pos)\n\t\t\t\tconst screenRect = new Rect(vec2(0), width(), height())\n\t\t\t\treturn !testRectPoint(screenRect, pos)\n\t\t\t\t\t&& screenRect.sdistToPoint(pos) > distance * distance\n\t\t\t},\n\t\t\tonExitScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"exitView\", action)\n\t\t\t},\n\t\t\tonEnterScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"enterView\", action)\n\t\t\t},\n\t\t\tupdate(this: GameObj) {\n\t\t\t\tif (this.isOffScreen()) {\n\t\t\t\t\tif (!isOut) {\n\t\t\t\t\t\tthis.trigger(\"exitView\")\n\t\t\t\t\t\tisOut = true\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = true\n\t\t\t\t\tif (opt.pause) this.paused = true\n\t\t\t\t\tif (opt.destroy) this.destroy()\n\t\t\t\t} else {\n\t\t\t\t\tif (isOut) {\n\t\t\t\t\t\tthis.trigger(\"enterView\")\n\t\t\t\t\t\tisOut = false\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = false\n\t\t\t\t\tif (opt.pause) this.paused = false\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\t\tconst colliding = {}\n\t\tconst collidingThisFrame = new Set()\n\n\t\treturn {\n\n\t\t\tid: \"area\",\n\t\t\tcollisionIgnore: opt.collisionIgnore ?? [],\n\n\t\t\tadd(this: GameObj<AreaComp>) {\n\n\t\t\t\tif (this.area.cursor) {\n\t\t\t\t\tthis.onHover(() => app.setCursor(this.area.cursor))\n\t\t\t\t}\n\n\t\t\t\tthis.onCollideUpdate((obj, col) => {\n\t\t\t\t\tif (!colliding[obj.id]) {\n\t\t\t\t\t\tthis.trigger(\"collide\", obj, col)\n\t\t\t\t\t}\n\t\t\t\t\tcolliding[obj.id] = col\n\t\t\t\t\tcollidingThisFrame.add(obj.id)\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<AreaComp>) {\n\t\t\t\tfor (const id in colliding) {\n\t\t\t\t\tif (!collidingThisFrame.has(Number(id))) {\n\t\t\t\t\t\tthis.trigger(\"collideEnd\", colliding[id].target)\n\t\t\t\t\t\tdelete colliding[id]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcollidingThisFrame.clear()\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<AreaComp | AnchorComp | FixedComp>) {\n\n\t\t\t\tconst a = this.localArea()\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushScale(this.area.scale)\n\t\t\t\tpushTranslate(this.area.offset)\n\n\t\t\t\tconst opts = {\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4 / getViewportScale(),\n\t\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\t},\n\t\t\t\t\tanchor: this.anchor,\n\t\t\t\t\tfill: false,\n\t\t\t\t\tfixed: this.fixed,\n\t\t\t\t}\n\n\t\t\t\tif (a instanceof Rect) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.pos,\n\t\t\t\t\t\twidth: a.width,\n\t\t\t\t\t\theight: a.height,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Polygon) {\n\t\t\t\t\tdrawPolygon({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpts: a.pts,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Circle) {\n\t\t\t\t\tdrawCircle({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.center,\n\t\t\t\t\t\tradius: a.radius,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t},\n\n\t\t\tarea: {\n\t\t\t\tshape: opt.shape ?? null,\n\t\t\t\tscale: opt.scale ? vec2(opt.scale) : vec2(1),\n\t\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\t\tcursor: opt.cursor ?? null,\n\t\t\t},\n\n\t\t\tisClicked(): boolean {\n\t\t\t\treturn app.isMousePressed() && this.isHovering()\n\t\t\t},\n\n\t\t\tisHovering(this: GameObj) {\n\t\t\t\tconst mpos = this.fixed ? mousePos() : toWorld(mousePos())\n\t\t\t\treturn this.hasPoint(mpos)\n\t\t\t},\n\n\t\t\tcheckCollision(this: GameObj, other: GameObj<AreaComp>) {\n\t\t\t\treturn colliding[other.id] ?? null\n\t\t\t},\n\n\t\t\tgetCollisions() {\n\t\t\t\treturn Object.values(colliding)\n\t\t\t},\n\n\t\t\tisColliding(other: GameObj<AreaComp>) {\n\t\t\t\treturn Boolean(colliding[other.id])\n\t\t\t},\n\n\t\t\tisOverlapping(other) {\n\t\t\t\tconst col = colliding[other.id]\n\t\t\t\treturn col && col.hasOverlap()\n\t\t\t},\n\n\t\t\tonClick(this: GameObj<AreaComp>, f: () => void): EventController {\n\t\t\t\tconst e = app.onMousePress(\"left\", () => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tf()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.onDestroy(() => e.cancel())\n\t\t\t\treturn e\n\t\t\t},\n\n\t\t\tonHover(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (!hovering) {\n\t\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\t\thovering = true\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverUpdate(this: GameObj, onHover: () => void): EventController {\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tonHover()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverEnd(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (hovering) {\n\t\t\t\t\t\tif (!this.isHovering()) {\n\t\t\t\t\t\t\thovering = false\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonCollide(\n\t\t\t\tthis: GameObj,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collide\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.onCollide((obj, col) => {\n\t\t\t\t\t\tif (obj.is(tag)) {\n\t\t\t\t\t\t\tcb(obj, col)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideUpdate(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideUpdate\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideUpdate\", (obj, col) => obj.is(tag) && cb(obj, col))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideEnd(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj) => void),\n\t\t\t\tcb?: (obj: GameObj) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideEnd\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideEnd\", (obj) => obj.is(tag) && cb(obj))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thasPoint(pt: Vec2): boolean {\n\t\t\t\t// TODO: convert to pt to local space instead\n\t\t\t\treturn testPolygonPoint(this.worldArea(), pt)\n\t\t\t},\n\n\t\t\t// push an obj out of another if they're overlapped\n\t\t\tresolveCollision(this: GameObj<AreaComp | PosComp>, obj: GameObj<AreaComp>) {\n\t\t\t\tconst col = this.checkCollision(obj)\n\t\t\t\tif (col && !col.resolved) {\n\t\t\t\t\tthis.pos = this.pos.add(col.displacement)\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tlocalArea(this: GameObj<AreaComp | { renderArea(): Shape }>): Shape {\n\t\t\t\treturn this.area.shape\n\t\t\t\t\t? this.area.shape\n\t\t\t\t\t: this.renderArea()\n\t\t\t},\n\n\t\t\t// TODO: cache\n\t\t\tworldArea(this: GameObj<AreaComp | AnchorComp>): Polygon {\n\n\t\t\t\tconst localArea = this.localArea()\n\n\t\t\t\tif (!(localArea instanceof Polygon || localArea instanceof Rect)) {\n\t\t\t\t\tthrow new Error(\"Only support polygon and rect shapes for now\")\n\t\t\t\t}\n\n\t\t\t\tconst transform = this.transform\n\t\t\t\t\t.clone()\n\t\t\t\t\t.scale(vec2(this.area.scale ?? 1))\n\t\t\t\t\t.translate(this.area.offset)\n\n\t\t\t\tif (localArea instanceof Rect) {\n\t\t\t\t\tconst offset = anchorPt(this.anchor || DEF_ANCHOR)\n\t\t\t\t\t\t.add(1, 1)\n\t\t\t\t\t\t.scale(-0.5)\n\t\t\t\t\t\t.scale(localArea.width, localArea.height)\n\t\t\t\t\ttransform.translate(offset)\n\t\t\t\t}\n\n\t\t\t\treturn localArea.transform(transform) as Polygon\n\n\t\t\t},\n\n\t\t\tscreenArea(this: GameObj<AreaComp | FixedComp>): Polygon {\n\t\t\t\tconst area = this.worldArea()\n\t\t\t\tif (this.fixed) {\n\t\t\t\t\treturn area\n\t\t\t\t} else {\n\t\t\t\t\treturn area.transform(game.cam.transform)\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction getRenderProps(obj: GameObj<any>) {\n\t\treturn {\n\t\t\tcolor: obj.color,\n\t\t\topacity: obj.opacity,\n\t\t\tanchor: obj.anchor,\n\t\t\toutline: obj.outline,\n\t\t\tfixed: obj.fixed,\n\t\t\tshader: obj.shader,\n\t\t\tuniform: obj.uniform,\n\t\t}\n\t}\n\n\t// TODO: clean\n\tfunction sprite(\n\t\tsrc: string | SpriteData | Asset<SpriteData>,\n\t\topt: SpriteCompOpt = {},\n\t): SpriteComp {\n\n\t\tlet spriteData: SpriteData | null = null\n\t\tlet curAnim: SpriteCurAnim | null = null\n\t\tconst spriteLoadedEvent = new Event<[SpriteData]>()\n\n\t\tif (!src) {\n\t\t\tthrow new Error(\"Please pass the resource name or data to sprite()\")\n\t\t}\n\n\t\tconst calcTexScale = (tex: Texture, q: Quad, w?: number, h?: number): Vec2 => {\n\t\t\tconst scale = vec2(1, 1)\n\t\t\tif (w && h) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t} else if (w) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (h) {\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\t\t\treturn scale\n\t\t}\n\n\t\treturn {\n\n\t\t\tid: \"sprite\",\n\t\t\t// TODO: allow update\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\tframe: opt.frame || 0,\n\t\t\tquad: opt.quad || new Quad(0, 0, 1, 1),\n\t\t\tanimSpeed: opt.animSpeed ?? 1,\n\t\t\tflipX: opt.flipX ?? false,\n\t\t\tflipY: opt.flipY ?? false,\n\n\t\t\tdraw(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!spriteData) return\n\n\t\t\t\tconst q = spriteData.frames[this.frame ?? 0]\n\n\t\t\t\tif (!q) {\n\t\t\t\t\tthrow new Error(`Frame not found: ${this.frame ?? 0}`)\n\t\t\t\t}\n\n\t\t\t\tif (spriteData.slice9) {\n\t\t\t\t\t// TODO: tile\n\t\t\t\t\t// TODO: use scale or width / height, or both?\n\t\t\t\t\tconst { left, right, top, bottom } = spriteData.slice9\n\t\t\t\t\tconst tw = spriteData.tex.width * q.w\n\t\t\t\t\tconst th = spriteData.tex.height * q.h\n\t\t\t\t\tconst iw = this.width - left - right\n\t\t\t\t\tconst ih = this.height - top - bottom\n\t\t\t\t\tconst w1 = left / tw\n\t\t\t\t\tconst w3 = right / tw\n\t\t\t\t\tconst w2 = 1 - w1 - w3\n\t\t\t\t\tconst h1 = top / th\n\t\t\t\t\tconst h3 = bottom / th\n\t\t\t\t\tconst h2 = 1 - h1 - h3\n\t\t\t\t\tconst quads = [\n\t\t\t\t\t\t// uv\n\t\t\t\t\t\tquad(0,       0,       w1, h1),\n\t\t\t\t\t\tquad(w1,      0,       w2, h1),\n\t\t\t\t\t\tquad(w1 + w2, 0,       w3, h1),\n\t\t\t\t\t\tquad(0,       h1,      w1, h2),\n\t\t\t\t\t\tquad(w1,      h1,      w2, h2),\n\t\t\t\t\t\tquad(w1 + w2, h1,      w3, h2),\n\t\t\t\t\t\tquad(0,       h1 + h2, w1, h3),\n\t\t\t\t\t\tquad(w1,      h1 + h2, w2, h3),\n\t\t\t\t\t\tquad(w1 + w2, h1 + h2, w3, h3),\n\t\t\t\t\t\t// transform\n\t\t\t\t\t\tquad(0,         0,        left,  top),\n\t\t\t\t\t\tquad(left,      0,        iw,    top),\n\t\t\t\t\t\tquad(left + iw, 0,        right, top),\n\t\t\t\t\t\tquad(0,         top,      left,  ih),\n\t\t\t\t\t\tquad(left,      top,      iw,    ih),\n\t\t\t\t\t\tquad(left + iw, top,      right, ih),\n\t\t\t\t\t\tquad(0,         top + ih, left,  bottom),\n\t\t\t\t\t\tquad(left,      top + ih, iw,    bottom),\n\t\t\t\t\t\tquad(left + iw, top + ih, right, bottom),\n\t\t\t\t\t]\n\t\t\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\t\t\tconst uv = quads[i]\n\t\t\t\t\t\tconst transform = quads[i + 9]\n\t\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\t\tpos: transform.pos(),\n\t\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\t\tquad: q.scale(uv),\n\t\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\t\twidth: transform.w,\n\t\t\t\t\t\t\theight: transform.h,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\twidth: this.width,\n\t\t\t\t\t\theight: this.height,\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tadd(this: GameObj<SpriteComp>) {\n\n\t\t\t\tconst setSpriteData = (spr) => {\n\n\t\t\t\t\tlet q = spr.frames[0].clone()\n\n\t\t\t\t\tif (opt.quad) {\n\t\t\t\t\t\tq = q.scale(opt.quad)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height)\n\n\t\t\t\t\tthis.width = spr.tex.width * q.w * scale.x\n\t\t\t\t\tthis.height = spr.tex.height * q.h * scale.y\n\n\t\t\t\t\tif (opt.anim) {\n\t\t\t\t\t\tthis.play(opt.anim)\n\t\t\t\t\t}\n\n\t\t\t\t\tspriteData = spr\n\t\t\t\t\tspriteLoadedEvent.trigger(spriteData)\n\n\t\t\t\t}\n\n\t\t\t\tconst spr = resolveSprite(src)\n\n\t\t\t\tif (spr) {\n\t\t\t\t\tspr.onLoad(setSpriteData)\n\t\t\t\t} else {\n\t\t\t\t\tonLoad(() => setSpriteData(resolveSprite(src).data))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[curAnim.name]\n\n\t\t\t\tif (typeof anim === \"number\") {\n\t\t\t\t\tthis.frame = anim\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (anim.speed === 0) {\n\t\t\t\t\tthrow new Error(\"Sprite anim speed cannot be 0\")\n\t\t\t\t}\n\n\t\t\t\tcurAnim.timer += dt() * this.animSpeed\n\n\t\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\t\t\t\t\tcurAnim.timer = 0\n\t\t\t\t\t// TODO: clean up\n\t\t\t\t\tif (anim.from > anim.to) {\n\t\t\t\t\t\tthis.frame--\n\t\t\t\t\t\tif (this.frame < anim.to) {\n\t\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\t\tthis.frame = anim.from\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.frame++\n\t\t\t\t\t\t\t\tcurAnim.onEnd()\n\t\t\t\t\t\t\t\tthis.stop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.frame++\n\t\t\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\t\tthis.frame = anim.from\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.frame--\n\t\t\t\t\t\t\t\tcurAnim.onEnd()\n\t\t\t\t\t\t\t\tthis.stop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tplay(this: GameObj<SpriteComp>, name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\t\tif (!spriteData) {\n\t\t\t\t\tspriteLoadedEvent.add(() => this.play(name, opt))\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[name]\n\n\t\t\t\tif (anim === undefined) {\n\t\t\t\t\tthrow new Error(`Anim not found: ${name}`)\n\t\t\t\t}\n\n\t\t\t\tif (curAnim) {\n\t\t\t\t\tthis.stop()\n\t\t\t\t}\n\n\t\t\t\tcurAnim = typeof anim === \"number\"\n\t\t\t\t\t? {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: false,\n\t\t\t\t\t\tpingpong: false,\n\t\t\t\t\t\tspeed: 0,\n\t\t\t\t\t\tonEnd: () => {},\n\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t\t\t}\n\n\t\t\t\tthis.frame = typeof anim === \"number\"\n\t\t\t\t\t? anim\n\t\t\t\t\t: anim.from\n\n\t\t\t\tthis.trigger(\"animStart\", name)\n\n\t\t\t},\n\n\t\t\tstop(this: GameObj<SpriteComp>) {\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst prevAnim = curAnim.name\n\t\t\t\tcurAnim = null\n\t\t\t\tthis.trigger(\"animEnd\", prevAnim)\n\t\t\t},\n\n\t\t\tnumFrames() {\n\t\t\t\treturn spriteData?.frames.length ?? 0\n\t\t\t},\n\n\t\t\tcurAnim() {\n\t\t\t\treturn curAnim?.name\n\t\t\t},\n\n\t\t\tonAnimEnd(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animEnd\", action)\n\t\t\t},\n\n\t\t\tonAnimStart(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animStart\", action)\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tif (typeof src === \"string\") {\n\t\t\t\t\treturn `\"${src}\"`\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\t\tfunction update(obj: GameObj<TextComp | any>) {\n\n\t\t\tconst ftext = formatText(Object.assign(getRenderProps(obj), {\n\t\t\t\ttext: obj.text + \"\",\n\t\t\t\tsize: obj.textSize,\n\t\t\t\tfont: obj.font,\n\t\t\t\twidth: opt.width && obj.width,\n\t\t\t\talign: obj.align,\n\t\t\t\tletterSpacing: obj.letterSpacing,\n\t\t\t\tlineSpacing: obj.lineSpacing,\n\t\t\t\ttransform: obj.textTransform,\n\t\t\t\tstyles: obj.textStyles,\n\t\t\t}))\n\n\t\t\tif (!opt.width) {\n\t\t\t\tobj.width = ftext.width / (obj.scale?.x || 1)\n\t\t\t}\n\n\t\t\tobj.height = ftext.height / (obj.scale?.y || 1)\n\n\t\t\treturn ftext\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tid: \"text\",\n\t\t\ttext: t,\n\t\t\ttextSize: opt.size ?? DEF_TEXT_SIZE,\n\t\t\tfont: opt.font,\n\t\t\twidth: opt.width,\n\t\t\theight: 0,\n\t\t\talign: opt.align,\n\t\t\tlineSpacing: opt.lineSpacing,\n\t\t\tletterSpacing: opt.letterSpacing,\n\t\t\ttextTransform: opt.transform,\n\t\t\ttextStyles: opt.styles,\n\n\t\t\tadd(this: GameObj<TextComp>) {\n\t\t\t\tonLoad(() => update(this))\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<TextComp>) {\n\t\t\t\tdrawFormattedText(update(this))\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tradius: opt.radius || 0,\n\t\t\tdraw(this: GameObj<RectComp>) {\n\t\t\t\tdrawRect(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction uvquad(w: number, h: number): UVQuadComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tdraw(this: GameObj<UVQuadComp>) {\n\t\t\t\tdrawUVQuad(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction circle(radius: number): CircleComp {\n\t\treturn {\n\t\t\tid: \"circle\",\n\t\t\tradius: radius,\n\t\t\tdraw(this: GameObj<CircleComp>) {\n\t\t\t\tdrawCircle(Object.assign(getRenderProps(this), {\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea(this: GameObj<AnchorComp | CircleComp>) {\n\t\t\t\treturn new Rect(new Vec2(this.anchor ? 0 : -this.radius), this.radius * 2, this.radius * 2)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.radius)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\t\treturn {\n\t\t\tid: \"outline\",\n\t\t\toutline: {\n\t\t\t\twidth,\n\t\t\t\tcolor,\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction timer(): TimerComp {\n\t\treturn {\n\t\t\tid: \"timer\",\n\t\t\twait(this: GameObj<TimerComp>, time: number, action?: () => void): TimerController {\n\t\t\t\tconst actions = []\n\t\t\t\tif (action) actions.push(action)\n\t\t\t\tlet t = 0\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tt += dt()\n\t\t\t\t\tif (t >= time) {\n\t\t\t\t\t\tactions.forEach((f) => f())\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: ev.cancel,\n\t\t\t\t\tonEnd(action) {\n\t\t\t\t\t\tactions.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\tloop(t: number, action: () => void): EventController {\n\t\t\t\tlet curTimer: null | TimerController = null\n\t\t\t\tconst newAction = () => {\n\t\t\t\t\t// TODO: should f be execute right away as loop() is called?\n\t\t\t\t\tcurTimer = this.wait(t, newAction)\n\t\t\t\t\taction()\n\t\t\t\t}\n\t\t\t\tcurTimer = this.wait(0, newAction)\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn curTimer.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tcurTimer.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: () => curTimer.cancel(),\n\t\t\t\t}\n\t\t\t},\n\t\t\ttween<V extends LerpValue>(\n\t\t\t\tthis: GameObj<TimerComp>,\n\t\t\t\tfrom: V,\n\t\t\t\tto: V,\n\t\t\t\tduration: number,\n\t\t\t\tsetValue: (value: V) => void,\n\t\t\t\teaseFunc = easings.linear,\n\t\t\t) {\n\t\t\t\tlet curTime = 0\n\t\t\t\tconst onEndEvents: Array<() => void> = []\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tcurTime += dt()\n\t\t\t\t\tconst t = Math.min(curTime / duration, 1)\n\t\t\t\t\tsetValue(lerp(from, to, easeFunc(t)))\n\t\t\t\t\tif (t === 1) {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tonEnd(action: () => void) {\n\t\t\t\t\t\tonEndEvents.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action: () => void) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t\tcancel() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t},\n\t\t\t\t\tfinish() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\t// maximum y velocity with body()\n\tconst DEF_JUMP_FORCE = 640\n\tconst MAX_VEL = 65536\n\n\t// TODO: land on wall\n\tfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\t\tconst vel = vec2(0)\n\t\tlet curPlatform: GameObj<PosComp | AreaComp | BodyComp> | null = null\n\t\tlet lastPlatformPos = null\n\t\tlet wantFall = false\n\n\t\treturn {\n\n\t\t\tid: \"body\",\n\t\t\trequire: [ \"pos\", \"area\" ],\n\t\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\t\tgravityScale: opt.gravityScale ?? 1,\n\t\t\tisStatic: opt.isStatic ?? false,\n\t\t\t// TODO: prefer density * area()\n\t\t\tmass: opt.mass ?? 1,\n\n\t\t\tadd(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (this.mass === 0) {\n\t\t\t\t\tthrow new Error(\"Can't set body mass to 0\")\n\t\t\t\t}\n\n\t\t\t\t// static vs static: don't resolve\n\t\t\t\t// static vs non-static: always resolve non-static\n\t\t\t\t// non-static vs non-static: resolve the first one\n\t\t\t\tthis.onCollideUpdate((other: GameObj<PosComp | BodyComp>, col) => {\n\n\t\t\t\t\tif (!other.is(\"body\")) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.trigger(\"beforePhysicsResolve\", col)\n\t\t\t\t\tother.trigger(\"beforePhysicsResolve\", col.reverse())\n\n\t\t\t\t\t// user can mark 'resolved' in beforePhysicsResolve to stop a resolution\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.isStatic && other.isStatic) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t} else if (!this.isStatic && !other.isStatic) {\n\t\t\t\t\t\t// TODO: update all children transform?\n\t\t\t\t\t\tconst tmass = this.mass + other.mass\n\t\t\t\t\t\tthis.pos = this.pos.add(col.displacement.scale(other.mass / tmass))\n\t\t\t\t\t\tother.pos = other.pos.add(col.displacement.scale(-this.mass / tmass))\n\t\t\t\t\t\tthis.transform = calcTransform(this)\n\t\t\t\t\t\tother.transform = calcTransform(other)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if one is static and on is not, resolve the non static one\n\t\t\t\t\t\tconst col2 = (!this.isStatic && other.isStatic) ? col : col.reverse()\n\t\t\t\t\t\tcol2.source.pos = col2.source.pos.add(col2.displacement)\n\t\t\t\t\t\tcol2.source.transform = calcTransform(col2.source)\n\t\t\t\t\t}\n\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t\tthis.trigger(\"physicsResolve\", col)\n\t\t\t\t\tother.trigger(\"physicsResolve\", col.reverse())\n\n\t\t\t\t})\n\n\t\t\t\tthis.onPhysicsResolve((col) => {\n\t\t\t\t\tif (game.gravity) {\n\t\t\t\t\t\tif (col.isBottom() && this.isFalling()) {\n\t\t\t\t\t\t\tvel.y = 0\n\t\t\t\t\t\t\tcurPlatform = col.target as GameObj<PosComp | BodyComp | AreaComp>\n\t\t\t\t\t\t\tlastPlatformPos = col.target.pos\n\t\t\t\t\t\t\tif (wantFall) {\n\t\t\t\t\t\t\t\twantFall = false\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (col.isTop() && this.isJumping()) {\n\t\t\t\t\t\t\tvel.y = 0\n\t\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (!game.gravity) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (this.isStatic) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (wantFall) {\n\t\t\t\t\tcurPlatform = null\n\t\t\t\t\tlastPlatformPos = null\n\t\t\t\t\tthis.trigger(\"fallOff\")\n\t\t\t\t\twantFall = false\n\t\t\t\t}\n\n\t\t\t\tif (curPlatform) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.isOverlapping(curPlatform)\n\t\t\t\t\t\t|| !curPlatform.exists()\n\t\t\t\t\t\t|| !curPlatform.is(\"body\")\n\t\t\t\t\t) {\n\t\t\t\t\t\twantFall = true\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!curPlatform.pos.eq(lastPlatformPos)\n\t\t\t\t\t\t\t&& opt.stickToPlatform !== false\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.moveBy(curPlatform.pos.sub(lastPlatformPos))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst prevVelY = vel.y\n\t\t\t\tvel.y += game.gravity * this.gravityScale * dt()\n\t\t\t\tvel.y = Math.min(vel.y, opt.maxVelocity ?? MAX_VEL)\n\t\t\t\tif (prevVelY < 0 && vel.y >= 0) {\n\t\t\t\t\tthis.trigger(\"fall\")\n\t\t\t\t}\n\t\t\t\tthis.move(vel)\n\n\t\t\t},\n\n\t\t\tonPhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"physicsResolve\", action)\n\t\t\t},\n\n\t\t\tonBeforePhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"beforePhysicsResolve\", action)\n\t\t\t},\n\n\t\t\tcurPlatform(): GameObj | null {\n\t\t\t\treturn curPlatform\n\t\t\t},\n\n\t\t\tisGrounded() {\n\t\t\t\treturn curPlatform !== null\n\t\t\t},\n\n\t\t\tisFalling(): boolean {\n\t\t\t\treturn vel.y > 0\n\t\t\t},\n\n\t\t\tisJumping(): boolean {\n\t\t\t\treturn vel.y < 0\n\t\t\t},\n\n\t\t\tjump(force: number) {\n\t\t\t\tcurPlatform = null\n\t\t\t\tlastPlatformPos = null\n\t\t\t\tvel.y = -force || -this.jumpForce\n\t\t\t},\n\n\t\t\tonGround(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"ground\", action)\n\t\t\t},\n\n\t\t\tonFall(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fall\", action)\n\t\t\t},\n\n\t\t\tonFallOff(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fallOff\", action)\n\t\t\t},\n\n\t\t\tonHeadbutt(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"headbutt\", action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction doubleJump(numJumps: number = 2): DoubleJumpComp {\n\t\tlet jumpsLeft = numJumps\n\t\treturn {\n\t\t\tid: \"doubleJump\",\n\t\t\trequire: [ \"body\" ],\n\t\t\tnumJumps: numJumps,\n\t\t\tadd(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\tthis.onGround(() => {\n\t\t\t\t\tjumpsLeft = this.numJumps\n\t\t\t\t})\n\t\t\t},\n\t\t\tdoubleJump(this: GameObj<BodyComp | DoubleJumpComp>, force?: number) {\n\t\t\t\tif (jumpsLeft <= 0) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (jumpsLeft < this.numJumps) {\n\t\t\t\t\tthis.trigger(\"doubleJump\")\n\t\t\t\t}\n\t\t\t\tjumpsLeft--\n\t\t\t\tthis.jump(force)\n\t\t\t},\n\t\t\tonDoubleJump(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"doubleJump\", action)\n\t\t\t},\n\t\t\tinspect(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\treturn `${jumpsLeft}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction shader(id: string, uniform?: Uniform | (() => Uniform)): ShaderComp {\n\t\treturn {\n\t\t\tid: \"shader\",\n\t\t\tshader: id,\n\t\t\t...(typeof uniform === \"function\" ? {\n\t\t\t\tuniform: uniform(),\n\t\t\t\tupdate() {\n\t\t\t\t\tthis.uniform = uniform()\n\t\t\t\t},\n\t\t\t} : {\n\t\t\t\tuniform: uniform,\n\t\t\t}),\n\t\t}\n\t}\n\n\t// TODO: all children should be fixed\n\tfunction fixed(): FixedComp {\n\t\treturn {\n\t\t\tid: \"fixed\",\n\t\t\tfixed: true,\n\t\t}\n\t}\n\n\tfunction stay(scenesToStay?: string[]): StayComp {\n\t\treturn {\n\t\t\tid: \"stay\",\n\t\t\tstay: true,\n\t\t\tscenesToStay: scenesToStay,\n\t\t}\n\t}\n\n\tfunction health(hp: number): HealthComp {\n\t\tif (hp == null) {\n\t\t\tthrow new Error(\"health() requires the initial amount of hp\")\n\t\t}\n\t\treturn {\n\t\t\tid: \"health\",\n\t\t\thurt(this: GameObj, n: number = 1) {\n\t\t\t\tthis.setHP(hp - n)\n\t\t\t\tthis.trigger(\"hurt\", n)\n\t\t\t},\n\t\t\theal(this: GameObj, n: number = 1) {\n\t\t\t\tthis.setHP(hp + n)\n\t\t\t\tthis.trigger(\"heal\", n)\n\t\t\t},\n\t\t\thp(): number {\n\t\t\t\treturn hp\n\t\t\t},\n\t\t\tsetHP(this: GameObj, n: number) {\n\t\t\t\thp = n\n\t\t\t\tif (hp <= 0) {\n\t\t\t\t\tthis.trigger(\"death\")\n\t\t\t\t}\n\t\t\t},\n\t\t\tonHurt(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"hurt\", action)\n\t\t\t},\n\t\t\tonHeal(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"heal\", action)\n\t\t\t},\n\t\t\tonDeath(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"death\", action)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${hp}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction lifespan(time: number, opt: LifespanCompOpt = {}): LifespanComp {\n\t\tif (time == null) {\n\t\t\tthrow new Error(\"lifespan() requires time\")\n\t\t}\n\t\tconst fade = opt.fade ?? 0\n\t\treturn {\n\t\t\tid: \"lifespan\",\n\t\t\tasync add(this: GameObj<OpacityComp>) {\n\t\t\t\tawait wait(time)\n\t\t\t\t// TODO: this secretively requires opacity comp, make opacity on every game obj?\n\t\t\t\tif (fade > 0 && this.opacity) {\n\t\t\t\t\tawait tween(this.opacity, 0, fade, (a) => this.opacity = a, easings.linear)\n\t\t\t\t}\n\t\t\t\tthis.destroy()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction state(\n\t\tinitState: string,\n\t\tstateList?: string[],\n\t\ttransitions?: Record<string, string | string[]>,\n\t): StateComp {\n\n\t\tif (!initState) {\n\t\t\tthrow new Error(\"state() requires an initial state\")\n\t\t}\n\n\t\tconst events = {}\n\n\t\tfunction initStateEvents(state: string) {\n\t\t\tif (!events[state]) {\n\t\t\t\tevents[state] = {\n\t\t\t\t\tenter: new Event(),\n\t\t\t\t\tend: new Event(),\n\t\t\t\t\tupdate: new Event(),\n\t\t\t\t\tdraw: new Event(),\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction on(event, state, action) {\n\t\t\tinitStateEvents(state)\n\t\t\treturn events[state][event].add(action)\n\t\t}\n\n\t\tfunction trigger(event, state, ...args) {\n\t\t\tinitStateEvents(state)\n\t\t\tevents[state][event].trigger(...args)\n\t\t}\n\n\t\tlet didFirstEnter = false\n\n\t\treturn {\n\n\t\t\tid: \"state\",\n\t\t\tstate: initState,\n\n\t\t\tenterState(state: string, ...args) {\n\n\t\t\t\tdidFirstEnter = true\n\n\t\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\t\tthrow new Error(`State not found: ${state}`)\n\t\t\t\t}\n\n\t\t\t\tconst oldState = this.state\n\n\t\t\t\tif (transitions) {\n\n\t\t\t\t\t// check if the transition is legal, if transition graph is defined\n\t\t\t\t\tif (!transitions?.[oldState]) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tconst available = typeof transitions[oldState] === \"string\"\n\t\t\t\t\t\t? [transitions[oldState]]\n\t\t\t\t\t\t: transitions[oldState] as string[]\n\n\t\t\t\t\tif (!available.includes(state)) {\n\t\t\t\t\t\tthrow new Error(`Cannot transition state from \"${oldState}\" to \"${state}\". Available transitions: ${available.map((s) => `\"${s}\"`).join(\", \")}`)\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttrigger(\"end\", oldState, ...args)\n\t\t\t\tthis.state = state\n\t\t\t\ttrigger(\"enter\", state, ...args)\n\t\t\t\ttrigger(\"enter\", `${oldState} -> ${state}`, ...args)\n\n\t\t\t},\n\n\t\t\tonStateTransition(from: string, to: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", `${from} -> ${to}`, action)\n\t\t\t},\n\n\t\t\tonStateEnter(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", state, action)\n\t\t\t},\n\n\t\t\tonStateUpdate(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"update\", state, action)\n\t\t\t},\n\n\t\t\tonStateDraw(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"draw\", state, action)\n\t\t\t},\n\n\t\t\tonStateEnd(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"end\", state, action)\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t// execute the enter event for initState\n\t\t\t\tif (!didFirstEnter) {\n\t\t\t\t\ttrigger(\"enter\", initState)\n\t\t\t\t\tdidFirstEnter = true\n\t\t\t\t}\n\t\t\t\ttrigger(\"update\", this.state)\n\t\t\t},\n\n\t\t\tdraw() {\n\t\t\t\ttrigger(\"draw\", this.state)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn this.state\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction fadeIn(time: number = 1): Comp {\n\t\tlet t = 0\n\t\tlet done = false\n\t\treturn {\n\t\t\trequire: [ \"opacity\" ],\n\t\t\tadd(this: GameObj<OpacityComp>) {\n\t\t\t\tthis.opacity = 0\n\t\t\t},\n\t\t\tupdate(this: GameObj<OpacityComp>) {\n\t\t\t\tif (done) return\n\t\t\t\tt += dt()\n\t\t\t\tthis.opacity = map(t, 0, time, 0, 1)\n\t\t\t\tif (t >= time) {\n\t\t\t\t\tthis.opacity = 1\n\t\t\t\t\tdone = true\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction onLoad(cb: () => void): void {\n\t\tif (assets.loaded) {\n\t\t\tcb()\n\t\t} else {\n\t\t\tgame.events.on(\"load\", cb)\n\t\t}\n\t}\n\n\tfunction scene(id: SceneName, def: SceneDef) {\n\t\tgame.scenes[id] = def\n\t}\n\n\tfunction go(name: SceneName, ...args) {\n\n\t\tif (!game.scenes[name]) {\n\t\t\tthrow new Error(`Scene not found: ${name}`)\n\t\t}\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tgame.events.trigger(\"sceneLeave\", name)\n\t\t\tapp.events.clear()\n\t\t\tgame.events.clear()\n\t\t\tgame.objEvents.clear()\n\n\t\t\t;[...game.root.children].forEach((obj) => {\n\t\t\t\tif (\n\t\t\t\t\t!obj.stay\n\t\t\t\t\t|| (obj.scenesToStay && !obj.scenesToStay.includes(name))\n\t\t\t\t) {\n\t\t\t\t\tgame.root.remove(obj)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tgame.root.clearEvents()\n\n\t\t\t// cam\n\t\t\tgame.cam = {\n\t\t\t\tpos: null,\n\t\t\t\tscale: vec2(1),\n\t\t\t\tangle: 0,\n\t\t\t\tshake: 0,\n\t\t\t\ttransform: new Mat4(),\n\t\t\t}\n\n\t\t\tgame.scenes[name](...args)\n\n\t\t\tif (gopt.debug !== false) {\n\t\t\t\tenterDebugMode()\n\t\t\t}\n\n\t\t\tif (gopt.burp) {\n\t\t\t\tenterBurpMode()\n\t\t\t}\n\n\t\t})\n\n\t}\n\n\tfunction onSceneLeave(action: (newScene?: string) => void): EventController {\n\t\treturn game.events.on(\"sceneLeave\", action)\n\t}\n\n\tfunction getData<T>(key: string, def?: T): T {\n\t\ttry {\n\t\t\treturn JSON.parse(window.localStorage[key])\n\t\t} catch {\n\t\t\tif (def) {\n\t\t\t\tsetData(key, def)\n\t\t\t\treturn def\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setData(key: string, data: any) {\n\t\twindow.localStorage[key] = JSON.stringify(data)\n\t}\n\n\tfunction plug<T>(plugin: KaboomPlugin<T>): MergeObj<T> & KaboomCtx {\n\t\tconst funcs = plugin(ctx)\n\t\tfor (const k in funcs) {\n\t\t\t// @ts-ignore\n\t\t\tctx[k] = funcs[k]\n\t\t\tif (gopt.global !== false) {\n\t\t\t\t// @ts-ignore\n\t\t\t\twindow[k] = funcs[k]\n\t\t\t}\n\t\t}\n\t\treturn ctx as unknown as MergeObj<T> & KaboomCtx\n\t}\n\n\tfunction center(): Vec2 {\n\t\treturn vec2(width() / 2, height() / 2)\n\t}\n\n\tenum EdgeMask {\n\t\tNone = 0,\n\t\tLeft = 1,\n\t\tTop = 2,\n\t\tLeftTop = 3,\n\t\tRight = 4,\n\t\tHorizontal = 5,\n\t\tRightTop = 6,\n\t\tHorizontalTop = 7,\n\t\tBottom = 8,\n\t\tLeftBottom = 9,\n\t\tVertical = 10,\n\t\tLeftVertical = 11,\n\t\tRightBottom = 12,\n\t\tHorizontalBottom = 13,\n\t\tRightVertical = 14,\n\t\tAll = 15,\n\t}\n\n\tfunction tile(opts: TileCompOpt = {}): TileComp {\n\n\t\tlet tilePos = vec2(0)\n\t\tlet isObstacle = opts.isObstacle ?? false\n\t\tlet cost = opts.cost ?? 0\n\t\tlet edges = opts.edges ?? []\n\n\t\tconst getEdgeMask = () => {\n\t\t\tconst loopup = {\n\t\t\t\t\"left\": EdgeMask.Left,\n\t\t\t\t\"top\": EdgeMask.Top,\n\t\t\t\t\"right\": EdgeMask.Right,\n\t\t\t\t\"bottom\": EdgeMask.Bottom,\n\t\t\t}\n\t\t\treturn edges.map(s => loopup[s] || 0).reduce((mask, dir) => mask | dir, 0)\n\t\t}\n\n\t\tlet edgeMask = getEdgeMask()\n\n\t\treturn {\n\n\t\t\tid: \"tile\",\n\t\t\ttilePosOffset: opts.offset ?? vec2(0),\n\n\t\t\tset tilePos(p: Vec2) {\n\t\t\t\tconst level = this.getLevel()\n\t\t\t\ttilePos = p.clone()\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis.pos = vec2(\n\t\t\t\t\tthis.tilePos.x * level.tileWidth(),\n\t\t\t\t\tthis.tilePos.y * level.tileHeight(),\n\t\t\t\t).add(this.tilePosOffset)\n\t\t\t},\n\n\t\t\tget tilePos() {\n\t\t\t\treturn tilePos\n\t\t\t},\n\n\t\t\tset isObstacle(is: boolean) {\n\t\t\t\tif (isObstacle === is) return\n\t\t\t\tisObstacle = is\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget isObstacle() {\n\t\t\t\treturn isObstacle\n\t\t\t},\n\n\t\t\tset cost(n: number) {\n\t\t\t\tif (cost === n) return\n\t\t\t\tcost = n\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget cost() {\n\t\t\t\treturn cost\n\t\t\t},\n\n\t\t\tset edges(e: Edge[]) {\n\t\t\t\tedges = e\n\t\t\t\tedgeMask = getEdgeMask()\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget edges() {\n\t\t\t\treturn edges\n\t\t\t},\n\n\t\t\tget edgeMask() {\n\t\t\t\treturn edgeMask\n\t\t\t},\n\n\t\t\tgetLevel(this: GameObj) {\n\t\t\t\treturn this.parent as GameObj<LevelComp>\n\t\t\t},\n\n\t\t\tmoveLeft() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(-1, 0))\n\t\t\t},\n\n\t\t\tmoveRight() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(1, 0))\n\t\t\t},\n\n\t\t\tmoveUp() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, -1))\n\t\t\t},\n\n\t\t\tmoveDown() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, 1))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction addLevel(map: string[], opt: LevelOpt): GameObj<PosComp | LevelComp> {\n\n\t\tif (!opt.tileWidth || !opt.tileHeight) {\n\t\t\tthrow new Error(\"Must provide tileWidth and tileHeight.\")\n\t\t}\n\n\t\tconst level = add([\n\t\t\tpos(opt.pos ?? vec2(0)),\n\t\t]) as GameObj<PosComp | LevelComp>\n\n\t\tconst numRows = map.length\n\t\tlet numColumns = 0\n\n\t\t// The spatial map keeps track of the objects at each location\n\t\tlet spatialMap: GameObj[][] | null = null\n\t\tlet costMap: number[] | null = null\n\t\tlet edgeMap: number[] | null = null\n\t\tlet connectivityMap: number[] | null = null\n\n\t\tconst tile2Hash = (tilePos: Vec2) => tilePos.x + tilePos.y * numColumns\n\t\tconst hash2Tile = (hash: number) => vec2(\n\t\t\tMath.floor(hash % numColumns),\n\t\t\tMath.floor(hash / numColumns),\n\t\t)\n\n\t\tconst createSpatialMap = () => {\n\t\t\tspatialMap = []\n\t\t\tfor (const child of level.children) {\n\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t}\n\t\t}\n\n\t\tconst insertIntoSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tspatialMap[i].push(obj)\n\t\t\t} else {\n\t\t\t\tspatialMap[i] = [obj]\n\t\t\t}\n\t\t}\n\n\t\tconst removeFromSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tconst index = spatialMap[i].indexOf(obj)\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tspatialMap[i].splice(index, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst updateSpatialMap = () => {\n\t\t\tlet spatialMapChanged = false\n\t\t\tfor (const child of level.children) {\n\t\t\t\tconst tilePos = level.pos2Tile(child.pos)\n\t\t\t\tif (child.tilePos.x != tilePos.x || child.tilePos.y != tilePos.y) {\n\t\t\t\t\tspatialMapChanged = true\n\t\t\t\t\tremoveFromSpatialMap(child)\n\t\t\t\t\tchild.tilePos.x = tilePos.x\n\t\t\t\t\tchild.tilePos.y = tilePos.y\n\t\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (spatialMapChanged) {\n\t\t\t\tlevel.trigger(\"spatial_map_changed\")\n\t\t\t}\n\t\t}\n\n\t\t// The obstacle map tells which tiles are accessible\n\t\t// Cost: accessible with cost\n\t\t// Infinite: inaccessible\n\t\tconst createCostMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!costMap) {\n\t\t\t\tcostMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcostMap.length = size\n\t\t\t}\n\t\t\tcostMap.fill(1, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tlet cost = 0\n\t\t\t\t\tfor (const obj of objects) {\n\t\t\t\t\t\tif (obj.isObstacle) {\n\t\t\t\t\t\t\tcost = Infinity\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcost += obj.cost\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcostMap[i] = cost || 1\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The edge map tells which edges between nodes are walkable\n\t\tconst createEdgeMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!edgeMap) {\n\t\t\t\tedgeMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tedgeMap.length = size\n\t\t\t}\n\t\t\tedgeMap.fill(EdgeMask.All, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tconst len = objects.length\n\t\t\t\t\tlet mask = EdgeMask.All\n\t\t\t\t\tfor (let j = 0; j < len; j++) {\n\t\t\t\t\t\tmask |= objects[j].edgeMask\n\t\t\t\t\t}\n\t\t\t\t\tedgeMap[i] = mask\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The connectivity map is used to see whether two locations are connected\n\t\t// -1: inaccesible n: connectivity group\n\t\tconst createConnectivityMap = () => {\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tconst traverse = (i: number, index: number) => {\n\t\t\t\tconst frontier: number[] = []\n\t\t\t\tfrontier.push(i)\n\t\t\t\twhile (frontier.length > 0) {\n\t\t\t\t\tconst i = frontier.pop()\n\t\t\t\t\tgetNeighbours(i).forEach((i) => {\n\t\t\t\t\t\tif (connectivityMap[i] < 0) {\n\t\t\t\t\t\t\tconnectivityMap[i] = index\n\t\t\t\t\t\t\tfrontier.push(i)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!connectivityMap) {\n\t\t\t\tconnectivityMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconnectivityMap.length = size\n\t\t\t}\n\t\t\tconnectivityMap.fill(-1, 0, size)\n\t\t\tlet index = 0\n\t\t\tfor (let i = 0; i < costMap.length; i++) {\n\t\t\t\tif (connectivityMap[i] >= 0) { index++; continue }\n\t\t\t\ttraverse(i, index)\n\t\t\t\tindex++\n\t\t\t}\n\t\t}\n\n\t\tconst getCost = (node: number, neighbour: number) => {\n\t\t\t// Cost of destination tile\n\t\t\treturn costMap[neighbour]\n\t\t}\n\n\t\tconst getHeuristic = (node: number, goal: number) => {\n\t\t\t// Euclidian distance to target\n\t\t\tconst p1 = hash2Tile(node)\n\t\t\tconst p2 = hash2Tile(goal)\n\t\t\treturn p1.dist(p2)\n\t\t}\n\n\t\tconst getNeighbours = (node: number, diagonals?: boolean) => {\n\t\t\tconst n = []\n\t\t\tconst x = Math.floor(node % numColumns)\n\t\t\tconst left = x > 0 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Left) &&\n\t\t\t\tcostMap[node - 1] !== Infinity\n\t\t\tconst top = node >= numColumns &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Top) &&\n\t\t\t\tcostMap[node - numColumns] !== Infinity\n\t\t\tconst right = x < numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Right) &&\n\t\t\t\tcostMap[node + 1] !== Infinity\n\t\t\tconst bottom = node < numColumns * numRows - numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Bottom) &&\n\t\t\t\tcostMap[node + numColumns] !== Infinity\n\t\t\tif (diagonals) {\n\t\t\t\tif (left) {\n\t\t\t\t\tif (top) { n.push(node - numColumns - 1) }\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns - 1) }\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tif (top) { n.push(node - numColumns + 1) }\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns + 1) }\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (left) {\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn n\n\t\t}\n\n\t\tconst levelComp: LevelComp = {\n\n\t\t\tid: \"level\",\n\n\t\t\ttileWidth() {\n\t\t\t\treturn opt.tileWidth\n\t\t\t},\n\n\t\t\ttileHeight() {\n\t\t\t\treturn opt.tileHeight\n\t\t\t},\n\n\t\t\tspawn(this: GameObj<LevelComp>, key: string | CompList<any>, ...args: Vec2Args): GameObj | null {\n\n\t\t\t\tconst p = vec2(...args)\n\n\t\t\t\tconst comps = (() => {\n\t\t\t\t\tif (typeof key === \"string\") {\n\t\t\t\t\t\tif (opt.tiles[key]) {\n\t\t\t\t\t\t\tif (typeof opt.tiles[key] !== \"function\") {\n\t\t\t\t\t\t\t\tthrow new Error(\"Level symbol def must be a function returning a component list\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn opt.tiles[key](p)\n\t\t\t\t\t\t} else if (opt.wildcardTile) {\n\t\t\t\t\t\t\treturn opt.wildcardTile(key, p)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Array.isArray(key)) {\n\t\t\t\t\t\treturn key\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Expected a symbol or a component list\")\n\t\t\t\t\t}\n\t\t\t\t})()\n\n\t\t\t\t// empty tile\n\t\t\t\tif (!comps) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tlet hasPos = false\n\t\t\t\tlet hasTile = false\n\n\t\t\t\tfor (const comp of comps) {\n\t\t\t\t\tif (comp.id === \"tile\") hasTile = true\n\t\t\t\t\tif (comp.id === \"pos\") hasPos = true\n\t\t\t\t}\n\n\t\t\t\tif (!hasPos) comps.push(pos())\n\t\t\t\tif (!hasTile) comps.push(tile())\n\n\t\t\t\tconst obj = level.add(comps)\n\n\t\t\t\tif (hasPos) {\n\t\t\t\t\tobj.tilePosOffset = obj.pos.clone()\n\t\t\t\t}\n\n\t\t\t\tobj.tilePos = p\n\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tinsertIntoSpatialMap(obj)\n\t\t\t\t\tthis.trigger(\"spatial_map_changed\")\n\t\t\t\t\tthis.trigger(\"navigation_map_invalid\")\n\t\t\t\t}\n\n\t\t\t\treturn obj\n\n\t\t\t},\n\n\t\t\tnumColumns() {\n\t\t\t\treturn numColumns\n\t\t\t},\n\n\t\t\tnumRows() {\n\t\t\t\treturn numRows\n\t\t\t},\n\n\t\t\tlevelWidth() {\n\t\t\t\treturn numColumns * this.tileWidth()\n\t\t\t},\n\n\t\t\tlevelHeight() {\n\t\t\t\treturn numRows * this.tileHeight()\n\t\t\t},\n\n\t\t\ttile2Pos(...args: Vec2Args) {\n\t\t\t\treturn vec2(...args).scale(this.tileWidth(), this.tileHeight())\n\t\t\t},\n\n\t\t\tpos2Tile(...args: Vec2Args) {\n\t\t\t\tconst p = vec2(...args)\n\t\t\t\treturn vec2(\n\t\t\t\t\tMath.floor(p.x / this.tileWidth()),\n\t\t\t\t\tMath.floor(p.y / this.tileHeight()),\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tgetSpatialMap() {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\treturn spatialMap\n\t\t\t},\n\n\t\t\tonSpatialMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"spatial_map_changed\", cb)\n\t\t\t},\n\n\t\t\tonNavigationMapInvalid(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_invalid\", cb)\n\t\t\t},\n\n\t\t\tgetAt(tilePos: Vec2) {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\tconst hash = tile2Hash(tilePos)\n\t\t\t\treturn spatialMap[hash] || []\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tupdateSpatialMap()\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinvalidateNavigationMap() {\n\t\t\t\tcostMap = null\n\t\t\t\tedgeMap = null\n\t\t\t\tconnectivityMap = null\n\t\t\t},\n\n\t\t\tonNavigationMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_changed\", cb)\n\t\t\t},\n\n\t\t\tgetTilePath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tif (!costMap) {\n\t\t\t\t\tcreateCostMap()\n\t\t\t\t}\n\t\t\t\tif (!edgeMap) {\n\t\t\t\t\tcreateEdgeMap()\n\t\t\t\t}\n\t\t\t\tif (!connectivityMap) {\n\t\t\t\t\tcreateConnectivityMap()\n\t\t\t\t}\n\n\t\t\t\t// Tiles are outside the grid\n\t\t\t\tif (from.x < 0 || from.x >= numColumns ||\n\t\t\t\t\tfrom.y < 0 || from.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\tif (to.x < 0 || to.x >= numColumns ||\n\t\t\t\t\tto.y < 0 || to.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tconst start = tile2Hash(from)\n\t\t\t\tconst goal = tile2Hash(to)\n\n\t\t\t\t// Tiles are not accessible\n\t\t\t\t// If we test the start tile, we may get stuck\n\t\t\t\t/*if (costMap[start] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}*/\n\t\t\t\tif (costMap[goal] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Same Tile, no waypoints needed\n\t\t\t\tif (start === goal) {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\n\t\t\t\t// Tiles are not within the same section\n\t\t\t\t// If we test the start tile when invalid, we may get stuck\n\t\t\t\tif (connectivityMap[start] != -1 && connectivityMap[start] !== connectivityMap[goal]) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Find a path\n\t\t\t\tinterface CostNode { cost: number, node: number }\n\t\t\t\tconst frontier = new BinaryHeap<CostNode>((a, b) => a.cost < b.cost)\n\t\t\t\tfrontier.insert({ cost: 0, node: start })\n\n\t\t\t\tconst cameFrom = new Map<number, number>()\n\t\t\t\tcameFrom.set(start, start)\n\t\t\t\tconst costSoFar = new Map<number, number>()\n\t\t\t\tcostSoFar.set(start, 0)\n\n\t\t\t\twhile (frontier.length !== 0) {\n\t\t\t\t\tconst current = frontier.remove()?.node\n\n\t\t\t\t\tif (current === goal)\n\t\t\t\t\t\tbreak\n\n\t\t\t\t\tconst neighbours = getNeighbours(current, opts.allowDiagonals)\n\t\t\t\t\tfor (const next of neighbours) {\n\t\t\t\t\t\tconst newCost = (costSoFar.get(current) || 0) +\n\t\t\t\t\t\t\tgetCost(current, next) +\n\t\t\t\t\t\t\tgetHeuristic(next, goal)\n\t\t\t\t\t\tif (!costSoFar.has(next) || newCost < costSoFar.get(next)) {\n\t\t\t\t\t\t\tcostSoFar.set(next, newCost)\n\t\t\t\t\t\t\tfrontier.insert({ cost: newCost, node: next })\n\t\t\t\t\t\t\tcameFrom.set(next, current)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst path = []\n\t\t\t\tlet node = goal\n\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\tpath.push(p)\n\t\t\t\twhile (node !== start) {\n\t\t\t\t\tnode = cameFrom.get(node)\n\t\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\t\tpath.push(p)\n\t\t\t\t}\n\t\t\t\treturn path.reverse()\n\t\t\t},\n\n\t\t\tgetPath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tconst tw = this.tileWidth()\n\t\t\t\tconst th = this.tileHeight()\n\t\t\t\tconst path = this.getTilePath(\n\t\t\t\t\tthis.pos2Tile(from),\n\t\t\t\t\tthis.pos2Tile(to),\n\t\t\t\t\topts,\n\t\t\t\t)\n\t\t\t\tif (path) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t...path\n\t\t\t\t\t\t\t.slice(1, -1)\n\t\t\t\t\t\t\t.map((tilePos) => tilePos.scale(tw, th).add(tw / 2, th / 2)),\n\t\t\t\t\t\tto,\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t\tlevel.use(levelComp)\n\n\t\tlevel.onNavigationMapInvalid(() => {\n\t\t\tlevel.invalidateNavigationMap()\n\t\t\tlevel.trigger(\"navigation_map_changed\")\n\t\t})\n\n\t\tmap.forEach((row, i) => {\n\t\t\tconst keys = row.split(\"\")\n\t\t\tnumColumns = Math.max(keys.length, numColumns)\n\t\t\tkeys.forEach((key, j) => {\n\t\t\t\tlevel.spawn(key, vec2(j, i))\n\t\t\t})\n\t\t})\n\n\t\treturn level\n\n\t}\n\n\tfunction agent(opts: AgentCompOpt = {}) : AgentComp {\n\t\tlet target: Vec2 | null = null\n\t\tlet path: Vec2[] | null = null\n\t\tlet index: number | null = null\n\t\tlet navMapChangedEvent: EventController | null = null\n\t\treturn {\n\t\t\tid: \"agent\",\n\t\t\trequire: [\"pos\", \"tile\"],\n\t\t\tagentSpeed: opts.speed ?? 100,\n\t\t\tallowDiagonals: opts.allowDiagonals ?? true,\n\t\t\tgetDistanceToTarget(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.dist(target) : 0\n\t\t\t},\n\t\t\tgetNextLocation() {\n\t\t\t\treturn path && index ? path[index] : null\n\t\t\t},\n\t\t\tgetPath() {\n\t\t\t\treturn path ? path.slice() : null\n\t\t\t},\n\t\t\tgetTarget() {\n\t\t\t\treturn target\n\t\t\t},\n\t\t\tisNavigationFinished() {\n\t\t\t\treturn path ? index === null : true\n\t\t\t},\n\t\t\tisTargetReachable() {\n\t\t\t\treturn path !== null\n\t\t\t},\n\t\t\tisTargetReached(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.eq(target) : true\n\t\t\t},\n\t\t\tsetTarget(this: GameObj<AgentComp | TileComp | PosComp>, p: Vec2) {\n\t\t\t\ttarget = p\n\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t})\n\t\t\t\tindex = path ? 0 : null\n\t\t\t\tif (path) {\n\t\t\t\t\tif (!navMapChangedEvent) {\n\t\t\t\t\t\tnavMapChangedEvent = this.getLevel().onNavigationMapChanged(() => {\n\t\t\t\t\t\t\tif (path && index !== null) {\n\t\t\t\t\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tindex = path ? 0 : null\n\t\t\t\t\t\t\t\tif (path) {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.onDestroy(() => navMapChangedEvent.cancel())\n\t\t\t\t\t}\n\t\t\t\t\tthis.trigger(\"navigation-started\", this)\n\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t} else {\n\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\tif (path && index !== null) {\n\t\t\t\t\tif (this.pos.sdist(path[index]) < 2) {\n\t\t\t\t\t\tif (index === path.length - 1) {\n\t\t\t\t\t\t\tthis.pos = target.clone()\n\t\t\t\t\t\t\tindex = null\n\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\tthis.trigger(\"target-reached\", this)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex++\n\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tthis.moveTo(path[index], this.agentSpeed)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonNavigationStarted(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-started\", cb)\n\t\t\t},\n\t\t\tonNavigationNext(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-next\", cb)\n\t\t\t},\n\t\t\tonNavigationEnded(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-ended\", cb)\n\t\t\t},\n\t\t\tonTargetReached(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"target-reached\", cb)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn JSON.stringify({\n\t\t\t\t\ttarget: JSON.stringify(target),\n\t\t\t\t\tpath: JSON.stringify(path),\n\t\t\t\t})\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction record(frameRate?): Recording {\n\n\t\tconst stream = app.canvas().captureStream(frameRate)\n\t\tconst audioDest = audio.ctx.createMediaStreamDestination()\n\n\t\taudio.masterNode.connect(audioDest)\n\n\t\t// TODO: Enabling audio results in empty video if no audio received\n\t\t// const audioStream = audioDest.stream\n\t\t// const [firstAudioTrack] = audioStream.getAudioTracks()\n\n\t\t// stream.addTrack(firstAudioTrack);\n\n\t\tconst recorder = new MediaRecorder(stream)\n\t\tconst chunks = []\n\n\t\trecorder.ondataavailable = (e) => {\n\t\t\tif (e.data.size > 0) {\n\t\t\t\tchunks.push(e.data)\n\t\t\t}\n\t\t}\n\n\t\trecorder.onerror = () => {\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t}\n\n\t\trecorder.start()\n\n\t\treturn {\n\n\t\t\tresume() {\n\t\t\t\trecorder.resume()\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\trecorder.pause()\n\t\t\t},\n\n\t\t\tstop(): Promise<Blob> {\n\t\t\t\trecorder.stop()\n\t\t\t\t// cleanup\n\t\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\trecorder.onstop = () => {\n\t\t\t\t\t\tresolve(new Blob(chunks, {\n\t\t\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tdownload(filename = \"kaboom.mp4\") {\n\t\t\t\tthis.stop().then((blob) => downloadBlob(filename, blob))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction isFocused(): boolean {\n\t\treturn document.activeElement === app.canvas()\n\t}\n\n\tfunction destroy(obj: GameObj) {\n\t\tobj.destroy()\n\t}\n\n\t// aliases for root game obj operations\n\tconst add: KaboomCtx[\"add\"] = game.root.add.bind(game.root)\n\tconst readd: KaboomCtx[\"readd\"] = game.root.readd.bind(game.root)\n\tconst destroyAll: KaboomCtx[\"destroyAll\"] = game.root.removeAll.bind(game.root)\n\tconst get: KaboomCtx[\"get\"] = game.root.get.bind(game.root)\n\n\tfunction boom(speed: number = 2, size: number = 1): Comp {\n\t\tlet time = 0\n\t\treturn {\n\t\t\tid: \"boom\",\n\t\t\trequire: [ \"scale\" ],\n\t\t\tupdate(this: GameObj<ScaleComp>) {\n\t\t\t\tconst s = Math.sin(time * speed) * size\n\t\t\t\tif (s < 0) {\n\t\t\t\t\tthis.destroy()\n\t\t\t\t}\n\t\t\t\tthis.scale = vec2(s)\n\t\t\t\ttime += dt()\n\t\t\t},\n\t\t}\n\t}\n\n\tconst kaSprite = loadSprite(null, kaSpriteSrc)\n\tconst boomSprite = loadSprite(null, boomSpriteSrc)\n\n\tfunction addKaboom(p: Vec2, opt: BoomOpt = {}): GameObj {\n\n\t\tconst kaboom = add([\n\t\t\tpos(p),\n\t\t\tstay(),\n\t\t])\n\n\t\tconst speed = (opt.speed || 1) * 5\n\t\tconst s = opt.scale || 1\n\n\t\tkaboom.add([\n\t\t\tsprite(boomSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\tboom(speed, s),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tconst ka = kaboom.add([\n\t\t\tsprite(kaSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\ttimer(),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tka.wait(0.4 / speed, () => ka.use(boom(speed, s)))\n\t\tka.onDestroy(() => kaboom.destroy())\n\n\t\treturn kaboom\n\n\t}\n\n\tfunction updateFrame() {\n\t\t// update every obj\n\t\tgame.root.update()\n\t}\n\n\tclass Collision {\n\t\tsource: GameObj\n\t\ttarget: GameObj\n\t\tdisplacement: Vec2\n\t\tresolved: boolean = false\n\t\tconstructor(source: GameObj, target: GameObj, dis: Vec2, resolved = false) {\n\t\t\tthis.source = source\n\t\t\tthis.target = target\n\t\t\tthis.displacement = dis\n\t\t\tthis.resolved = resolved\n\t\t}\n\t\treverse() {\n\t\t\treturn new Collision(\n\t\t\t\tthis.target,\n\t\t\t\tthis.source,\n\t\t\t\tthis.displacement.scale(-1),\n\t\t\t\tthis.resolved,\n\t\t\t)\n\t\t}\n\t\thasOverlap() {\n\t\t\treturn !this.displacement.isZero()\n\t\t}\n\t\tisLeft() {\n\t\t\treturn this.displacement.x > 0\n\t\t}\n\t\tisRight() {\n\t\t\treturn this.displacement.x < 0\n\t\t}\n\t\tisTop() {\n\t\t\treturn this.displacement.y > 0\n\t\t}\n\t\tisBottom() {\n\t\t\treturn this.displacement.y < 0\n\t\t}\n\t\tpreventResolution() {\n\t\t\tthis.resolved = true\n\t\t}\n\t}\n\n\tfunction checkFrame() {\n\n\t\t// TODO: persistent grid?\n\t\t// start a spatial hash grid for more efficient collision detection\n\t\tconst grid: Record<number, Record<number, GameObj<AreaComp>[]>> = {}\n\t\tconst cellSize = gopt.hashGridSize || DEF_HASH_GRID_SIZE\n\n\t\t// current transform\n\t\tlet tr = new Mat4()\n\n\t\t// a local transform stack\n\t\tconst stack = []\n\n\t\tfunction checkObj(obj: GameObj) {\n\n\t\t\tstack.push(tr.clone())\n\n\t\t\t// Update object transform here. This will be the transform later used in rendering.\n\t\t\tif (obj.pos) tr.translate(obj.pos)\n\t\t\tif (obj.scale) tr.scale(obj.scale)\n\t\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\t\tobj.transform = tr.clone()\n\n\t\t\tif (obj.c(\"area\") && !obj.paused) {\n\n\t\t\t\t// TODO: only update worldArea if transform changed\n\t\t\t\tconst aobj = obj as GameObj<AreaComp>\n\t\t\t\tconst area = aobj.worldArea()\n\t\t\t\tconst bbox = area.bbox()\n\n\t\t\t\t// Get spatial hash grid coverage\n\t\t\t\tconst xmin = Math.floor(bbox.pos.x / cellSize)\n\t\t\t\tconst ymin = Math.floor(bbox.pos.y / cellSize)\n\t\t\t\tconst xmax = Math.ceil((bbox.pos.x + bbox.width) / cellSize)\n\t\t\t\tconst ymax = Math.ceil((bbox.pos.y + bbox.height) / cellSize)\n\n\t\t\t\t// Cache objs that are already checked\n\t\t\t\tconst checked = new Set()\n\n\t\t\t\t// insert & check against all covered grids\n\t\t\t\tfor (let x = xmin; x <= xmax; x++) {\n\t\t\t\t\tfor (let y = ymin; y <= ymax; y++) {\n\t\t\t\t\t\tif(!grid[x]) {\n\t\t\t\t\t\t\tgrid[x] = {}\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else if(!grid[x][y]) {\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst cell = grid[x][y]\n\t\t\t\t\t\t\tcheck: for (const other of cell) {\n\t\t\t\t\t\t\t\tif (!other.exists()) {\n\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (checked.has(other.id)) {\n\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const tag of aobj.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (other.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const tag of other.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (aobj.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// TODO: cache the world area here\n\t\t\t\t\t\t\t\tconst res = sat(aobj.worldArea(), other.worldArea())\n\t\t\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\t\t\t// TODO: rehash if the object position is changed after resolution?\n\t\t\t\t\t\t\t\t\tconst col1 = new Collision(aobj, other, res)\n\t\t\t\t\t\t\t\t\taobj.trigger(\"collideUpdate\", other, col1)\n\t\t\t\t\t\t\t\t\tconst col2 = col1.reverse()\n\t\t\t\t\t\t\t\t\t// resolution only has to happen once\n\t\t\t\t\t\t\t\t\tcol2.resolved = col1.resolved\n\t\t\t\t\t\t\t\t\tother.trigger(\"collideUpdate\", aobj, col2)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchecked.add(other.id)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcell.push(aobj)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobj.children.forEach(checkObj)\n\t\t\ttr = stack.pop()\n\n\t\t}\n\n\t\tcheckObj(game.root)\n\n\t}\n\n\tfunction drawFrame() {\n\n\t\t// calculate camera matrix\n\t\tconst cam = game.cam\n\t\tconst shake = Vec2.fromAngle(rand(0, 360)).scale(cam.shake)\n\n\t\tcam.shake = lerp(cam.shake, 0, 5 * dt())\n\t\tcam.transform = new Mat4()\n\t\t\t.translate(center())\n\t\t\t.scale(cam.scale)\n\t\t\t.rotate(cam.angle)\n\t\t\t.translate((cam.pos ?? center()).scale(-1).add(shake))\n\n\t\tgame.root.draw()\n\t\tflush()\n\n\t}\n\n\tfunction drawLoadScreen() {\n\n\t\tconst progress = loadProgress()\n\n\t\tif (game.events.numListeners(\"loading\") > 0) {\n\t\t\tgame.events.trigger(\"loading\", progress)\n\t\t} else {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tconst w = width() / 2\n\t\t\t\tconst h = 24\n\t\t\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2))\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: vec2(0),\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w,\n\t\t\t\t\theight: h,\n\t\t\t\t\tfill: false,\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w * progress,\n\t\t\t\t\theight: h,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t}\n\n\tfunction drawInspectText(pos, txt) {\n\n\t\tdrawUnscaled(() => {\n\n\t\t\tconst pad = vec2(8)\n\n\t\t\tpushTransform()\n\t\t\tpushTranslate(pos)\n\n\t\t\tconst ftxt = formatText({\n\t\t\t\ttext: txt,\n\t\t\t\tfont: DBG_FONT,\n\t\t\t\tsize: 16,\n\t\t\t\tpos: pad,\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tconst bw = ftxt.width + pad.x * 2\n\t\t\tconst bh = ftxt.height + pad.x * 2\n\n\t\t\tif (pos.x + bw >= width()) {\n\t\t\t\tpushTranslate(vec2(-bw, 0))\n\t\t\t}\n\n\t\t\tif (pos.y + bh >= height()) {\n\t\t\t\tpushTranslate(vec2(0, -bh))\n\t\t\t}\n\n\t\t\tdrawRect({\n\t\t\t\twidth: bw,\n\t\t\t\theight: bh,\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\tradius: 4,\n\t\t\t\topacity: 0.8,\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tdrawFormattedText(ftxt)\n\t\t\tpopTransform()\n\n\t\t})\n\n\t}\n\n\tfunction drawDebug() {\n\n\t\tif (debug.inspect) {\n\n\t\t\tlet inspecting = null\n\n\t\t\tfor (const obj of game.root.get(\"*\", { recursive: true })) {\n\t\t\t\tif (obj.c(\"area\") && obj.isHovering()) {\n\t\t\t\t\tinspecting = obj\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgame.root.drawInspect()\n\n\t\t\tif (inspecting) {\n\n\t\t\t\tconst lines = []\n\t\t\t\tconst data = inspecting.inspect()\n\n\t\t\t\tfor (const tag in data) {\n\t\t\t\t\tif (data[tag]) {\n\t\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlines.push(`${tag}`)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdrawInspectText(contentToView(mousePos()), lines.join(\"\\n\"))\n\n\t\t\t}\n\n\t\t\tdrawInspectText(vec2(8), `FPS: ${debug.fps()}`)\n\n\t\t}\n\n\t\tif (debug.paused) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// top right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), 0)\n\t\t\t\tpushTranslate(-8, 8)\n\n\t\t\t\tconst size = 32\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: size,\n\t\t\t\t\theight: size,\n\t\t\t\t\tanchor: \"topright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// pause icon\n\t\t\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t\theight: size * 0.6,\n\t\t\t\t\t\tanchor: \"center\",\n\t\t\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tradius: 2,\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.timeScale !== 1) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// bottom right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), height())\n\t\t\t\tpushTranslate(-8, -8)\n\n\t\t\t\tconst pad = 8\n\n\t\t\t\t// format text first to get text size\n\t\t\t\tconst ftxt = formatText({\n\t\t\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tsize: 16,\n\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\tpos: vec2(-pad),\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\t\t\theight: ftxt.height + pad * 2,\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// fast forward / slow down icon\n\t\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\t\tconst flipped = debug.timeScale < 1\n\t\t\t\t\tdrawTriangle({\n\t\t\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t// text\n\t\t\t\tdrawFormattedText(ftxt)\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.curRecording) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(24, -24)\n\n\t\t\t\tdrawCircle({\n\t\t\t\t\tradius: 12,\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\topacity: wave(0, 1, app.time() * 4),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.showLog && game.logs.length > 0) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(8, -8)\n\n\t\t\t\tconst pad = 8\n\n\t\t\t\tconst ftext = formatText({\n\t\t\t\t\ttext: game.logs.join(\"\\n\"),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tpos: vec2(pad, -pad),\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tsize: 16,\n\t\t\t\t\twidth: width() * 0.6,\n\t\t\t\t\tlineSpacing: pad / 2,\n\t\t\t\t\tfixed: true,\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\t\"time\": { color: rgb(127, 127, 127) },\n\t\t\t\t\t\t\"info\": { color: rgb(255, 255, 255) },\n\t\t\t\t\t\t\"error\": { color: rgb(255, 0, 127) },\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftext.width + pad * 2,\n\t\t\t\t\theight: ftext.height + pad * 2,\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\tradius: 4,\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(ftext)\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t}\n\n\tif (gopt.debug !== false) {\n\t\tenterDebugMode()\n\t}\n\n\tif (gopt.burp) {\n\t\tenterBurpMode()\n\t}\n\n\tfunction onLoading(action: (progress: number) => void) {\n\t\tgame.events.on(\"loading\", action)\n\t}\n\n\tfunction onResize(action: () => void) {\n\t\tapp.onResize(action)\n\t}\n\n\tfunction onError(action: (err: Error) => void) {\n\t\tgame.events.on(\"error\", action)\n\t}\n\n\tfunction handleErr(err: Error) {\n\n\t\t// TODO: this should only run once\n\t\tapp.run(() => {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tconst pad = 32\n\t\t\t\tconst gap = 16\n\t\t\t\tconst gw = width()\n\t\t\t\tconst gh = height()\n\n\t\t\t\tconst textStyle = {\n\t\t\t\t\tsize: 36,\n\t\t\t\t\twidth: gw - pad * 2,\n\t\t\t\t\tletterSpacing: 4,\n\t\t\t\t\tlineSpacing: 4,\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tfixed: true,\n\t\t\t\t}\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: gw,\n\t\t\t\t\theight: gh,\n\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tconst title = formatText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: err.name,\n\t\t\t\t\tpos: vec2(pad),\n\t\t\t\t\tcolor: rgb(255, 128, 0),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(title)\n\n\t\t\t\tdrawText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: err.message,\n\t\t\t\t\tpos: vec2(pad, pad + title.height + gap),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\t\t\t\tgame.events.trigger(\"error\", err)\n\n\t\t\t})\n\n\t\t})\n\n\t}\n\n\tfunction onCleanup(action: () => void) {\n\t\tgc.push(action)\n\t}\n\n\tfunction quit() {\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tapp.quit()\n\n\t\t\tfor (const name in winEvents) {\n\t\t\t\twindow.removeEventListener(name, winEvents[name])\n\t\t\t}\n\n\t\t\t// clear canvas\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT)\n\n\t\t\t// unbind everything\n\t\t\tconst numTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)\n\n\t\t\tfor (let unit = 0; unit < numTextureUnits; unit++) {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + unit)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, null)\n\t\t\t}\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null)\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n\t\t\t// run all scattered gc events\n\t\t\tgc.forEach((f) => f())\n\n\t\t\t// delete webgl buffers\n\t\t\tgl.deleteBuffer(gfx.vbuf)\n\t\t\tgl.deleteBuffer(gfx.ibuf)\n\n\t\t})\n\n\t}\n\n\tfunction tween<V extends LerpValue>(\n\t\tfrom: V,\n\t\tto: V,\n\t\tduration: number,\n\t\tsetValue: (value: V) => void,\n\t\teaseFunc = easings.linear,\n\t): TweenController {\n\t\tlet curTime = 0\n\t\tconst onEndEvents: Array<() => void> = []\n\t\tconst ev = onUpdate(() => {\n\t\t\tcurTime += dt()\n\t\t\tconst t = Math.min(curTime / duration, 1)\n\t\t\tsetValue(lerp(from, to, easeFunc(t)))\n\t\t\tif (t === 1) {\n\t\t\t\tev.cancel()\n\t\t\t\tsetValue(to)\n\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn ev.paused\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tev.paused = p\n\t\t\t},\n\t\t\tonEnd(action: () => void) {\n\t\t\t\tonEndEvents.push(action)\n\t\t\t},\n\t\t\tthen(action: () => void) {\n\t\t\t\tthis.onEnd(action)\n\t\t\t\treturn this\n\t\t\t},\n\t\t\tcancel() {\n\t\t\t\tev.cancel()\n\t\t\t},\n\t\t\tfinish() {\n\t\t\t\tev.cancel()\n\t\t\t\tsetValue(to)\n\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t},\n\t\t}\n\t}\n\n\tlet isFirstFrame = true\n\n\t// main game loop\n\tapp.run(() => {\n\n\t\tif (!assets.loaded) {\n\t\t\tif (loadProgress() === 1 && !isFirstFrame) {\n\t\t\t\tassets.loaded = true\n\t\t\t\tgame.events.trigger(\"load\")\n\t\t\t}\n\t\t}\n\n\t\tif (!assets.loaded && gopt.loadingScreen !== false || isFirstFrame) {\n\t\t\tframeStart()\n\t\t\t// TODO: Currently if assets are not initially loaded no updates or timers will be run, however they will run if loadingScreen is set to false. What's the desired behavior or should we make them consistent?\n\t\t\tdrawLoadScreen()\n\t\t\tframeEnd()\n\t\t} else {\n\t\t\tif (!debug.paused) updateFrame()\n\t\t\tcheckFrame()\n\t\t\tframeStart()\n\t\t\tdrawFrame()\n\t\t\tif (gopt.debug !== false) drawDebug()\n\t\t\tframeEnd()\n\t\t}\n\n\t\tif (isFirstFrame) {\n\t\t\tisFirstFrame = false\n\t\t}\n\n\t\tgame.events.trigger(\"frameEnd\")\n\n\t})\n\n\t// update viewport based on user setting and fullscreen state\n\tfunction updateViewport() {\n\n\t\t// content size (scaled content size, with scale, stretch and letterbox)\n\t\t// view size (unscaled viewport size)\n\t\t// window size (will be the same as view size except letterbox mode)\n\n\t\t// canvas size\n\t\tconst pd = pixelDensity\n\t\tconst cw = gl.drawingBufferWidth / pd\n\t\tconst ch = gl.drawingBufferHeight / pd\n\n\t\tif (app.isFullscreen()) {\n\t\t\tconst ww = window.innerWidth\n\t\t\tconst wh = window.innerHeight\n\t\t\tconst rw = ww / wh\n\t\t\tconst rc = cw / ch\n\t\t\tif (rw > rc) {\n\t\t\t\tconst sw = window.innerHeight * rc\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: (ww - sw) / 2,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: sw,\n\t\t\t\t\theight: wh,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst sh = window.innerWidth / rc\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: (wh - sh) / 2,\n\t\t\t\t\twidth: ww,\n\t\t\t\t\theight: sh,\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tif (gopt.letterbox) {\n\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new Error(\"Letterboxing requires width and height defined.\")\n\t\t\t}\n\n\t\t\tconst rc = cw / ch\n\t\t\tconst rg = gopt.width / gopt.height\n\n\t\t\tif (rc > rg) {\n\t\t\t\tconst sw = ch * rg\n\t\t\t\tconst x = (cw - sw) / 2\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: sw,\n\t\t\t\t\theight: ch,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst sh = cw / rg\n\t\t\t\tconst y = (ch - sh) / 2\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: y,\n\t\t\t\t\twidth: cw,\n\t\t\t\t\theight: sh,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn\n\n\t\t}\n\n\t\tif (gopt.stretch) {\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new Error(\"Stretching requires width and height defined.\")\n\t\t\t}\n\t\t}\n\n\t\tgfx.viewport = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: cw,\n\t\t\theight: ch,\n\t\t}\n\n\t}\n\n\t// TODO: white artifact when scrolling, but disappears when done\n\t// TODO: if you resize to larger than the initial size it'll leave white space\n\t// TODO: this clears on scene change\n\tapp.onResize(() => {\n\t\tif (app.isFullscreen()) return\n\t\tconst fixedSize = gopt.width && gopt.height\n\t\tif (fixedSize && !gopt.stretch && !gopt.letterbox) return\n\t\tcanvas.width = canvas.offsetWidth * pixelDensity\n\t\tcanvas.height = canvas.offsetHeight * pixelDensity\n\t\tupdateViewport()\n\t\tif (!fixedSize) {\n\t\t\tgfx.frameBuffer.free()\n\t\t\tgfx.frameBuffer = new FrameBuffer(gl.drawingBufferWidth, gl.drawingBufferHeight)\n\t\t\tgfx.width = gl.drawingBufferWidth / pixelDensity\n\t\t\tgfx.height = gl.drawingBufferHeight / pixelDensity\n\t\t}\n\t})\n\n\tupdateViewport()\n\n\t// the exported ctx handle\n\tconst ctx: KaboomCtx = {\n\t\tVERSION,\n\t\t// asset load\n\t\tloadRoot,\n\t\tloadProgress,\n\t\tloadSprite,\n\t\tloadSpriteAtlas,\n\t\tloadSound,\n\t\tloadBitmapFont,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadShaderURL,\n\t\tloadAseprite,\n\t\tloadPedit,\n\t\tloadBean,\n\t\tloadJSON,\n\t\tload,\n\t\tgetSprite,\n\t\tgetSound,\n\t\tgetFont,\n\t\tgetBitmapFont,\n\t\tgetShader,\n\t\tgetAsset,\n\t\tAsset,\n\t\tSpriteData,\n\t\tSoundData,\n\t\t// query\n\t\twidth,\n\t\theight,\n\t\tcenter,\n\t\tdt,\n\t\ttime: app.time,\n\t\tscreenshot: app.screenshot,\n\t\trecord,\n\t\tisFocused,\n\t\tsetCursor: app.setCursor,\n\t\tgetCursor: app.getCursor,\n\t\tsetCursorLocked: app.setCursorLocked,\n\t\tisCursorLocked: app.isCursorLocked,\n\t\tsetFullscreen: app.setFullscreen,\n\t\tisFullscreen: app.isFullscreen,\n\t\tisTouchscreen: app.isTouchscreen,\n\t\tonLoad,\n\t\tonLoading,\n\t\tonResize,\n\t\tonGamepadConnect: app.onGamepadConnect,\n\t\tonGamepadDisconnect: app.onGamepadDisconnect,\n\t\tonError,\n\t\tonCleanup,\n\t\t// misc\n\t\tcamPos,\n\t\tcamScale,\n\t\tcamRot,\n\t\tshake,\n\t\ttoScreen,\n\t\ttoWorld,\n\t\tsetGravity,\n\t\tgetGravity,\n\t\tsetBackground,\n\t\tgetBackground,\n\t\tgetGamepads: app.getGamepads,\n\t\t// obj\n\t\tadd,\n\t\tmake,\n\t\tdestroy,\n\t\tdestroyAll,\n\t\tget,\n\t\treadd,\n\t\t// comps\n\t\tpos,\n\t\tscale,\n\t\trotate,\n\t\tcolor,\n\t\topacity,\n\t\tanchor,\n\t\tarea,\n\t\tsprite,\n\t\ttext,\n\t\trect,\n\t\tcircle,\n\t\tuvquad,\n\t\toutline,\n\t\tbody,\n\t\tdoubleJump,\n\t\tshader,\n\t\ttimer,\n\t\tfixed,\n\t\tstay,\n\t\thealth,\n\t\tlifespan,\n\t\tz,\n\t\tmove,\n\t\toffscreen,\n\t\tfollow,\n\t\tstate,\n\t\tfadeIn,\n\t\ttile,\n\t\tagent,\n\t\t// group events\n\t\ton,\n\t\tonUpdate,\n\t\tonDraw,\n\t\tonAdd,\n\t\tonDestroy,\n\t\tonClick,\n\t\tonCollide,\n\t\tonCollideUpdate,\n\t\tonCollideEnd,\n\t\tonHover,\n\t\tonHoverUpdate,\n\t\tonHoverEnd,\n\t\t// input\n\t\tonKeyDown: app.onKeyDown,\n\t\tonKeyPress: app.onKeyPress,\n\t\tonKeyPressRepeat: app.onKeyPressRepeat,\n\t\tonKeyRelease: app.onKeyRelease,\n\t\tonMouseDown: app.onMouseDown,\n\t\tonMousePress: app.onMousePress,\n\t\tonMouseRelease: app.onMouseRelease,\n\t\tonMouseMove: app.onMouseMove,\n\t\tonCharInput: app.onCharInput,\n\t\tonTouchStart: app.onTouchStart,\n\t\tonTouchMove: app.onTouchMove,\n\t\tonTouchEnd: app.onTouchEnd,\n\t\tonScroll: app.onScroll,\n\t\tonGamepadButtonDown: app.onGamepadButtonDown,\n\t\tonGamepadButtonPress: app.onGamepadButtonPress,\n\t\tonGamepadButtonRelease: app.onGamepadButtonRelease,\n\t\tonGamepadStick: app.onGamepadStick,\n\t\tmousePos: mousePos,\n\t\tmouseDeltaPos: app.mouseDeltaPos,\n\t\tisKeyDown: app.isKeyDown,\n\t\tisKeyPressed: app.isKeyPressed,\n\t\tisKeyPressedRepeat: app.isKeyPressedRepeat,\n\t\tisKeyReleased: app.isKeyReleased,\n\t\tisMouseDown: app.isMouseDown,\n\t\tisMousePressed: app.isMousePressed,\n\t\tisMouseReleased: app.isMouseReleased,\n\t\tisMouseMoved: app.isMouseMoved,\n\t\tisGamepadButtonPressed: app.isGamepadButtonPressed,\n\t\tisGamepadButtonDown: app.isGamepadButtonDown,\n\t\tisGamepadButtonReleased: app.isGamepadButtonReleased,\n\t\t// getGamepadStick,\n\t\tcharInputted: app.charInputted,\n\t\t// timer\n\t\tloop,\n\t\twait,\n\t\t// audio\n\t\tplay,\n\t\tvolume,\n\t\tburp,\n\t\taudioCtx: audio.ctx,\n\t\t// math\n\t\tTimer,\n\t\tLine,\n\t\tRect,\n\t\tCircle,\n\t\tPolygon,\n\t\tVec2,\n\t\tColor,\n\t\tMat4,\n\t\tQuad,\n\t\tRNG,\n\t\trand,\n\t\trandi,\n\t\trandSeed,\n\t\tvec2,\n\t\trgb,\n\t\thsl2rgb,\n\t\tquad,\n\t\tchoose,\n\t\tchance,\n\t\tlerp,\n\t\ttween,\n\t\teasings,\n\t\tmap,\n\t\tmapc,\n\t\twave,\n\t\tdeg2rad,\n\t\trad2deg,\n\t\ttestLineLine,\n\t\ttestRectRect,\n\t\ttestRectLine,\n\t\ttestRectPoint,\n\t\ttestCirclePolygon,\n\t\ttestLinePoint,\n\t\ttestLineCircle,\n\t\t// raw draw\n\t\tdrawSprite,\n\t\tdrawText,\n\t\tformatText,\n\t\tdrawRect,\n\t\tdrawLine,\n\t\tdrawLines,\n\t\tdrawTriangle,\n\t\tdrawCircle,\n\t\tdrawEllipse,\n\t\tdrawUVQuad,\n\t\tdrawPolygon,\n\t\tdrawFormattedText,\n\t\tdrawMasked,\n\t\tdrawSubtracted,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tpushTranslate,\n\t\tpushScale,\n\t\tpushRotate,\n\t\tpushMatrix,\n\t\tusePostEffect,\n\t\t// debug\n\t\tdebug,\n\t\t// scene\n\t\tscene,\n\t\tgo,\n\t\tonSceneLeave,\n\t\t// level\n\t\taddLevel,\n\t\t// storage\n\t\tgetData,\n\t\tsetData,\n\t\tdownload,\n\t\tdownloadJSON,\n\t\tdownloadText,\n\t\tdownloadBlob,\n\t\t// plugin\n\t\tplug,\n\t\t// char sets\n\t\tASCII_CHARS,\n\t\t// dom\n\t\tcanvas: app.canvas(),\n\t\t// misc\n\t\taddKaboom,\n\t\t// dirs\n\t\tLEFT: Vec2.LEFT,\n\t\tRIGHT: Vec2.RIGHT,\n\t\tUP: Vec2.UP,\n\t\tDOWN: Vec2.DOWN,\n\t\t// colors\n\t\tRED: Color.RED,\n\t\tGREEN: Color.GREEN,\n\t\tBLUE: Color.BLUE,\n\t\tYELLOW: Color.YELLOW,\n\t\tMAGENTA: Color.MAGENTA,\n\t\tCYAN: Color.CYAN,\n\t\tWHITE: Color.WHITE,\n\t\tBLACK: Color.BLACK,\n\t\tquit,\n\t\t// helpers\n\t\tEvent,\n\t\tEventHandler,\n\t\tEventController,\n\t}\n\n\tif (gopt.plugins) {\n\t\tgopt.plugins.forEach(plug)\n\t}\n\n\t// export everything to window if global is set\n\tif (gopt.global !== false) {\n\t\tfor (const k in ctx) {\n\t\t\twindow[k] = ctx[k]\n\t\t}\n\t}\n\n\tapp.canvas().focus()\n\n\treturn ctx\n\n}\n", "import kaboom from \"kaboom\"\nimport \"kaboom/global\"\n\nkaboom({\n  background: [100,100,0],\n})\n\n\n\nloadSprite(\"monster\", \"/sprites/favicon.png\")\nloadSprite(\"wall\", \"/sprites/steel.png\")\nloadSprite(\"people\", \"/sprites/people.png\")\nloadSound(\"score\", \"/sounds/score.mp3\")\nloadSound(\"justice\", \"/sounds/justice.mp4\")\n\n\n\n\n\nconst monster = add([\n  sprite(\"monster\"),\n  scale(2),\n  pos(700,300),\n  z(1),\n  area(),\n  \"monster\",\n])\n\nconst speed = 350;\nconst enemeyspeed = 280;\n//Moving up\nonKeyDown(\"up\", ()=>{\n  monster.move(0, -speed)\n})\n\n//down\nonKeyDown(\"down\", ()=>{\n  monster.move(0, speed)\n})\n\n//left\nonKeyDown(\"left\", ()=>{\n  monster.move(-speed, 0)\n})\n\n//right\nonKeyDown(\"right\", ()=>{\n  monster.move(speed, 0)\n})\n\n//The game width and height\nconst gamewidth = 1000;\nconst gameheight = 600;\nwidth(()=>{\n  gamewidth\n})\n\nheight(()=>{\n  gameheight\n})\n\nconst Text = add([\n  text(\"Let me touch you :D\"),\n  pos(5, 5),\n  color(144, 238, 144),\n  scale(1),\n]);\n\nmonster.onCollide(\"people\",(people)=>{\n  destroy(monster)\n  play(\"score\")\n  add([\n    text(\"You lost\"),\n    pos(500,300),\n    scale(2),\n    color(255,0,0)\n  ])\n  \n})\n\n//Add people ai\nconst people = add([\n  sprite(\"people\"),\n  scale(2),\n  pos(200, 300),\n  area(),\n  state(\"move\", [ \"idle\",\"attack\", \"move\" ]),\n  \"people\",\n])\n\npeople.onStateEnter(\"idle\", async() =>{\n  await wait(0.5)\n  people.enterState(\"attack\")\n})\n\nconst SpaceBetweenMonsterAndPeople = 100;\n\npeople.onStateEnter(\"attack\", async () => {\n  const dir = monster.pos.sub(people.pos).unit();\n  add([\n    pos(people.pos),\n    move(dir),\n  ])\n\n  \n  people.enterState(\"move\")\n});\n\npeople.onStateEnter(\"move\", async () => {\n\tawait wait(2)\n\tpeople.enterState(\"idle\")\n})\n\n\npeople.onStateUpdate(\"move\", () => {\n\tif (!monster.exists()) return\n\tconst dir = monster.pos.sub(people.pos).unit()\n\tpeople.move(dir.scale(enemeyspeed))\n})\n\n//Note: a part of this code was from the kaboom website I used because this is my first time using it.\n\n//Add a timer(30 second)\nlet timeinsec = 30;\nlet timer = add([\n  text(`You have: ${timeinsec}s`),\n  pos(950,5),\n])\n\nfunction updateTimerDisplay() {\n  timer.text = `You have: ${timeinsec}s`;\n}\n\nloop(1, () => {\n  timeinsec--;\n  updateTimerDisplay();\n\n  \n  if (timeinsec <= 0) {\n    \n    destroy(timer);\n    timeinsec = 0;\n    add([\n      text(\"You Won\"),\n      pos(500,300),\n      scale(2),\n      color(255,0,0),\n      destroyAll()\n  ])\n    return;\n  }\n});"],
  "mappings": "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",
  "names": ["deg2rad", "deg", "rad2deg", "rad", "clamp", "val", "min", "max", "lerp", "a", "b", "t", "Vec2", "Color", "map", "v", "l1", "h1", "l2", "h2", "mapc", "vec2", "args", "rgb", "quad", "x", "y", "w", "h", "Quad", "wave", "lo", "hi", "f", "randSeed", "seed", "defRNG", "rand", "randi", "chance", "p", "choose", "list", "testRectRect", "r1", "r2", "testLineLineT", "denom", "ua", "ub", "testLineLine", "testRectLine", "r", "l", "testRectPoint", "pts", "Line", "pt", "testLinePoint", "v1", "v2", "testLineCircle", "circle", "centerToOrigin", "c", "dis", "t1", "t2", "testCirclePoint", "testCirclePolygon", "prev", "cur", "testPolygonPoint", "poly", "i", "j", "sat", "p1", "p2", "overlap", "displacement", "axisProj", "min1", "max1", "q", "min2", "max2", "o", "o1", "o2", "deepEq", "k1", "k2", "k", "base64ToArrayBuffer", "base64", "binstr", "len", "bytes", "dataURLToArrayBuffer", "url", "download", "filename", "downloadText", "text", "downloadJSON", "data", "downloadBlob", "blob", "anchorPt", "orig", "alignPt", "align", "createEmptyAudioBuffer", "ctx", "_Vec2", "_Color", "hsl2rgb", "Mat4", "A", "C", "M", "RNG", "Rect", "Circle", "Ellipse", "Polygon", "IDList", "EventController", "Event", "EventHandler", "isDataURL", "getExt", "uid", "BinaryHeap", "gamepad_default", "ButtonState", "GamepadState", "FPSCounter", "app_default", "c2", "c3", "c4", "c5", "easings", "easings_default", "Timer", "VERSION", "ASCII_CHARS", "DEF_ANCHOR", "BG_GRID_SIZE", "DEF_FONT", "DBG_FONT", "DEF_TEXT_SIZE", "DEF_TEXT_CACHE_SIZE", "MAX_TEXT_CACHE_SIZE", "FONT_ATLAS_WIDTH", "FONT_ATLAS_HEIGHT", "SPRITE_ATLAS_WIDTH", "SPRITE_ATLAS_HEIGHT", "UV_PAD", "DEF_HASH_GRID_SIZE", "DEF_FONT_FILTER", "LOG_MAX", "VERTEX_FORMAT", "STRIDE", "MAX_BATCHED_QUAD", "MAX_BATCHED_VERTS", "MAX_BATCHED_INDICES", "VERT_TEMPLATE", "FRAG_TEMPLATE", "DEF_VERT", "DEF_FRAG", "COMP_DESC", "COMP_EVENTS", "kaboom_default", "__name", "angle", "s", "normal", "on", "dest", "cos", "sin", "n", "m", "other", "__publicField", "g", "arr", "hex", "result", "hue2rgb", "m0", "m1", "m4", "m5", "out", "det", "f00", "f01", "f02", "f03", "f04", "f05", "f06", "f07", "f08", "f09", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", "pos", "width", "height", "dx", "dy", "center", "radius", "tr", "rx", "ry", "total", "id", "cancel", "events", "ev", "e", "action", "res", "name", "str", "compareFn", "item", "lastItem", "parent", "child", "index1", "index2", "btn", "dt", "opt", "state", "canvas", "time", "fps", "numFrames", "screenshot", "setCursor", "getCursor", "setCursorLocked", "isCursorLocked", "enterFullscreen", "el", "exitFullscreen", "getFullscreenElement", "setFullscreen", "isFullscreen", "quit", "canvasEvents", "docEvents", "winEvents", "resizeObserver", "run", "accumulatedDt", "frame", "loopTime", "realDt", "desiredDt", "processInput", "resetInput", "isTouchscreen", "mousePos", "mouseDeltaPos", "isMousePressed", "isMouseDown", "isMouseReleased", "isMouseMoved", "isKeyPressed", "isKeyPressedRepeat", "isKeyDown", "isKeyReleased", "isGamepadButtonPressed", "isGamepadButtonDown", "isGamepadButtonReleased", "onResize", "onKeyDown", "key", "onKeyPress", "onKeyPressRepeat", "onKeyRelease", "onMouseDown", "mouse", "onMousePress", "onMouseRelease", "onMouseMove", "onCharInput", "onTouchStart", "onTouchMove", "onTouchEnd", "onScroll", "onGamepadButtonDown", "onGamepadButtonPress", "onGamepadButtonRelease", "onGamepadStick", "stick", "onGamepadConnect", "onGamepadDisconnect", "getGamepadStick", "charInputted", "getGamepads", "processGamepad", "registerGamepad", "browserGamepad", "gamepad", "removeGamepad", "gamepadState", "stickName", "value", "MOUSE_BUTTONS", "PREVENT_DEFAULT_KEYS", "KEY_ALIAS", "touches", "kbGamepad", "entries", "entry", "sum", "gopt", "root", "gscale", "fixedSize", "cw", "ch", "pixelDensity", "styles", "fontCacheCanvas", "fontCacheCtx", "app", "gc", "gl", "Texture", "filter", "wrap", "img", "tex", "TexPacker", "FrameBuffer", "gfx", "defShader", "makeShader", "emptyTex", "frameBuffer", "bgColor", "bgAlpha", "vbuf", "offset", "ibuf", "bgTex", "SpriteData", "frames", "anims", "slice9", "src", "assets", "slice", "loadImg", "SoundData", "buf", "resolve", "reject", "audio", "fetchArrayBuffer", "masterNode", "burpSnd", "burp_default", "err", "Asset", "loader", "asset", "AssetBucket", "handle", "loaded", "game", "make", "load", "prom", "loadProgress", "buckets", "bucket", "loadRoot", "path", "fetchURL", "fetchJSON", "fetchText", "loadJSON", "FontData", "face", "loadFont", "font", "loadBitmapFont", "gw", "gh", "makeFont", "qw", "qh", "loadSpriteAtlas", "rej", "json", "atlas", "info", "spr", "createSpriteSheet", "images", "merged", "loadSprite", "loadPedit", "loadAseprite", "imgSrc", "jsonSrc", "resolveJSON", "size", "anim", "loadShader", "vert", "frag", "loadShaderURL", "resolveUrl", "vcode", "fcode", "loadSound", "opts", "loadBean", "bean_default", "getSprite", "getSound", "getFont", "getBitmapFont", "getShader", "getAsset", "resolveSprite", "resolveSound", "snd", "resolveShader", "shader", "resolveFont", "bfont", "volume", "play", "paused", "srcNode", "onEndEvents", "gainNode", "startTime", "stopTime", "started", "getTime", "start", "d", "cloneNode", "oldNode", "newNode", "burp", "vertSrc", "fragSrc", "vertShader", "fragShader", "prog", "formatShaderError", "msg", "FMT", "match", "vertError", "fragError", "uniform", "loc", "chars", "cols", "charMap", "drawRaw", "verts", "indices", "fixed", "shaderSrc", "flush", "transform", "screen2ndc", "frameStart", "drawUnscaled", "drawUVQuad", "usePostEffect", "frameEnd", "ow", "oh", "drawTexture", "pushMatrix", "pushTranslate", "pushScale", "pushRotate", "pushTransform", "popTransform", "color", "opacity", "uvPadX", "uvPadY", "qx", "qy", "scale", "repX", "repY", "drawSprite", "getArcPts", "radiusX", "radiusY", "end", "nverts", "step", "drawRect", "drawPolygon", "drawLine", "drawLines", "minSLen", "drawCircle", "drawTriangle", "drawEllipse", "polyOpt", "npts", "drawStenciled", "content", "mask", "test", "drawMasked", "drawSubtracted", "getViewportScale", "applyCharTransform", "fchar", "TEXT_STYLE_RE", "compileStyledText", "charStyleMap", "renderText", "idxOffset", "origIdx", "fontAtlases", "formatText", "fontName", "c2d", "lineSpacing", "letterSpacing", "curX", "tw", "th", "lines", "curLine", "cursor", "lastSpace", "lastSpaceWidth", "fchars", "line", "ox", "idx", "style", "drawText", "drawFormattedText", "ftext", "windowToContent", "contentToView", "handleErr", "debug", "updateFrame", "camPos", "camScale", "camRot", "shake", "intensity", "toScreen", "toWorld", "calcTransform", "obj", "comps", "compStates", "cleanups", "onCurCompCleanup", "trigger", "tag", "comp", "prop", "func", "checkDeps", "dep", "recurse", "isChild", "onAdd", "onDestroy", "ctrl", "cb", "event", "onUpdate", "add", "onDraw", "onCollide", "col", "onCollideUpdate", "onCollideEnd", "forAllCurrentAndFuture", "get", "onClick", "onHover", "onHoverUpdate", "onHoverEnd", "wait", "actions", "loop", "curTimer", "newAction", "enterDebugMode", "toFixed", "enterBurpMode", "setGravity", "getGravity", "setBackground", "getBackground", "speed", "diff", "rotate", "easeFunc", "tween", "anchor", "z", "follow", "move", "dir", "DEF_OFFSCREEN_DIS", "offscreen", "distance", "isOut", "screenRect", "area", "colliding", "collidingThisFrame", "mpos", "hovering", "localArea", "_a", "getRenderProps", "sprite", "spriteData", "curAnim", "spriteLoadedEvent", "calcTexScale", "_b", "left", "right", "top", "bottom", "iw", "ih", "w1", "w3", "w2", "h3", "quads", "uv", "setSpriteData", "onLoad", "prevAnim", "update", "rect", "uvquad", "outline", "timer", "from", "to", "duration", "setValue", "curTime", "DEF_JUMP_FORCE", "MAX_VEL", "body", "vel", "curPlatform", "lastPlatformPos", "wantFall", "tmass", "col2", "prevVelY", "force", "doubleJump", "numJumps", "jumpsLeft", "stay", "scenesToStay", "health", "hp", "lifespan", "fade", "initState", "stateList", "transitions", "initStateEvents", "didFirstEnter", "oldState", "available", "fadeIn", "done", "scene", "def", "go", "onSceneLeave", "getData", "setData", "plug", "plugin", "funcs", "EdgeMask", "tile", "tilePos", "isObstacle", "cost", "edges", "getEdgeMask", "loopup", "edgeMask", "level", "is", "addLevel", "numRows", "numColumns", "spatialMap", "costMap", "edgeMap", "connectivityMap", "tile2Hash", "hash2Tile", "hash", "createSpatialMap", "insertIntoSpatialMap", "removeFromSpatialMap", "index", "updateSpatialMap", "spatialMapChanged", "createCostMap", "objects", "createEdgeMap", "createConnectivityMap", "traverse", "frontier", "getNeighbours", "getCost", "node", "neighbour", "getHeuristic", "goal", "diagonals", "levelComp", "hasPos", "hasTile", "cameFrom", "costSoFar", "current", "neighbours", "next", "newCost", "row", "keys", "agent", "target", "navMapChangedEvent", "record", "frameRate", "stream", "audioDest", "recorder", "chunks", "isFocused", "destroy", "readd", "destroyAll", "boom", "kaSprite", "ka_default", "boomSprite", "boom_default", "addKaboom", "kaboom", "ka", "Collision", "source", "resolved", "checkFrame", "grid", "cellSize", "stack", "checkObj", "aobj", "bbox", "xmin", "ymin", "xmax", "ymax", "checked", "cell", "check", "col1", "drawFrame", "cam", "drawLoadScreen", "progress", "drawInspectText", "txt", "pad", "ftxt", "bw", "bh", "drawDebug", "inspecting", "flipped", "onLoading", "onError", "textStyle", "title", "onCleanup", "numTextureUnits", "unit", "isFirstFrame", "updateViewport", "pd", "ww", "wh", "rw", "rc", "sw", "sh", "rg", "people"]
}
